function $$CookieWriter(e,o,n){function t(e,n,t){var i,u;t=t||{},u=t.expires,i=angular.isDefined(t.path)?t.path:r,void 0===n&&(u="Thu, 01 Jan 1970 00:00:00 GMT",n=""),angular.isString(u)&&(u=new Date(u));var a=encodeURIComponent(e)+"="+encodeURIComponent(n);a+=i?";path="+i:"",a+=t.domain?";domain="+t.domain:"",a+=u?";expires="+u.toUTCString():"",a+=t.secure?";secure":"";var c=a.length+1;return c>4096&&o.warn("Cookie '"+e+"' possibly not set or overflowed because it was too large ("+c+" > 4096 bytes)!"),a}var r=n.baseHref(),i=e[0];return function(e,o,n){i.cookie=t(e,o,n)}}angular.module("ngCookies",["ng"]).provider("$cookies",[function(){function e(e){return e?angular.extend({},o,e):o}var o=this.defaults={};this.$get=["$$cookieReader","$$cookieWriter",function(o,n){return{get:function(e){return o()[e]},getObject:function(e){var o=this.get(e);return o?angular.fromJson(o):o},getAll:function(){return o()},put:function(o,t,r){n(o,t,e(r))},putObject:function(e,o,n){this.put(e,angular.toJson(o),n)},remove:function(o,t){n(o,void 0,e(t))}}}]}]),$$CookieWriter.$inject=["$document","$log","$browser"],angular.module("ngCookies").provider("$$cookieWriter",function(){this.$get=$$CookieWriter}),angular.module("ngCookies").factory("$cookieStore",["$cookies",function(e){return{get:function(o){return e.getObject(o)},put:function(o,n){e.putObject(o,n)},remove:function(o){e.remove(o)}}}]);