!function(angular){angular.module("ng").run(["$q",function($q){$q.proxy=function(jqueryPromise){return jqueryPromise&&angular.isFunction(jqueryPromise.then)?$q(function(resolve,reject){jqueryPromise.done(resolve).fail(reject)}):$q.when(jqueryPromise)}}]);var moduleDefineResolvers={translate:{requires:"pascalprecht.translate",register:function(module,config){config&&config.lang&&module.config(["$translateProvider",function($translateProvider){$translateProvider.translations(config.lang,config.data).preferredLanguage(config.lang)}])}},prompter:{requires:"prompter",register:function(module,config){module.config(["$prompterProvider",function($prompterProvider){$prompterProvider.as(config)}])}}};angular.quickstart=function(rootElement,options,moduleConfig){for(var moduleName="",moduleRequires=[],moduleDefines={},moduleRegister=angular.noop,i=0;i<8;i++)moduleName+=(65536*(1+Math.random())|0).toString(16).substring(1);angular.isArray(moduleConfig)?(moduleRequires=moduleConfig.slice(0),angular.isFunction(moduleRequires[moduleRequires.length-1])&&(moduleRegister=moduleRequires.pop()),angular.isObject(moduleRequires[moduleRequires.length-1])&&(moduleDefines=moduleRequires.pop())):angular.isFunction(moduleConfig)?moduleRegister=moduleConfig:angular.isObject(moduleConfig)&&(moduleDefines=moduleConfig),angular.forEach(moduleDefines,function(config,key){var resolver=moduleDefineResolvers[key];resolver&&resolver.requires&&(angular.isArray(resolver.requires)?moduleRequires.push.apply(moduleRequires,resolver.requires):moduleRequires.push(resolver.requires))});var module=angular.module(moduleName,moduleRequires);angular.forEach(moduleDefines,function(config,key){var resolver=moduleDefineResolvers[key];resolver&&angular.isFunction(resolver.register)&&resolver.register(module,config)}),moduleRegister(module),options=options||{},module.run(["$q","$http","$templateCache","$controller","$compile","$rootScope",function($q,$http,$templateCache,$controller,$compile,$rootScope){var tempatelPromise=options.template?$q.when(options.template):options.templateUrl?$http.get(angular.isFunction(options.templateUrl)?options.templateUrl():options.templateUrl,{cache:$templateCache}).then(function(result){return result.data}):$q.when(""),templateScope=options.scope||$rootScope.$new();if(options.controller){var ctrlInstance=$controller(options.controller,angular.extend({$scope:templateScope,$element:rootElement},options.locals));options.controllerAs&&(templateScope[options.controllerAs]=ctrlInstance)}tempatelPromise.then(function(tpl){$compile(tpl)(templateScope,function(el){angular.element(rootElement).append(el)})})}]),angular.bootstrap(rootElement,[moduleName])}}(window.angular);