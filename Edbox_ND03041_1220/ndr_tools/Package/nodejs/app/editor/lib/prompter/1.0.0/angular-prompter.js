define(["angular","prompter"],function(angular,basePrompter){function prompterProvider(){return{$get:prompterFactory,as:function(theme){defaultTheme=theme}}}function prompterFactory($timeout,$q,$http,$templateCache,$controller,$compile,$rootScope){function proxyLayerCtrl(ctrl){return ctrl.thenClose(function(){$timeout()}).thenOpen(function(){$timeout()}),ctrl}function PrompterProxy(theme){var prompter=angular.isObject(theme)?theme:basePrompter.as(theme),$prompter={message:function(text){return prompter.message(text)},wait:function(text,backdrop){return prompter.wait(text,backdrop)},counter:function(text,total,backdrop){var counter=prompter.counter(text,total,backdrop);return counter.promise.always(function(){$timeout()}),counter},progress:function(text,cancelable,backdrop){var progress=prompter.progress(text,cancelable,backdrop);return progress.promise.always(function(){$timeout()}),progress},complete:function(){prompter.complete()},createDialog:function(options,contentOptions){options&&!options.content&&(options.template||options.templateUrl)&&(options=angular.extend({content:function(bodyEl,cop,layer){var tempatelPromise=options.template?$q.when(options.template):options.templateUrl?$http.get(angular.isFunction(options.templateUrl)?options.templateUrl():options.templateUrl,{cache:$templateCache}).then(function(result){return result.data}):$q.when(""),templateScope=(options.scope||$rootScope).$new();if(options.controller){var ctrlInstance=$controller(options.controller,{$scope:templateScope,layer:layer});options.controllerAs&&(templateScope[options.controllerAs]=ctrlInstance)}tempatelPromise.then(function(tpl){$compile(tpl)(templateScope,function(el){angular.element(bodyEl).append(el)})})}},options));var layer=prompter.createDialog(options,contentOptions);return layer._open_=layer.open,layer.open=function(){return proxyLayerCtrl(layer._open_())},layer},dialog:function(options,contentOptions){return $prompter.createDialog(options,contentOptions).open()},as:function(theme){return new PrompterProxy(theme)}};return function(fnNames){angular.forEach(fnNames,function(fnName){$prompter[fnName]=angular.bind(fnName,function(){return proxyLayerCtrl(prompter[this].apply(prompter,arguments))})})}(["prompt","info","success","warn","alert","error","confirm","ask","input","choice"]),angular.forEach(["message","success","info","warn","alert","error"],function(fnName){$prompter[fnName+"If"]=prompter[fnName+"If"]}),$prompter}return new PrompterProxy(defaultTheme)}angular.module("prompter",[]).provider("$prompter",prompterProvider);var defaultTheme;prompterFactory.$inject=["$timeout","$q","$http","$templateCache","$controller","$compile","$rootScope"]});