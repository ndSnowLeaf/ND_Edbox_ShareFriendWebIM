"use strict";function RollingFileSync(e,n,i,t){debug("In RollingFileStream"),function(){if(!e||!n||n<=0)throw new Error("You must specify a filename and file size")}(),this.filename=e,this.size=n,this.backups=i||1,this.options=t||{encoding:"utf8",mode:parseInt("0644",8),flags:"a"},this.currentSize=0,this.currentSize=function(n){var i=0;try{i=fs.statSync(n).size}catch(n){fs.appendFileSync(e,"")}return i}(this.filename)}function fileAppender(e,n,i,t,r){debug("fileSync appender created");e=path.normalize(e),n=n||layouts.basicLayout,t=void 0===t?5:t,t=0===t?1:t;var o=function(e,n,i){return n?new RollingFileSync(e,n,i):function(e){return fs.existsSync(e)||fs.appendFileSync(e,""),{write:function(n){fs.appendFileSync(e,n)}}}(e)}(e,i,t);return function(e){o.write(n(e,r)+eol)}}function configure(e,n){var i;return e.layout&&(i=layouts.layout(e.layout.type,e.layout)),n&&n.cwd&&!e.absolute&&(e.filename=path.join(n.cwd,e.filename)),fileAppender(e.filename,i,e.maxLogSize,e.backups,e.timezoneOffset)}var debug=require("../debug")("fileSync"),layouts=require("../layouts"),path=require("path"),fs=require("fs"),streams=require("../streams/index"),os=require("os"),eol=os.EOL||"\n";RollingFileSync.prototype.shouldRoll=function(){return debug("should roll with current size %d, and max size %d",this.currentSize,this.size),this.currentSize>=this.size},RollingFileSync.prototype.roll=function(e){function n(e){return s.test(e)}function i(n){return parseInt(n.substring((path.basename(e)+".").length),10)||0}function t(e,n){return i(e)>i(n)?1:i(e)<i(n)?-1:0}function r(n){var t=i(n);if(debug("Index of "+n+" is "+t),t<o.backups){try{fs.unlinkSync(e+"."+(t+1))}catch(e){}debug("Renaming "+n+" -> "+e+"."+(t+1)),fs.renameSync(path.join(path.dirname(e),n),e+"."+(t+1))}}var o=this,s=new RegExp("^"+path.basename(e));debug("Rolling, rolling, rolling"),function(){debug("Renaming the old files"),fs.readdirSync(path.dirname(e)).filter(n).sort(t).reverse().forEach(r)}()},RollingFileSync.prototype.write=function(e,n){var i=this;debug("in write"),this.shouldRoll()&&(this.currentSize=0,this.roll(this.filename)),function(){debug("writing the chunk to the file"),i.currentSize+=e.length,fs.appendFileSync(i.filename,e)}()},exports.appender=fileAppender,exports.configure=configure;