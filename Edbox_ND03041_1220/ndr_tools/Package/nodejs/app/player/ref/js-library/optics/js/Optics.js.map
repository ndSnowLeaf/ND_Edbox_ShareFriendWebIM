{"version":3,"sources":["webpack:///webpack/bootstrap 042dbf47e1ea87fd5014","webpack:///./index.js","webpack:///./src/components/optics/Optics.js","webpack:///./src/components/optics/IncidentRay.js","webpack:///./src/components/optics/BaseView.js","webpack:///./src/components/optics/Arrow.js","webpack:///./src/components/optics/OperationButton.js","webpack:///./src/components/optics/PublishSubscribe.js","webpack:///./src/components/optics/Angle.js","webpack:///./src/components/optics/Normal.js","webpack:///./src/components/optics/ReflectedRay.js","webpack:///./src/components/optics/RefractedRay.js","webpack:///./src/components/optics/CriticalAngleRay.js"],"names":["PublishSubscribe","window","Optics","opt","_container","container","_publishSubscribe","_viewboxWidth","viewboxWidth","_viewboxHeight","viewboxHeight","_name","name","_svg","undefined","_normal","_incidentRay","_reflectedRay","_refractedRay","_criticalAngleRay","init","Snap","attr","width","getBoundingClientRect","height","viewBox","$","extend","svg","appendChild","node","addEventListener","e","operationButton","rotateButtonDowned","publish","OnIncidentRayRotateButtonUpEvent","inAngle","angleValue","rotateAngle","value","IncidentRay","_oldMousePos","lineLength","incidentRayLength","lineWidth","incidentRayWidth","lineColor","incidentRayColor","opacity","incidentOpacity","visibility","incidentRayVisibility","arrowPos","incidentRayArrowPos","limitRotate","incidentRayLimitRotate","_incidentRayGroupNode","_incidentRayNode","_arrow","color","_operationButton","angleFillColor","incidentAngleFillColor","angleFillOpacity","incidentAngleFillOpacity","angleStrokeColor","incidentAngleStrokeColor","angleRadius","incidentAngleRadius","_calcIncidentAngle","_angle","_calcIncidentAngleRotateAngle","rotatePoint","angleTextSize","incidentAngleTextSize","angleTextColor","incidentAngleTextColor","angleTextInterval","incidentAngleTextInterval","paper","g","path","d","fill","transform","getBBox","add","arrowNode","operationButtonGroupNode","upIncidentRayNode","clone","x","y","angleTextNode","text","fontSize","fontWeight","angleTextVisibility","angleTextPosition","calcAngleTextPosition","subscribe","OnIncidentRayRotateButtonDownEvent","topic","args","rotateButtonMouseDowned","stroke","strokeWidth","mouseup","id","mousemove","rotate","_realRotateAngle","left","top","rx","_ratioX","ry","_ratioY","xdiff","ydiff","Math","PI","atan","_limitRotateAngle","rotateHandler","angleVisibility","drawAngleValue","OnIncidentAngleChangedEvent","isShow","show","limit","minAngle","maxAngle","abs","Number","toFixed","ra","BaseView","_id","uuid","_rotateAngle","incidentRayDefaultRotateAngle","_refractiveIndex","refractiveIndex","_criticalAngle","asin","_lineColor","_lineLength","_lineWidth","_opacity","_arrowPos","_visibility","_limitRotate","_rotatePoint","_angleFillColor","_angleFillOpacity","isNaN","_angleStrokeColor","_angleRadius","_angleVisibility","_angleValue","_angleTextSize","_angleTextColor","_angleTextInterval","_angleTextVisibility","_angleTextNode","atn","pos","sin","cos","s","hexDigits","i","substr","floor","random","join","Arrow","_color","_arrowNode","OperationButton","_opt","_operationButtonGroupNode","_rotateButtonGroupNode","_rotateButtonDowned","mousedown","select","topics","subs","iLen","length","func","token","topicIndex","toString","push","queues","OnTotalReflectionEvent","Symbol","for","Angle","_angleNode","endX","endY","Normal","normalLength","normalWidth","normalOpacity","normalVisibility","_normalGroupNode","_normalNode","_rightAngleNode","line","x1","y1","x2","y2","strokeDasharray","ReflectedRay","reflectedRayLength","reflectedRayWidth","reflectedRayOpacity","reflectedRayLineColor","reflectedRayVisibility","reflectedRayArrowPos","_reflectedRayGroupNode","_reflectedRayNode","_calcReflectedRotateAngle","reflectedAngleFillColor","reflectedAngleFillOpacity","reflectedAngleStrokeColor","reflectedAngleRadius","_calcReflectedAngle","_calcReflectedAngleRotateAngle","reflectedAngleTextSize","reflectedAngleTextColor","reflectedAngleTextInterval","roAngle","reflectedAngle","incidentRotateAngle","RefractedRay","refractedRayLength","refractedRayWidth","refractedRayLineColor","refractedRayOpacity","refractedRayArrowPos","refractedRayVisibility","_refractedRayGroupNode","_refractedRayNode","_calcRefractedRotateAngle","refractedAngleFillColor","refractedAngleFillOpacity","refractedAngleStrokeColor","refractedAngleRadius","_calcRefractedAngle","_calcRefractedAngleRotateAngle","refractedAngleTextSize","refractedAngleTextColor","refractedAngleTextInterval","refractedSinVal","refractedAngle","CriticalAngleRay","criticalAngleRayLength","criticalAngleRayWidth","criticalAngleRayColor","criticalAngleRayOpacity","criticalAngleRayVisibility","_clacRotateAngle","_criticalAngleRayGroupNode","_criticalAngleRayNode","criticalAngle"],"mappings":"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","file":"Optics.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://192.168.251.81:8080/build\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 042dbf47e1ea87fd5014","import Optics from './src/components/optics/Optics';\r\nimport PublishSubscribe from './src/components/optics/PublishSubscribe';\r\n\r\nOptics.PublishSubscribe = PublishSubscribe;\r\nwindow['Optics'] = Optics;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\r\n * 光路相关操作的核心类\r\n */\r\nimport IncidentRay from './IncidentRay';\r\nimport Normal from './Normal';\r\nimport ReflectedRay from './ReflectedRay';\r\nimport RefractedRay from './RefractedRay';\r\nimport CriticalAngleRay from './CriticalAngleRay';\r\nimport PublishSubscribe from './PublishSubscribe';\r\n\r\nexport default class Optics {\r\n    constructor(opt) {\r\n        //存在SVG的容器\r\n        this._container = opt.container;\r\n        this._publishSubscribe = PublishSubscribe;\r\n        this._viewboxWidth = opt.viewboxWidth = opt.viewboxWidth ? opt.viewboxWidth : 1500;\r\n        this._viewboxHeight = opt.viewboxHeight = opt.viewboxHeight ? opt.viewboxHeight : 1000;\r\n        this._name = opt.name;\r\n        //snap的svg对象\r\n        this._svg = undefined;\r\n        this._normal = undefined;\r\n        this._incidentRay = undefined;\r\n        this._reflectedRay = undefined;\r\n        this._refractedRay = undefined;\r\n        this._criticalAngleRay = undefined;\r\n        this.init(opt);\r\n    }\r\n\r\n    init(opt) {\r\n        this._svg = Snap().attr({\r\n            width: this._container.getBoundingClientRect().width,\r\n            height: this._container.getBoundingClientRect().height,\r\n            viewBox: `0 0 ${this._viewboxWidth} ${this._viewboxHeight}`\r\n        });\r\n        $.extend(opt, {svg: this._svg});\r\n        this._container.appendChild(this._svg.node);\r\n\r\n        //法线\r\n        this._normal = new Normal(opt);\r\n        this._normal = this._normal.init();\r\n\r\n        //反射线\r\n        this._reflectedRay = new ReflectedRay(opt);\r\n        this._reflectedRay = this._reflectedRay.init();\r\n\r\n        //入射线\r\n        this._incidentRay = new IncidentRay(opt);\r\n        this._incidentRay = this._incidentRay.init();\r\n\r\n        //折射线\r\n        this._refractedRay = new RefractedRay(opt);\r\n        this._refractedRay = this._refractedRay.init(this._svg);\r\n\r\n        //临界角线\r\n        this._criticalAngleRay = new CriticalAngleRay(opt);\r\n        this._criticalAngleRay.init();\r\n\r\n        this._svg.node.addEventListener('mouseleave', (e) => {\r\n            if (!this._incidentRay.operationButton.rotateButtonDowned) {\r\n                return;\r\n            }\r\n            this._incidentRay.operationButton.rotateButtonDowned = false;\r\n            PublishSubscribe.publish(PublishSubscribe.OnIncidentRayRotateButtonUpEvent, {\r\n                name: opt.name,\r\n                inAngle: this._incidentRay.angleValue,\r\n                rotateAngle: this._incidentRay.rotateAngle\r\n            });\r\n        });\r\n    }\r\n\r\n    get incidentRay() {\r\n        return this._incidentRay;\r\n    }\r\n\r\n    set incidentRay(value) {\r\n        this._incidentRay = value;\r\n    }\r\n\r\n    get normal() {\r\n        return this._normal;\r\n    }\r\n\r\n    set normal(value) {\r\n        this._normal = value;\r\n    }\r\n\r\n    get reflectedRay() {\r\n        return this._reflectedRay;\r\n    }\r\n\r\n    set reflectedRay(value) {\r\n        this._reflectedRay = value;\r\n    }\r\n\r\n    get refractedRay() {\r\n        return this._refractedRay;\r\n    }\r\n\r\n    set refractedRay(value) {\r\n        this._refractedRay = value;\r\n    }\r\n\r\n    get publishSubscribe() {\r\n        return this._publishSubscribe;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value) {\r\n        this._name = value;\r\n    }\r\n\r\n    get svg() {\r\n        return this._svg;\r\n    }\r\n\r\n    set svg(value) {\r\n        this._svg = value;\r\n    }\r\n\r\n    get criticalAngleRay() {\r\n        return this._criticalAngleRay;\r\n    }\r\n\r\n    set criticalAngleRay(value) {\r\n        this._criticalAngleRay = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/Optics.js","/**\r\n * 入射线类\r\n */\r\nimport BaseView from './BaseView';\r\nimport Arrow from './Arrow';\r\nimport OperationButton from './OperationButton';\r\nimport Angle from './Angle';\r\nimport PublishSubscribe from './PublishSubscribe';\r\n\r\nexport default class IncidentRay extends BaseView {\r\n    constructor(opt) {\r\n        super(opt);\r\n        //没限制，应该旋转的角度\r\n        this._oldMousePos = undefined;\r\n        //线条长度\r\n        this.lineLength = opt.incidentRayLength || this.lineLength;\r\n        //线条宽度\r\n        this.lineWidth = opt.incidentRayWidth || this.lineWidth;\r\n        //线条颜色\r\n        this.lineColor = opt.incidentRayColor || this.lineColor;\r\n        //透明度\r\n        this.opacity = opt.incidentOpacity || this.opacity;\r\n        //是否显示线条\r\n        this.visibility = opt.incidentRayVisibility === undefined ? this.visibility : opt.incidentRayVisibility;\r\n        //箭头位置\r\n        this.arrowPos = opt.incidentRayArrowPos || this.arrowPos;\r\n        //限制旋转的范围\r\n        this.limitRotate = $.extend({}, this.limitRotate, opt.incidentRayLimitRotate);\r\n\r\n        //入射线组，包括箭头、旋转按钮、入射线\r\n        this._incidentRayGroupNode = undefined;\r\n        //入射线的节点\r\n        this._incidentRayNode = undefined;\r\n        //箭头\r\n        this._arrow = new Arrow($.extend({}, opt, {color: this.lineColor, opacity: this.opacity}));\r\n        //旋转按钮\r\n        this._operationButton = new OperationButton(opt);\r\n        //入射角填充色\r\n        this.angleFillColor = opt.incidentAngleFillColor || this.angleFillColor;\r\n        //角度透明度\r\n        this.angleFillOpacity = opt.incidentAngleFillOpacity || this.angleFillOpacity;\r\n        //入射角描边色\r\n        this.angleStrokeColor = opt.incidentAngleStrokeColor || this.angleStrokeColor;\r\n        //入射角半径\r\n        this.angleRadius = opt.incidentAngleRadius || this.angleRadius;\r\n        //入射线角度值\r\n        this.angleValue = this._calcIncidentAngle(this.rotateAngle);\r\n        //入射角\r\n        this._angle = new Angle($.extend({}, opt, {\r\n            angleFillColor: this.angleFillColor,\r\n            angleFillOpacity: this.angleFillOpacity,\r\n            angleStrokeColor: this.angleStrokeColor,\r\n            angleRadius: this.angleRadius,\r\n            angleValue: this.angleValue,\r\n            rotateAngle: this._calcIncidentAngleRotateAngle(this.rotateAngle),\r\n            rotatePoint: this.rotatePoint\r\n        }));\r\n\r\n        //入射角度文字的大小\r\n        this.angleTextSize = opt.incidentAngleTextSize || this.angleTextSize;\r\n        //入射角度文字的颜色\r\n        this.angleTextColor = opt.incidentAngleTextColor || this.angleTextColor;\r\n        //入射角度文字的与旋转点的间距\r\n        this.angleTextInterval = opt.incidentAngleTextInterval || this.angleTextInterval;\r\n    }\r\n\r\n    init() {\r\n\r\n        //入射角\r\n        this._angle.init();\r\n\r\n        this._incidentRayGroupNode = this.svg.paper.g({\r\n            visibility: this.visibility\r\n        });\r\n        this._incidentRayNode = this.svg.paper.path().attr({\r\n            d: `M 0 0 h ${this.lineLength} v ${this.lineWidth} h ${-this.lineLength} z`,\r\n            fill: this.lineColor\r\n        });\r\n\r\n        this._incidentRayNode.attr({\r\n            transform: `translate(0,${-this._incidentRayNode.getBBox().height / 2})`\r\n        });\r\n        this._incidentRayGroupNode.add(this._incidentRayNode);\r\n        //箭头\r\n        this._arrow.init();\r\n        this._arrow.arrowNode.attr({\r\n            transform: `translate(${this.arrowPos},${-this._arrow.arrowNode.getBBox().height / 2})`\r\n        });\r\n        this._incidentRayGroupNode.add(this._arrow.arrowNode);\r\n        //旋转按钮\r\n        this._operationButton.init();\r\n        this._incidentRayGroupNode.add(this._operationButton.operationButtonGroupNode);\r\n\r\n        let upIncidentRayNode = this._incidentRayNode.clone();\r\n        this._incidentRayGroupNode.add(upIncidentRayNode);\r\n\r\n        //移到默认旋转点位置，旋转默认角度\r\n        this._incidentRayGroupNode.attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength},${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle},${this.lineLength},0)`,\r\n            opacity: this.opacity\r\n        });\r\n\r\n        //显示度数文字\r\n        this.angleTextNode = this.svg.paper.text().attr({\r\n            text: `${this.angleValue}°`,\r\n            fill: this.angleTextColor,\r\n            fontSize: this.angleTextSize,\r\n            fontWeight: 'bold',\r\n            transform: `translate(${this.rotatePoint.x},${this.rotatePoint.y})`,\r\n            visibility: this.angleTextVisibility\r\n        });\r\n        this.angleTextPosition = this.calcAngleTextPosition(this.rotateAngle, this.angleTextNode);\r\n        this.angleTextNode.attr({\r\n            x: this.angleTextPosition.x,\r\n            y: this.angleTextPosition.y\r\n        });\r\n\r\n        //监听旋转down事件\r\n        PublishSubscribe.subscribe(PublishSubscribe.OnIncidentRayRotateButtonDownEvent, (topic, args) => {\r\n            if (args.name !== this.name) {\r\n                return;\r\n            }\r\n            this.rotateButtonMouseDowned = true;\r\n            //入射线高亮\r\n            this._incidentRayNode.attr({\r\n                stroke: '#fff',\r\n                strokeWidth: 3\r\n            });\r\n            //箭头高亮\r\n            this._arrow.arrowNode.attr({\r\n                stroke: '#fff',\r\n                strokeWidth: 2\r\n            });\r\n        });\r\n        //监听旋转up事件\r\n        PublishSubscribe.subscribe(PublishSubscribe.OnIncidentRayRotateButtonUpEvent, (topic, args) => {\r\n            if (args.name !== this.name) {\r\n                return;\r\n            }\r\n            this.rotateButtonMouseDowned = false;\r\n            //去掉入射线高亮\r\n            this._incidentRayNode.attr({\r\n                stroke: 'none'\r\n            });\r\n            //去掉箭头高亮\r\n            this._arrow.arrowNode.attr({\r\n                stroke: 'none'\r\n            });\r\n        });\r\n\r\n        this.svg.mouseup((e, x, y) => {\r\n            if (!this.operationButton.rotateButtonDowned) {\r\n                return;\r\n            }\r\n            this.operationButton.rotateButtonDowned = false;\r\n            PublishSubscribe.publish(PublishSubscribe.OnIncidentRayRotateButtonUpEvent, {\r\n                id: this.id,\r\n                name: this.name,\r\n                inAngle: this.angleValue,\r\n                rotateAngle: this.rotateAngle\r\n            });\r\n        });\r\n\r\n        this.svg.mousemove((e, x, y) => {\r\n            this.rotateButtonMouseDowned && this.rotate(x, y);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    rotate(x, y) {\r\n        this._realRotateAngle = this.rotateAngle;\r\n        x = x - this.svg.node.getBoundingClientRect().left;\r\n        y = y - this.svg.node.getBoundingClientRect().top;\r\n        let rx = this.rotatePoint.x / this._ratioX, ry = this.rotatePoint.y / this._ratioY - this.lineWidth / 2;\r\n        let xdiff = x - rx, ydiff = y - ry;\r\n        if (xdiff === 0) {\r\n            this.rotateAngle = y > ry ? 270 : 90;\r\n        } else {\r\n            this.rotateAngle = 180 / Math.PI * Math.atan(ydiff / xdiff);\r\n            if (this.rotateAngle === 0) {\r\n                this.rotateAngle = x <= rx ? 0 : 180;\r\n            } else if (this.rotateAngle < 0) {\r\n                this.rotateAngle = y >= ry ? 360 + this.rotateAngle : 180 + this.rotateAngle;\r\n            } else {\r\n                this.rotateAngle = y >= ry ? 180 + this.rotateAngle : this.rotateAngle;\r\n            }\r\n        }\r\n        this.rotateAngle = this.rotateAngle % 360;\r\n\r\n        //如果有限制旋转范围要计算出最终的旋转度数\r\n        this._limitRotateAngle();\r\n        this.rotateHandler();\r\n    }\r\n\r\n    rotateHandler() {\r\n        this._incidentRayGroupNode.attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength},${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle},${this.lineLength},0)`,\r\n            visibility: this.visibility\r\n        });\r\n        //角度值也要变化\r\n        this.angleValue = this._calcIncidentAngle(this.rotateAngle);\r\n        this._angle.angleValue = this.angleValue;\r\n        this._angle.rotateAngle = this._calcIncidentAngleRotateAngle(this.rotateAngle);\r\n        this._angle.angleVisibility = this.angleVisibility;\r\n        this._angle.drawAngleValue();\r\n        //变换度数文字位置\r\n        this.angleTextNode.attr({\r\n            text: `${this.angleValue}°`\r\n        });\r\n        this.angleTextPosition = this.calcAngleTextPosition(this.rotateAngle, this.angleTextNode);\r\n        this.angleTextNode.attr({\r\n            x: this.angleTextPosition.x,\r\n            y: this.angleTextPosition.y,\r\n            visibility: this.angleTextVisibility\r\n        });\r\n\r\n        //发布入射角发生变化事件\r\n        PublishSubscribe.publish(PublishSubscribe.OnIncidentAngleChangedEvent, {\r\n            inAngle: this.angleValue,\r\n            rotateAngle: this.rotateAngle,\r\n            id: this.id,\r\n            name: this.name\r\n        });\r\n    }\r\n\r\n    changeRotateAngle(value) {\r\n        this.rotateAngle = value % 360;\r\n        this.rotateHandler();\r\n    }\r\n\r\n    showLine(isShow) {\r\n        this.visibility = isShow ? 'visible' : 'hidden';\r\n        this._incidentRayGroupNode.attr({\r\n            visibility: this.visibility\r\n        });\r\n    }\r\n\r\n    showAngle(isShow) {\r\n        this.angleVisibility = isShow ? 'visible' : 'hidden';\r\n        this._angle.show(isShow);\r\n    }\r\n\r\n    showAngleText(isShow) {\r\n        this.angleTextVisibility = isShow ? 'visible' : 'hidden';\r\n        this.angleTextNode.attr({\r\n            visibility: this.angleTextVisibility\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 如果有限制旋转度数的话，限制在旋转度数范围之内\r\n     * @private\r\n     */\r\n    _limitRotateAngle() {\r\n        if (!this.limitRotate.limit || this.rotateAngle > this.limitRotate.minAngle && this.rotateAngle < this.limitRotate.maxAngle) {\r\n            return this.rotateAngle;\r\n        }\r\n\r\n        if (Math.abs(this.rotateAngle - this.limitRotate.minAngle % 360) <= Math.abs(this.rotateAngle - this.limitRotate.maxAngle % 360)) {\r\n            this.rotateAngle = this._realRotateAngle === this.limitRotate.maxAngle ? this.limitRotate.maxAngle : this.limitRotate.minAngle;\r\n        } else {\r\n            this.rotateAngle = this._realRotateAngle === this.limitRotate.minAngle ? this.limitRotate.minAngle : this.limitRotate.maxAngle;\r\n        }\r\n        return this.rotateAngle;\r\n    }\r\n\r\n    /**\r\n     * 根据入射线旋转角度，计算入射角\r\n     * @param rotateAngle 入射线旋转度数\r\n     * @return {number} 入射角\r\n     * @private\r\n     */\r\n    _calcIncidentAngle(rotateAngle) {\r\n        let inAngle = 0;\r\n        if (rotateAngle >= 0 && rotateAngle <= 90) {\r\n            inAngle = 90 - rotateAngle;\r\n        } else if (rotateAngle > 90 && rotateAngle <= 180) {\r\n            inAngle = rotateAngle - 90;\r\n        } else if (rotateAngle > 180 && rotateAngle <= 270) {\r\n            inAngle = 270 - rotateAngle;\r\n        } else {\r\n            inAngle = rotateAngle - 270;\r\n        }\r\n\r\n        return Number(inAngle.toFixed(1));\r\n        // return Number((Math.abs(rotateAngle - 90) % 90).toFixed(1));\r\n    }\r\n\r\n    /**\r\n     * 根据入射线旋转角度，计算入射角旋转度数\r\n     * @param ra 入射线旋转度数\r\n     * @return {number} 入射角旋转度数\r\n     * @private\r\n     */\r\n    _calcIncidentAngleRotateAngle(ra) {\r\n        ra = ra % 360;\r\n        let rotateAngle = 0;\r\n        if (ra > 0 && ra <= 90) {\r\n            rotateAngle = ra;\r\n        } else if (ra > 90 && ra <= 180) {\r\n            rotateAngle = 90;\r\n        } else if (ra > 180 && ra <= 270) {\r\n            rotateAngle = ra;\r\n        } else {\r\n            rotateAngle = 270;\r\n        }\r\n        return Number(rotateAngle.toFixed(1));\r\n    }\r\n\r\n\r\n    get operationButton() {\r\n        return this._operationButton;\r\n    }\r\n\r\n    set operationButton(value) {\r\n        this._operationButton = value;\r\n    }\r\n\r\n    get incidentRayNode() {\r\n        return this._incidentRayNode;\r\n    }\r\n\r\n    set incidentRayNode(value) {\r\n        this._incidentRayNode = value;\r\n    }\r\n\r\n    get arrow() {\r\n        return this._arrow;\r\n    }\r\n\r\n    set arrow(value) {\r\n        this._arrow = value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/IncidentRay.js","/**\r\n * 基类\r\n */\r\nexport default class BaseView {\r\n    constructor(opt) {\r\n        this._svg = opt.svg;\r\n        this._id = this.uuid();\r\n        this._name = opt.name || 'optics';\r\n        //默认入射线旋转度数\r\n        this._rotateAngle = opt.incidentRayDefaultRotateAngle || 330;\r\n        //折射率\r\n        this._refractiveIndex = opt.refractiveIndex || 1;\r\n        //当前介质的临界角\r\n        this._criticalAngle = 180 / Math.PI * Math.asin(1 / this._refractiveIndex);\r\n\r\n        //线条颜色\r\n        this._lineColor = opt.lineColor || '#333';\r\n        //所有线条长度\r\n        this._lineLength = opt.lineLength || 200;\r\n        //所有线条宽度\r\n        this._lineWidth = opt.lineWidth || 5;\r\n        //透明度\r\n        this._opacity = opt.opacity || 1;\r\n        //箭头位置\r\n        this._arrowPos = opt.arrowPos || this._lineLength / 2;\r\n        //是否显示visible和hidden\r\n        this._visibility = opt.visibility === undefined ? 'hidden' : 'visible';\r\n        //限制旋转范围\r\n        this._limitRotate = $.extend({}, {\r\n            limit: false,//是否限制旋转范围\r\n            minAngle: 0,//限制旋转范围的最小旋转度数\r\n            maxAngle: 0//限制旋转范围的最大旋转度数\r\n        }, opt.limitRotate);\r\n\r\n\r\n        //旋转点位置\r\n        this._ratioX = opt.viewboxWidth / this._svg.node.getBoundingClientRect().width;\r\n        this._ratioY = opt.viewboxHeight / this._svg.node.getBoundingClientRect().height;\r\n        this._rotatePoint = opt.rotatePoint || {\r\n                x: opt.viewboxWidth / 2,//this._svg.node.getBoundingClientRect().width / 2,\r\n                y: opt.viewboxHeight / 2//this._svg.node.getBoundingClientRect().height / 2\r\n            };\r\n        opt.rotatePoint = this._rotatePoint;\r\n\r\n        //角度填充色\r\n        this._angleFillColor = opt.angleFillColor || '#000000';\r\n        this._angleFillOpacity = !isNaN(opt.angleFillOpacity) ? opt.angleFillOpacity : 1;\r\n        //角度描边色\r\n        this._angleStrokeColor = opt.angleStrokeColor || '#000000';\r\n        //角度圆弧半径\r\n        this._angleRadius = !isNaN(opt.angleRadius) ? opt.angleRadius : 50;\r\n        //角度是否可见\r\n        this._angleVisibility = opt.angleVisibility === undefined ? 'hidden' : 'visible';\r\n        //角度值\r\n        this._angleValue = 0;\r\n\r\n        //角度文字的大小\r\n        this._angleTextSize = opt.angleTextSize || 60;\r\n        //角度文字的颜色\r\n        this._angleTextColor = opt.angleTextColor || '#ff0000';\r\n        //角度文字的与旋转点的间距\r\n        this._angleTextInterval = opt.angleTextInterval || 100;\r\n        //角度文本是否可见\r\n        this._angleTextVisibility = opt.angleTextVisibility === undefined ? 'hidden' : 'visible';\r\n        //角度文字节点\r\n        this._angleTextNode = undefined;\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 根据线条旋转的角度计算角度值文字摆放的位置\r\n     * @param ra 线条的旋转角度\r\n     * @return {{x: number, y: number}} 文字摆放的位置\r\n     * @private\r\n     */\r\n    calcAngleTextPosition(ra, atn) {\r\n        let width = atn.node.getBBox().width, height = atn.node.getBBox().height;\r\n        let pos = {x: 0, y: 0};\r\n        if (ra > 0 && ra <= 90) {\r\n            ra = ra > 60 ? 60 : ra;\r\n            pos.x = -this._angleTextInterval * Math.sin((90 - ra) / 2 * Math.PI / 180) - width / 2;\r\n            pos.y = -this._angleTextInterval * Math.cos((90 - ra) / 2 * Math.PI / 180) + height / 2;\r\n        } else if (ra > 90 && ra <= 180) {\r\n            ra = ra < 120 ? 120 : ra;\r\n            pos.x = this._angleTextInterval * Math.sin((ra - 90) / 2 * Math.PI / 180);\r\n            pos.y = -this._angleTextInterval * Math.cos((ra - 90) / 2 * Math.PI / 180) + height / 2;\r\n        } else if (ra > 180 && ra <= 270) {\r\n            // ra = ra > 240 ? 240 : ra;\r\n            pos.x = 0;//this._angleTextInterval * Math.sin((270 - ra) / 2 * Math.PI / 180);\r\n            pos.y = this._angleTextInterval * Math.cos((270 - ra) / 2 * Math.PI / 180) + height / 2;\r\n        } else {\r\n            //ra = ra < 300 ? 300 : ra;\r\n            pos.x = -width;//-this._angleTextInterval * Math.sin((ra - 270) / 2 * Math.PI / 180) - width / 2;\r\n            pos.y = this._angleTextInterval * Math.cos((ra - 270) / 2 * Math.PI / 180) + height / 2;\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    uuid() {\r\n        var s = [],\r\n            hexDigits = \"0123456789abcdef\";\r\n        for (var i = 0; i < 10; i++) {\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        return s.join(\"\");\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get svg() {\r\n        return this._svg;\r\n    }\r\n\r\n    set svg(value) {\r\n        this._svg = value;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value) {\r\n        this._name = value;\r\n    }\r\n\r\n    get rotateAngle() {\r\n        return this._rotateAngle;\r\n    }\r\n\r\n    set rotateAngle(value) {\r\n        this._rotateAngle = value;\r\n    }\r\n\r\n    get refractiveIndex() {\r\n        return this._refractiveIndex;\r\n    }\r\n\r\n    set refractiveIndex(value) {\r\n        this._refractiveIndex = value;\r\n    }\r\n\r\n    get criticalAngle() {\r\n        return this._criticalAngle;\r\n    }\r\n\r\n    set criticalAngle(value) {\r\n        this._criticalAngle = value;\r\n    }\r\n\r\n    get lineColor() {\r\n        return this._lineColor;\r\n    }\r\n\r\n    set lineColor(value) {\r\n        this._lineColor = value;\r\n    }\r\n\r\n    get lineLength() {\r\n        return this._lineLength;\r\n    }\r\n\r\n    set lineLength(value) {\r\n        this._lineLength = value;\r\n    }\r\n\r\n    get lineWidth() {\r\n        return this._lineWidth;\r\n    }\r\n\r\n    set lineWidth(value) {\r\n        this._lineWidth = value;\r\n    }\r\n\r\n    get opacity() {\r\n        return this._opacity;\r\n    }\r\n\r\n    set opacity(value) {\r\n        this._opacity = value;\r\n    }\r\n\r\n    get arrowPos() {\r\n        return this._arrowPos;\r\n    }\r\n\r\n    set arrowPos(value) {\r\n        this._arrowPos = value;\r\n    }\r\n\r\n    get visibility() {\r\n        return this._visibility;\r\n    }\r\n\r\n    set visibility(value) {\r\n        this._visibility = value;\r\n    }\r\n\r\n    get limitRotate() {\r\n        return this._limitRotate;\r\n    }\r\n\r\n    set limitRotate(value) {\r\n        this._limitRotate = value;\r\n    }\r\n\r\n    get rotatePoint() {\r\n        return this._rotatePoint;\r\n    }\r\n\r\n    set rotatePoint(value) {\r\n        this._rotatePoint = value;\r\n    }\r\n\r\n    get ratioX() {\r\n        return this._ratioX;\r\n    }\r\n\r\n    set ratioX(value) {\r\n        this._ratioX = value;\r\n    }\r\n\r\n    get ratioY() {\r\n        return this._ratioY;\r\n    }\r\n\r\n    set ratioY(value) {\r\n        this._ratioY = value;\r\n    }\r\n\r\n    get angleFillColor() {\r\n        return this._angleFillColor;\r\n    }\r\n\r\n    set angleFillColor(value) {\r\n        this._angleFillColor = value;\r\n    }\r\n\r\n    get angleFillOpacity() {\r\n        return this._angleFillOpacity;\r\n    }\r\n\r\n    set angleFillOpacity(value) {\r\n        this._angleFillOpacity = value;\r\n    }\r\n\r\n    get angleStrokeColor() {\r\n        return this._angleStrokeColor;\r\n    }\r\n\r\n    set angleStrokeColor(value) {\r\n        this._angleStrokeColor = value;\r\n    }\r\n\r\n    get angleRadius() {\r\n        return this._angleRadius;\r\n    }\r\n\r\n    set angleRadius(value) {\r\n        this._angleRadius = value;\r\n    }\r\n\r\n    get angleValue() {\r\n        return this._angleValue;\r\n    }\r\n\r\n    set angleValue(value) {\r\n        this._angleValue = value;\r\n    }\r\n\r\n    get angleTextSize() {\r\n        return this._angleTextSize;\r\n    }\r\n\r\n    set angleTextSize(value) {\r\n        this._angleTextSize = value;\r\n    }\r\n\r\n    get angleTextColor() {\r\n        return this._angleTextColor;\r\n    }\r\n\r\n    set angleTextColor(value) {\r\n        this._angleTextColor = value;\r\n    }\r\n\r\n    get angleTextInterval() {\r\n        return this._angleTextInterval;\r\n    }\r\n\r\n    set angleTextInterval(value) {\r\n        this._angleTextInterval = value;\r\n    }\r\n\r\n    get angleTextNode() {\r\n        return this._angleTextNode;\r\n    }\r\n\r\n    set angleTextNode(value) {\r\n        this._angleTextNode = value;\r\n    }\r\n\r\n    get angleVisibility() {\r\n        return this._angleVisibility;\r\n    }\r\n\r\n    set angleVisibility(value) {\r\n        this._angleVisibility = value;\r\n    }\r\n\r\n    get angleTextVisibility() {\r\n        return this._angleTextVisibility;\r\n    }\r\n\r\n    set angleTextVisibility(value) {\r\n        this._angleTextVisibility = value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/BaseView.js","/**\r\n * 箭头类\r\n */\r\n\r\nexport  default class Arrow {\r\n    constructor(opt) {\r\n        this._svg = opt.svg;\r\n        this._color = opt.color;\r\n        this._opacity = opt.opacity;\r\n        this._arrowNode = undefined;\r\n    }\r\n\r\n    init() {\r\n        this._arrowNode = this._svg.paper.path().attr({\r\n            fill: this._color,\r\n            opacity:this._opacity,\r\n            d: 'M 0.31 0.74 C 7.99 8.52 17.23 14.71 27.25 19.04 C 17.33 23.59 8.45 30.25 0.87 38.08 C 2.42 31.70 5.99 26.09 9.81 20.85 C 9.79 20.14 9.75 18.72 9.73 18.01 C 5.76 12.77 2.09 7.15 0.31 0.74 Z'\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    get arrowNode() {\r\n        return this._arrowNode;\r\n    }\r\n\r\n    set arrowNode(value) {\r\n        this._arrowNode = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/Arrow.js","/**\r\n * 旋转按钮类\r\n */\r\nimport PublishSubscribe from './PublishSubscribe';\r\n\r\nexport  default class OperationButton {\r\n    constructor(opt) {\r\n        this._opt = opt;\r\n        this._svg = opt.svg;\r\n        this._operationButtonGroupNode = undefined;\r\n        this._rotateButtonGroupNode = undefined;\r\n        this._rotateButtonDowned = false;\r\n    }\r\n\r\n    init() {\r\n        this._operationButtonGroupNode = this._svg.paper.g();\r\n\r\n        this._rotateButtonGroupNode = this._svg.paper.g();\r\n        this._rotateButtonGroupNode.add(this._svg.paper.path().attr({\r\n            fill: '#000000',\r\n            opacity: 0.5,\r\n            d: ' M 25.00 0.00 L 30.35 0.00 C 43.64 1.08 54.95 12.40 56.00 25.70 L 56.00 30.24 C 55.21 37.72 51.64 44.95 45.70 49.66 C 41.56 53.19 36.31 55.06 31.02 56.00 L 25.23 56.00 C 12.13 54.63 1.05 43.50 0.00 30.33 L 0.00 25.74 C 1.01 12.61 11.98 1.52 25.00 0.00 M 12.65 24.00 C 11.74 24.00 9.92 24.00 9.01 24.00 C 11.01 26.00 12.98 28.03 15.01 30.01 C 17.23 28.24 19.08 25.98 21.16 24.01 C 19.81 24.02 18.45 24.00 17.10 23.96 C 19.54 16.86 29.29 13.95 35.10 18.81 C 41.54 23.40 40.89 34.19 34.05 38.07 C 28.86 41.48 21.33 39.55 18.50 33.99 C 17.54 34.95 16.59 35.93 15.65 36.91 C 15.37 36.85 14.80 36.74 14.51 36.68 C 18.04 41.54 24.03 44.82 30.15 43.85 C 37.89 43.00 44.18 35.75 43.99 27.98 C 44.16 20.20 37.83 12.95 30.08 12.14 C 22.34 10.96 14.52 16.46 12.65 24.00 Z'\r\n        })).add(this._svg.paper.path().attr({\r\n            fill: '#ffffff',\r\n            opacity: 1,\r\n            d: ' M 12.65 24.00 C 14.52 16.46 22.34 10.96 30.08 12.14 C 37.83 12.95 44.16 20.20 43.99 27.98 C 44.18 35.75 37.89 43.00 30.15 43.85 C 24.03 44.82 18.04 41.54 14.51 36.68 C 14.80 36.74 15.37 36.85 15.65 36.91 C 16.59 35.93 17.54 34.95 18.50 33.99 C 21.33 39.55 28.86 41.48 34.05 38.07 C 40.89 34.19 41.54 23.40 35.10 18.81 C 29.29 13.95 19.54 16.86 17.10 23.96 C 18.45 24.00 19.81 24.02 21.16 24.01 C 19.08 25.98 17.23 28.24 15.01 30.01 C 12.98 28.03 11.01 26.00 9.01 24.00 C 9.92 24.00 11.74 24.00 12.65 24.00 Z'\r\n        }));\r\n\r\n        this._operationButtonGroupNode.add(this._rotateButtonGroupNode);\r\n\r\n        this._operationButtonGroupNode.attr({\r\n            transform: 'translate(' + (-this._operationButtonGroupNode.getBBox().width - 20) + ',' + (-this._operationButtonGroupNode.getBBox().height / 2) + ')',\r\n        });\r\n        this._rotateButtonGroupNode.mousedown((e, x, y) => {\r\n            this._rotateButtonGroupNode.select('path:nth-child(2)').attr({\r\n                fill: '#e06313',\r\n            });\r\n            this._rotateButtonDowned = true;\r\n            PublishSubscribe.publish(PublishSubscribe.OnIncidentRayRotateButtonDownEvent, {\r\n                id: this._opt.id,\r\n                name: this._opt.name\r\n            });\r\n        });\r\n\r\n        //旋转按钮up事件\r\n        PublishSubscribe.subscribe(PublishSubscribe.OnIncidentRayRotateButtonUpEvent, (topic, args) => {\r\n            if (args.name !== this._opt.name) {\r\n                return;\r\n            }\r\n            this._rotateButtonGroupNode.select('path:nth-child(2)').attr({\r\n                fill: '#ffffff',\r\n            });\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    get operationButtonGroupNode() {\r\n        return this._operationButtonGroupNode;\r\n    }\r\n\r\n    set operationButtonGroupNode(value) {\r\n        this._operationButtonGroupNode = value;\r\n    }\r\n\r\n    get rotateButtonGroupNode() {\r\n        return this._rotateButtonGroupNode;\r\n    }\r\n\r\n    set rotateButtonGroupNode(value) {\r\n        this._rotateButtonGroupNode = value;\r\n    }\r\n\r\n    get rotateButtonDowned() {\r\n        return this._rotateButtonDowned;\r\n    }\r\n\r\n    set rotateButtonDowned(value) {\r\n        this._rotateButtonDowned = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/OperationButton.js","export default class PublishSubscribe {\r\n    constructor() {\r\n    }\r\n\r\n    //发布消息\r\n    static publish(topic, args) {\r\n        if (!PublishSubscribe.topics[topic]) {\r\n            return;\r\n        }\r\n        let subs = PublishSubscribe.topics[topic];\r\n        for (let i = 0, iLen = subs.length; i < iLen; i++) {\r\n            subs[i].func(topic, args);\r\n        }\r\n    }\r\n\r\n    static subscribe(topic, func) {\r\n        PublishSubscribe.topics[topic] = PublishSubscribe.topics[topic] ? PublishSubscribe.topics[topic] : [];\r\n        let token = (++PublishSubscribe.topicIndex).toString();\r\n        PublishSubscribe.topics[topic].push({\r\n            token: token,\r\n            func: func\r\n        });\r\n        return token;\r\n    }\r\n\r\n    static reset() {\r\n        PublishSubscribe.queues = {};\r\n        PublishSubscribe.topics = {};\r\n        PublishSubscribe.topicIndex = -1;\r\n    }\r\n}\r\n\r\nPublishSubscribe.queues = {};\r\nPublishSubscribe.topics = {};\r\nPublishSubscribe.topicIndex = -1;\r\n\r\n\r\n//发生全反射事件\r\nPublishSubscribe.OnTotalReflectionEvent = Symbol.for('On Total Reflection Event');\r\n//旋转按钮被down事件\r\nPublishSubscribe.OnIncidentRayRotateButtonDownEvent = Symbol.for('On Incident Ray Rotate Button Down Event');\r\n//旋转按钮被up事件\r\nPublishSubscribe.OnIncidentRayRotateButtonUpEvent = Symbol.for('On Incident Ray Rotate Button Up Event');\r\n//入射角发生变化事件\r\nPublishSubscribe.OnIncidentAngleChangedEvent = Symbol.for('On Incident Angle Changed Event');\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/PublishSubscribe.js","/**\r\n * 角度类\r\n */\r\nexport  default class Angle {\r\n    constructor(opt) {\r\n        this._svg = opt.svg;\r\n        //角度圆弧填充色\r\n        this._angleFillColor = opt.angleFillColor;\r\n        this._angleFillOpacity = opt.angleFillOpacity;\r\n        //角度边框色\r\n        this._angleStrokeColor = opt.angleStrokeColor;\r\n        //角度圆弧半径\r\n        this._angleRadius = opt.angleRadius;\r\n        //角度值\r\n        this._angleValue = opt.angleValue;\r\n        //旋转度数\r\n        this._rotateAngle = opt.rotateAngle;\r\n        //角度是否可见\r\n        this._angleVisibility = opt.angleVisibility === undefined ? 'hidden' : 'visible';\r\n        //旋转点位置\r\n        this._rotatePoint = opt.rotatePoint;\r\n        this._angleNode = undefined;\r\n    }\r\n\r\n    init() {\r\n        this._angleNode = this._svg.paper.path();\r\n        this.drawAngleValue();\r\n        return this;\r\n    }\r\n\r\n    drawAngleValue() {\r\n        let endX = this._angleRadius - this._angleRadius * Math.cos(this._angleValue * Math.PI / 180);\r\n        let endY = -this._angleRadius * Math.sin(this._angleValue * Math.PI / 180);\r\n        this._angleNode.attr({\r\n            d: `M ${this._angleRadius} 0 H 0 0 A ${this._angleRadius} ${this._angleRadius} 0 0 1 ${endX} ${endY} z`,\r\n            fill: this._angleFillColor,\r\n            stroke: this._angleStrokeColor,\r\n            transform: `translate(${this._rotatePoint.x - this._angleRadius},${this._rotatePoint.y}) rotate(${this._rotateAngle},${this._angleRadius},0)`,\r\n            visibility: this._angleVisibility,\r\n            opacity: this._angleFillOpacity\r\n        });\r\n        return this;\r\n    }\r\n\r\n    show(isShow) {\r\n        this._angleVisibility = isShow ? 'visible' : 'hidden';\r\n        this._angleNode.attr({\r\n            visibility: this._angleVisibility\r\n        });\r\n    }\r\n\r\n    get angleNode() {\r\n        return this._angleNode;\r\n    }\r\n\r\n    set angleNode(value) {\r\n        this._angleNode = value;\r\n    }\r\n\r\n    get angleValue() {\r\n        return this._angleValue;\r\n    }\r\n\r\n    set angleValue(value) {\r\n        this._angleValue = value;\r\n    }\r\n\r\n    get rotateAngle() {\r\n        return this._rotateAngle;\r\n    }\r\n\r\n    set rotateAngle(value) {\r\n        this._rotateAngle = value;\r\n    }\r\n\r\n    get angleVisibility() {\r\n        return this._angleVisibility;\r\n    }\r\n\r\n    set angleVisibility(value) {\r\n        this._angleVisibility = value;\r\n    }\r\n\r\n    get angleFillColor() {\r\n        return this._angleFillColor;\r\n    }\r\n\r\n    set angleFillColor(value) {\r\n        this._angleFillColor = value;\r\n    }\r\n\r\n    get angleFillOpacity() {\r\n        return this._angleFillOpacity;\r\n    }\r\n\r\n    set angleFillOpacity(value) {\r\n        this._angleFillOpacity = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/Angle.js","/**\r\n * 法线类\r\n */\r\nimport BaseView from './BaseView';\r\nexport default class Normal extends BaseView {\r\n    constructor(opt) {\r\n        super(opt);\r\n        //线条长度\r\n        this.lineLength = opt.normalLength || this.lineLength;\r\n        //线条宽度\r\n        this.lineWidth = opt.normalWidth || this.lineWidth;\r\n        //透明度\r\n        this.opacity = opt.normalOpacity || this.opacity;\r\n        //是否显示线条\r\n        this._visibility = opt.normalVisibility === undefined ? this._visibility : opt.normalVisibility;\r\n        //法线的group,包含法线、直线\r\n        this._normalGroupNode = undefined;\r\n        //法线节点\r\n        this._normalNode = undefined;\r\n        //直角\r\n        this._rightAngleNode = undefined;\r\n    }\r\n\r\n    init() {\r\n        this._normalGroupNode = this.svg.paper.g().attr({\r\n            transform: `translate(${this.rotatePoint.x},${this.rotatePoint.y})`,\r\n            visibility: this._visibility\r\n        });\r\n        this._normalNode = this.svg.paper.line().attr({\r\n            x1: 0,\r\n            y1: -this.lineLength / 2,\r\n            x2: 0,\r\n            y2: this.lineLength / 2,\r\n            stroke: this.lineColor,\r\n            strokeWidth: this.lineWidth,\r\n            opacity: this.opacity,\r\n            strokeDasharray: '10,5'\r\n        });\r\n        this._rightAngleNode = this.svg.paper.path().attr({\r\n            d: `M 0 ${-20 - this.lineWidth} h 20 v 20`,\r\n            stroke: this.lineColor,\r\n            fill: 'none',\r\n            opacity: this.opacity,\r\n            strokeWidth: this.lineWidth\r\n        });\r\n        this._normalGroupNode.add(this._normalNode);\r\n        this._normalGroupNode.add(this._rightAngleNode);\r\n        return this;\r\n    }\r\n\r\n    show(isShow) {\r\n        this.visibility = isShow ? 'visible' : 'hidden';\r\n        this._normalGroupNode.attr({\r\n            visibility: this.visibility\r\n        });\r\n    }\r\n\r\n    get normalGroupNode() {\r\n        return this._normalGroupNode;\r\n    }\r\n\r\n    set normalGroupNode(value) {\r\n        this._normalGroupNode = value;\r\n    }\r\n\r\n    get normalNode() {\r\n        return this._normalNode;\r\n    }\r\n\r\n    set normalNode(value) {\r\n        this._normalNode = value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/Normal.js","/**\r\n * 反射线类\r\n */\r\nimport BaseView from './BaseView';\r\nimport Arrow from './Arrow';\r\nimport Angle from './Angle';\r\nimport PublishSubscribe from './PublishSubscribe';\r\n\r\nexport default class ReflectedRay extends BaseView {\r\n    constructor(opt) {\r\n        super(opt);\r\n        //线条长度\r\n        this.lineLength = opt.reflectedRayLength || this.lineLength;\r\n        //线条宽度\r\n        this.lineWidth = opt.reflectedRayWidth || this.lineWidth;\r\n        //透明度\r\n        this.opacity = opt.reflectedRayOpacity || this.opacity;\r\n        //线的颜色值\r\n        this.lineColor = opt.reflectedRayLineColor || this.lineColor;\r\n        //是否显示线条\r\n        this._visibility = opt.reflectedRayVisibility === undefined ? this._visibility : opt.reflectedRayVisibility;\r\n        //箭头位置\r\n        this.arrowPos = opt.reflectedRayArrowPos || this.arrowPos;\r\n        //反射线组，包括箭头、反射线\r\n        this._reflectedRayGroupNode = undefined;\r\n        //反射线的节点\r\n        this._reflectedRayNode = undefined;\r\n        //箭头\r\n        this._arrow = new Arrow($.extend({}, opt, {color: this.lineColor}));\r\n        //反射线旋转角度\r\n        this.rotateAngle = this._calcReflectedRotateAngle(this.rotateAngle);\r\n\r\n        //反射角填充色\r\n        this.angleFillColor = opt.reflectedAngleFillColor || this.angleFillColor;\r\n        //角度透明度\r\n        this.angleFillOpacity = opt.reflectedAngleFillOpacity || this.angleFillOpacity;\r\n        //反射角描边色\r\n        this.angleStrokeColor = opt.reflectedAngleStrokeColor || this.angleStrokeColor;\r\n        //反射角半径\r\n        this.angleRadius = opt.reflectedAngleRadius || this.angleRadius;\r\n        //反射线角度值\r\n        this.angleValue = this._calcReflectedAngle(this.rotateAngle);\r\n        //反射角\r\n        this._angle = new Angle($.extend({}, opt, {\r\n            angleFillColor: this.angleFillColor,\r\n            angleFillOpacity:this.angleFillOpacity,\r\n            angleStrokeColor: this.angleStrokeColor,\r\n            angleRadius: this.angleRadius,\r\n            angleValue: this.angleValue,\r\n            rotateAngle: this._calcReflectedAngleRotateAngle(this.rotateAngle),\r\n            rotatePoint: this.rotatePoint\r\n        }));\r\n\r\n        //反射角度文字的大小\r\n        this.angleTextSize = opt.reflectedAngleTextSize || this.angleTextSize;\r\n        //反射角度文字的颜色\r\n        this.angleTextColor = opt.reflectedAngleTextColor || this.angleTextColor;\r\n        //反射角度文字的与旋转点的间距\r\n        this.angleTextInterval = opt.reflectedAngleTextInterval || this.angleTextInterval;\r\n    }\r\n\r\n    init() {\r\n        //入射角\r\n        this._angle.init();\r\n\r\n        this._reflectedRayGroupNode = this.svg.paper.g({\r\n            visibility:this._visibility\r\n        });\r\n        this._reflectedRayNode = this.svg.paper.path().attr({\r\n            d: `M 0 0 h ${this.lineLength} v ${this.lineWidth} h ${-this.lineLength} z`,\r\n            fill: this.lineColor,\r\n            opacity:this.opacity\r\n        });\r\n\r\n        this._reflectedRayNode.attr({\r\n            transform: `translate(0,${-this._reflectedRayNode.getBBox().height / 2})`\r\n        });\r\n        this._reflectedRayGroupNode.add(this._reflectedRayNode);\r\n        //箭头\r\n        this._arrow.init();\r\n        this._arrow.arrowNode.attr({\r\n            transform: `translate(${this.arrowPos},${this._arrow.arrowNode.getBBox().height / 2}) rotate(180)`,\r\n            opacity:this.opacity\r\n        });\r\n        this._reflectedRayGroupNode.add(this._arrow.arrowNode);\r\n\r\n        //移到默认旋转点位置，旋转默认角度\r\n        this._reflectedRayGroupNode.attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength},${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle},${this.lineLength},0)`\r\n        });\r\n        //显示度数文字\r\n        this.angleTextNode = this.svg.paper.text().attr({\r\n            text:`${this.angleValue}°`,\r\n            fill: this.angleTextColor,\r\n            fontSize: this.angleTextSize,\r\n            fontWeight: 'bold',\r\n            transform: `translate(${this.rotatePoint.x},${this.rotatePoint.y})`,\r\n            visibility: this.angleTextVisibility\r\n        });\r\n        this.angleTextPosition = this.calcAngleTextPosition(this.rotateAngle,this.angleTextNode);\r\n        this.angleTextNode.attr({\r\n            x: this.angleTextPosition.x,\r\n            y: this.angleTextPosition.y\r\n        });\r\n\r\n        PublishSubscribe.subscribe(PublishSubscribe.OnIncidentAngleChangedEvent, (topic, args) => {\r\n            if(args.name !== this.name){\r\n                return;\r\n            }\r\n            this.rotate(args.inAngle, args.rotateAngle);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 反射线旋转\r\n     * @param inAngle 入射线\r\n     * @param angle 入射线的旋转角度\r\n     */\r\n    rotate(inAngle, roAngle) {\r\n        this.rotateAngle = this._calcReflectedRotateAngle(roAngle);\r\n        this._reflectedRayGroupNode.attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength},${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle},${this.lineLength},0)`\r\n        });\r\n\r\n        //角度值也要变化\r\n        this.angleValue = this._calcReflectedAngle(this.rotateAngle);\r\n        this._angle.angleValue = this.angleValue;\r\n        this._angle.rotateAngle = this._calcReflectedAngleRotateAngle(this.rotateAngle);\r\n        this._angle.angleVisibility = this.angleVisibility;\r\n        this._angle.angleFillColor = this.angleFillColor;\r\n        this._angle.angleFillOpacity = this.angleFillOpacity;\r\n        this._angle.drawAngleValue();\r\n        //变换度数文字位置\r\n        this.angleTextNode.attr({\r\n            text:`${this.angleValue}°`\r\n        });\r\n        this.angleTextPosition = this.calcAngleTextPosition(this.rotateAngle,this.angleTextNode);\r\n        this.angleTextNode.attr({\r\n            x: this.angleTextPosition.x,\r\n            y: this.angleTextPosition.y,\r\n            visibility: this.angleTextVisibility\r\n        });\r\n    }\r\n\r\n    showLine(isShow){\r\n        this.visibility = isShow ? 'visible' : 'hidden';\r\n        this._reflectedRayGroupNode.attr({\r\n            visibility: this.visibility\r\n        });\r\n    }\r\n    showAngle(isShow){\r\n        this.angleVisibility = isShow ? 'visible' : 'hidden';\r\n        this._angle.show(isShow);\r\n    }\r\n    showAngleText(isShow){\r\n        this.angleTextVisibility = isShow ? 'visible' : 'hidden';\r\n        this.angleTextNode.attr({\r\n            visibility: this.angleTextVisibility\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据反射线旋转角度，计算反射角\r\n     * @param rotateAngle 反射线旋转度数\r\n     * @return {number} 反射角\r\n     * @private\r\n     */\r\n    _calcReflectedAngle(ra) {\r\n        let reflectedAngle = 0;\r\n        if (ra > 0 && ra <= 90) {\r\n            reflectedAngle = 90 - ra;\r\n        } else if (ra > 90 && ra <= 180) {\r\n            reflectedAngle = ra - 90;\r\n        } else if (ra > 180 && ra <= 270) {\r\n            reflectedAngle = 270 - ra;\r\n        } else {\r\n            reflectedAngle = ra - 270;\r\n        }\r\n\r\n        return Number(reflectedAngle.toFixed(1));\r\n    }\r\n\r\n    /**\r\n     * 根据入射线旋转的度数计算反射线旋转度数\r\n     * @param incidentRotateAngle 入射线的旋转度数\r\n     * @return {number} 反射线的旋转度数\r\n     */\r\n    _calcReflectedRotateAngle(incidentRotateAngle) {\r\n        incidentRotateAngle = incidentRotateAngle % 360;\r\n        let rotateAngle = 0;\r\n        if (incidentRotateAngle >= 0 && incidentRotateAngle <= 180) {\r\n            rotateAngle = 180 - incidentRotateAngle;\r\n        } else if (incidentRotateAngle > 180 && incidentRotateAngle < 360) {\r\n            rotateAngle = 540 - incidentRotateAngle;\r\n        }\r\n        return Number(rotateAngle.toFixed(1));\r\n    }\r\n\r\n\r\n    /**\r\n     * 根据反射线旋转角度，计算反射角旋转度数\r\n     * @param ra 反射线旋转度数\r\n     * @return {number} 反射角旋转度数\r\n     * @private\r\n     */\r\n    _calcReflectedAngleRotateAngle(ra) {\r\n        ra = ra % 360;\r\n        let rotateAngle = 0;\r\n        if (ra > 0 && ra <= 90) {\r\n            rotateAngle = ra;\r\n        } else if (ra > 90 && ra <= 180) {\r\n            //XXX 这边写死180会有问题\r\n            rotateAngle = 180;\r\n        } else if (ra > 180 && ra <= 270) {\r\n            rotateAngle = ra;\r\n        } else {\r\n            rotateAngle = 270;\r\n        }\r\n        return Number(rotateAngle.toFixed(1));\r\n    }\r\n\r\n    get reflectedRayNode() {\r\n        return this._reflectedRayNode;\r\n    }\r\n\r\n    set reflectedRayNode(value) {\r\n        this._reflectedRayNode = value;\r\n    }\r\n\r\n    get angle() {\r\n        return this._angle;\r\n    }\r\n\r\n    set angle(value) {\r\n        this._angle = value;\r\n    }\r\n\r\n    get arrow() {\r\n        return this._arrow;\r\n    }\r\n\r\n    set arrow(value) {\r\n        this._arrow = value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/ReflectedRay.js","/**\r\n * 折射线类\r\n */\r\nimport BaseView from './BaseView';\r\nimport Arrow from './Arrow';\r\nimport Angle from './Angle';\r\nimport PublishSubscribe from './PublishSubscribe';\r\n\r\nexport default class RefractedRay extends BaseView {\r\n    constructor(opt) {\r\n        super(opt);\r\n        //线条长度\r\n        this.lineLength = opt.refractedRayLength || this.lineLength;\r\n        //线条宽度\r\n        this.lineWidth = opt.refractedRayWidth || this.lineWidth;\r\n        //线的颜色值\r\n        this.lineColor = opt.refractedRayLineColor || this.lineColor;\r\n        //透明度\r\n        this.opacity = opt.refractedRayOpacity || this.opacity;\r\n        //箭头位置\r\n        this.arrowPos = opt.refractedRayArrowPos || this.arrowPos;\r\n        //是否显示线条\r\n        this._visibility = opt.refractedRayVisibility === undefined ? this._visibility : opt.refractedRayVisibility;\r\n\r\n        //折射线组，包括箭头、反射线\r\n        this._refractedRayGroupNode = undefined;\r\n        //折射线的节点\r\n        this._refractedRayNode = undefined;\r\n        //箭头\r\n        this._arrow = new Arrow($.extend({}, opt, {color: this.lineColor}));\r\n        //折射线旋转度数\r\n        this.rotateAngle = this._calcRefractedRotateAngle(this.rotateAngle);\r\n\r\n        //折射角填充色\r\n        this.angleFillColor = opt.refractedAngleFillColor || this.angleFillColor;\r\n        //角度透明度\r\n        this.angleFillOpacity = opt.refractedAngleFillOpacity || this.angleFillOpacity;\r\n        //折射角描边色\r\n        this.angleStrokeColor = opt.refractedAngleStrokeColor || this.angleStrokeColor;\r\n        //折射角半径\r\n        this.angleRadius = opt.refractedAngleRadius || this.angleRadius;\r\n        //折射角度值\r\n        this.angleValue = this._calcRefractedAngle(this.rotateAngle);\r\n        //折射角\r\n        this._angle = new Angle($.extend({}, opt, {\r\n            angleFillColor: this.angleFillColor,\r\n            angleFillOpacity: this.angleFillOpacity,\r\n            angleStrokeColor: this.angleStrokeColor,\r\n            angleRadius: this.angleRadius,\r\n            angleValue: this.angleValue,\r\n            rotateAngle: this._calcRefractedAngleRotateAngle(this.rotateAngle),\r\n            rotatePoint: this.rotatePoint\r\n        }));\r\n\r\n        //反射角度文字的大小\r\n        this.angleTextSize = opt.refractedAngleTextSize || this.angleTextSize;\r\n        //反射角度文字的颜色\r\n        this.angleTextColor = opt.refractedAngleTextColor || this.angleTextColor;\r\n        //反射角度文字的与旋转点的间距\r\n        this.angleTextInterval = opt.refractedAngleTextInterval || this.angleTextInterval;\r\n    }\r\n\r\n    init() {\r\n        //折射角\r\n        this._angle.init();\r\n\r\n        this._refractedRayGroupNode = this.svg.paper.g({\r\n            visibility: this._visibility\r\n        });\r\n        //移到默认旋转点位置，旋转默认角度\r\n        this._refractedRayGroupNode.attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength},${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle},${this.lineLength},0)`\r\n        });\r\n\r\n        this._refractedRayNode = this.svg.paper.path().attr({\r\n            d: `M 0 0 h ${this.lineLength} v ${this.lineWidth} h ${-this.lineLength} z`,\r\n            fill: this.lineColor,\r\n            opacity: this.opacity\r\n        });\r\n\r\n        this._refractedRayNode.attr({\r\n            transform: `translate(0,${-this._refractedRayNode.getBBox().height / 2})`\r\n        });\r\n        this._refractedRayGroupNode.add(this._refractedRayNode);\r\n        //箭头\r\n        this._arrow.init();\r\n        this._arrow.arrowNode.attr({\r\n            transform: `translate(${this.arrowPos},${this._arrow.arrowNode.getBBox().height / 2}) rotate(180)`,\r\n            opacity: this.opacity\r\n        });\r\n        this._refractedRayGroupNode.add(this._arrow.arrowNode);\r\n\r\n        //显示度数文字\r\n        this.angleTextNode = this.svg.paper.text().attr({\r\n            text: `${this.angleValue}°`,\r\n            fill: this.angleTextColor,\r\n            fontSize: this.angleTextSize,\r\n            fontWeight: 'bold',\r\n            transform: `translate(${this.rotatePoint.x},${this.rotatePoint.y})`,\r\n            visibility: this.angleTextVisibility\r\n        });\r\n        this.angleTextPosition = this.calcAngleTextPosition(this.rotateAngle, this.angleTextNode);\r\n        this.angleTextNode.attr({\r\n            x: this.angleTextPosition.x,\r\n            y: this.angleTextPosition.y\r\n        });\r\n\r\n        PublishSubscribe.subscribe(PublishSubscribe.OnIncidentAngleChangedEvent, (topic, args) => {\r\n            if (args.name !== this.name) {\r\n                return;\r\n            }\r\n            this.rotate(args.inAngle, args.rotateAngle);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    rotate(inAngle, roAngle) {\r\n        this.rotateAngle = this._calcRefractedRotateAngle(roAngle, inAngle);\r\n\r\n        this._refractedRayGroupNode.attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength} , ${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle},${this.lineLength },0)`,\r\n            visibility: this._visibility\r\n        });\r\n\r\n        //角度值也要变化\r\n        this.angleValue = this._calcRefractedAngle(this.rotateAngle);\r\n        this._angle.angleValue = this.angleValue;\r\n        this._angle.rotateAngle = this._calcRefractedAngleRotateAngle(this.rotateAngle);\r\n        this._angle.angleVisibility = this.angleVisibility;\r\n        this._angle.angleFillColor = this.angleFillColor;\r\n        this._angle.angleFillOpacity = this.angleFillOpacity;\r\n\r\n        this._angle.drawAngleValue();\r\n        //变换度数文字位置\r\n        this.angleTextNode.attr({\r\n            text: `${this.angleValue}°`\r\n        });\r\n        this.angleTextPosition = this.calcAngleTextPosition(this.rotateAngle, this.angleTextNode);\r\n        this.angleTextNode.attr({\r\n            x: this.angleTextPosition.x,\r\n            y: this.angleTextPosition.y,\r\n            visibility: this.angleTextVisibility\r\n        });\r\n    }\r\n\r\n    showLine(isShow) {\r\n        this.visibility = isShow ? 'visible' : 'hidden';\r\n        this._refractedRayGroupNode.attr({\r\n            visibility: this.visibility\r\n        });\r\n    }\r\n\r\n    showAngle(isShow) {\r\n        this.angleVisibility = isShow ? 'visible' : 'hidden';\r\n        this._angle.show(isShow);\r\n    }\r\n\r\n    showAngleText(isShow) {\r\n        this.angleTextVisibility = isShow ? 'visible' : 'hidden';\r\n        this.angleTextNode.attr({\r\n            visibility: this.angleTextVisibility\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据线条旋转的角度计算角度值文字摆放的位置\r\n     * @param ra 线条的旋转角度\r\n     * @return {{x: number, y: number}} 文字摆放的位置\r\n     * @private\r\n     */\r\n    calcAngleTextPosition(ra, atn) {\r\n        let width = atn.node.getBoundingClientRect().width, height = atn.node.getBoundingClientRect().height;\r\n        let pos = {x: 0, y: 0};\r\n        if (ra > 0 && ra <= 90) {\r\n            ra = ra > 60 ? 60 : ra;\r\n            pos.x = -this._angleTextInterval * Math.sin((90 - ra) / 2 * Math.PI / 180) - width / 2;\r\n            pos.y = -this._angleTextInterval * Math.cos((90 - ra) / 2 * Math.PI / 180) + height / 2;\r\n        } else if (ra > 90 && ra <= 180) {\r\n            ra = ra < 120 ? 120 : ra;\r\n            pos.x = this._angleTextInterval * Math.sin((ra - 90) / 2 * Math.PI / 180) - width / 2;\r\n            pos.y = -this._angleTextInterval * Math.cos((ra - 90) / 2 * Math.PI / 180) + height / 2;\r\n        } else if (ra > 180 && ra <= 270) {\r\n            ra = ra > 240 ? 240 : ra;\r\n            pos.x = this._angleTextInterval * Math.sin((270 - ra) / 2 * Math.PI / 180);\r\n            pos.y = this._angleTextInterval * Math.cos((270 - ra) / 2 * Math.PI / 180) + height / 2;\r\n        } else {\r\n            ra = ra < 300 ? 300 : ra;\r\n            pos.x = -this._angleTextInterval * Math.sin((ra - 270) / 2 * Math.PI / 180) - width / 2;\r\n            pos.y = this._angleTextInterval * Math.cos((ra - 270) / 2 * Math.PI / 180) + height / 2;\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    /**\r\n     * 根据入射线旋转的度数计算折射线折射的角度\r\n     * @param incidentRotateAngle 入射线旋转的度数\r\n     * @param inAngle 入射角度数\r\n     * @return {number} 折射线旋转的度数\r\n     * @private\r\n     */\r\n    _calcRefractedRotateAngle(incidentRotateAngle, inAngle) {\r\n        incidentRotateAngle = incidentRotateAngle % 360;\r\n        if (!inAngle && inAngle !== 0) {\r\n            if (incidentRotateAngle > 0 && incidentRotateAngle <= 180) {\r\n                inAngle = Math.abs(90 - incidentRotateAngle);\r\n            } else {\r\n                inAngle = Math.abs(270 - incidentRotateAngle);\r\n            }\r\n        }\r\n        let refractedSinVal = this.refractiveIndex * Math.sin(inAngle * Math.PI / 180);\r\n        if (refractedSinVal > 1) {\r\n            return 0;\r\n        }\r\n        let refractedAngle = Math.asin(refractedSinVal) * 180 / Math.PI;\r\n        refractedAngle = (refractedAngle + 360) % 360;\r\n        let rotateAngle = 0;\r\n        if (incidentRotateAngle > 0 && incidentRotateAngle <= 90) {\r\n            rotateAngle = 270 - refractedAngle;\r\n        } else if (incidentRotateAngle > 90 && incidentRotateAngle <= 180) {\r\n            rotateAngle = 270 + refractedAngle;\r\n        } else if (incidentRotateAngle > 180 && incidentRotateAngle <= 270) {\r\n            rotateAngle = 90 - refractedAngle;\r\n        } else {\r\n            rotateAngle = 90 + refractedAngle;\r\n        }\r\n        return Number(rotateAngle.toFixed(1));\r\n    }\r\n\r\n    /**\r\n     * 根据折射线的旋转角度，计算折射角\r\n     * @param ra 折射线旋转角度\r\n     * @return {number} 折射角\r\n     * @private\r\n     */\r\n    _calcRefractedAngle(ra) {\r\n        return Number(Math.abs(90 - ra).toFixed(1));\r\n    }\r\n\r\n    /**\r\n     * 根据折射线旋转角度，计算折射角旋转度数\r\n     * @param ra 折射线旋转度数\r\n     * @return {number} 折射角旋转度数\r\n     * @private\r\n     */\r\n    _calcRefractedAngleRotateAngle(ra) {\r\n        ra = ra % 360;\r\n        let rotateAngle = 0;\r\n        if (ra > 0 && ra <= 90) {\r\n            rotateAngle = ra;\r\n        } else if (ra > 90 && ra <= 180) {\r\n            rotateAngle = 90;\r\n        } else if (ra > 180 && ra <= 270) {\r\n            rotateAngle = ra;\r\n        } else {\r\n            rotateAngle = 270;\r\n        }\r\n        return Number(rotateAngle.toFixed(1));\r\n    }\r\n\r\n    get refractedRayNode() {\r\n        return this._refractedRayNode;\r\n    }\r\n\r\n    set refractedRayNode(value) {\r\n        this._refractedRayNode = value;\r\n    }\r\n\r\n    get arrow() {\r\n        return this._arrow;\r\n    }\r\n\r\n    set arrow(value) {\r\n        this._arrow = value;\r\n    }\r\n\r\n    get angle() {\r\n        return this._angle;\r\n    }\r\n\r\n    set angle(value) {\r\n        this._angle = value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/RefractedRay.js","/**\r\n * 临界角线\r\n */\r\nimport BaseView from './BaseView';\r\n\r\nexport default class CriticalAngleRay extends BaseView {\r\n    constructor(opt) {\r\n        super(opt);\r\n        //线条长度\r\n        this.lineLength = opt.criticalAngleRayLength || this.lineLength;\r\n        //线条宽度\r\n        this.lineWidth = opt.criticalAngleRayWidth || this.lineWidth;\r\n        //线条颜色\r\n        this.lineColor = opt.criticalAngleRayColor || this.lineColor;\r\n        //透明度\r\n        this.opacity = opt.criticalAngleRayOpacity || this.opacity;\r\n        //是否显示线条\r\n        this.visibility = opt.criticalAngleRayVisibility === undefined ? this.visibility : opt.criticalAngleRayVisibility;\r\n        //默认旋转度数\r\n        this.rotateAngle = this._clacRotateAngle();//this.criticalAngle;\r\n        //全反射线容器\r\n        this._criticalAngleRayGroupNode = undefined;\r\n        this._criticalAngleRayNode = undefined;\r\n    }\r\n\r\n    init() {\r\n        this._criticalAngleRayGroupNode = this.svg.paper.g().attr({\r\n            transform: `translate(${this.rotatePoint.x - this.lineLength},${this.rotatePoint.y - this.lineWidth / 2}) \r\n            rotate(${this.rotateAngle} ${this.lineLength} 0)`,\r\n            visibility: this.visibility\r\n        });\r\n        this._criticalAngleRayNode = this.svg.paper.line().attr({\r\n            x1: 0,\r\n            y1: 0,\r\n            x2: this.lineLength,\r\n            y2: 0,\r\n            opacity: this.opacity,\r\n            stroke: this.lineColor,\r\n            strokeWidth: this.lineWidth,\r\n            strokeDasharray: '10,5'\r\n        });\r\n        this._criticalAngleRayGroupNode.add(this._criticalAngleRayNode);\r\n\r\n        return this;\r\n    }\r\n\r\n    show(isShow) {\r\n        this.visibility = isShow ? 'visible' : 'hidden';\r\n        this._criticalAngleRayGroupNode.attr({\r\n            visibility: this.visibility\r\n        });\r\n    }\r\n\r\n    _clacRotateAngle() {\r\n        if (this.rotateAngle > 0 && this.rotateAngle <= 90) {\r\n            this.rotateAngle = 90 - this.criticalAngle;\r\n        } else if (this.rotateAngle > 90 && this.rotateAngle <= 180) {\r\n            this.rotateAngle = 90 + this.criticalAngle;\r\n        } else if (this.rotateAngle > 180 && this.rotateAngle <= 270) {\r\n            this.rotateAngle = 270 - this.criticalAngle;\r\n        } else {\r\n            this.rotateAngle = 270 + this.criticalAngle;\r\n        }\r\n        return this.rotateAngle;\r\n    }\r\n\r\n    get criticalAngleRayGroupNode() {\r\n        return this._criticalAngleRayGroupNode;\r\n    }\r\n\r\n    set criticalAngleRayGroupNode(value) {\r\n        this._criticalAngleRayGroupNode = value;\r\n    }\r\n\r\n    get criticalAngleRayNode() {\r\n        return this._criticalAngleRayNode;\r\n    }\r\n\r\n    set criticalAngleRayNode(value) {\r\n        this._criticalAngleRayNode = value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/optics/CriticalAngleRay.js"],"sourceRoot":""}