<?xml version='1.0' encoding='UTF-8'?>
<addon id="templateid"><properties/><dependencies><jsDependency><javaScript name="snap_svg" version="1.0.0"/><javaScript name="TweenMax" version="1.18.0"/><javaScript name="tools_common" version="1.3.0"/><javaScript name="TimesNewRoman-font" version="1.0.0"/></jsDependency></dependencies><css><![CDATA[.exam_skin_wood .WavesSuperposition_wrapper{width:100%;height:100%;padding:2.66667em 4em 5em;background:#bfd3e2}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_body{position:relative;width:100%;height:100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_stage{position:absolute;bottom:0;left:50%;width:60.5em;height:29em;margin:0 auto;-webkit-transform:translate(-50%);transform:translate(-50%)}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition-container{position:absolute;left:0;top:0;width:100%;height:100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper{position:absolute;left:50%;bottom:30em;-webkit-transform:translate(-50%);z-index:9999}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper .com_dialog_inner{display:table-cell;vertical-align:middle;text-align:center}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper .com_dialog_box{display:inline-block;background-color:rgba(47,47,47,.8);border-radius:.41667em;padding:1.5em 3.5em;color:#fff}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_tip{width:auto}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_tip .tip_txt{font-size:2em;padding:0;white-space:nowrap}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop{position:absolute;right:28.5em;top:-3.5em;-webkit-transform:translate(-50%);z-index:-1;width:0;height:0}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box{width:auto;white-space:nowrap}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box .rowTxt{display:block}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box .rowTxt .symbol_equal{position:absolute;left:22em;top:0;width:3.5em;text-align:center}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box .rowTxt .middle_text_content{position:absolute;left:25.3333em;top:0}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box .rowTxt .middle_text_content i{text-align:left;color:#00a309}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box .rowTxt .symbol_arrow_equal{position:absolute;left:22em;top:8.6em;width:3.5em;text-align:center}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box em.right_txt{display:inline-block;text-align:right;min-width:22em}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box em.right_txt i:first-of-type{color:#01a8ff;text-align:left;min-width:0}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box em.right_txt i:nth-of-type(2){color:#f09300;text-align:left;min-width:0}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_whitePop .dialog_box .yahei95{font-size:3.95833em}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_footer{position:absolute;left:0;bottom:0;height:5em;width:100%;background:#cfdee9;padding:0 4em;display:-webkit-box}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_footer li.disabled .txt{color:#a9b6c0}.exam_skin_wood .WavesSuperposition_wrapper .txt{display:block;text-align:center;font-size:1.5em;white-space:nowrap;color:#292525;margin-top:.08333em}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left{width:100%;display:-webkit-box;-webkit-box-align:center;-webkit-box-pack:center}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li{float:left;margin:0 4.16667em}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li .icon{display:block}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li .icon i{display:block;width:3em;height:2.66667em;margin:0 auto;overflow:hidden;background-repeat:no-repeat}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.play i{background:url(resources/wood/images/play.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.play.active i,.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.play:active i{background:url(resources/wood/images/playon.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.play.disabled i{background:url(resources/wood/images/play-dis.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.pause i{background:url(resources/wood/images/pause.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.pause.active i,.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.pause:active i{background:url(resources/wood/images/pauseon.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.pause.disabled i{background:url(resources/wood/images/pause-dis.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.slow i{background:url(resources/wood/images/slow.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.slow.active i,.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.slow:active i{background:url(resources/wood/images/slowon.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.slow.disabled i{background:url(resources/wood/images/slow-dis.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.waves i{background:url(resources/wood/images/waves.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.waves.active i,.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.waves:active i{background:url(resources/wood/images/waveson.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.waves.disabled i{background:url(resources/wood/images/waves-dis.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.reset i{background:url(resources/wood/images/reset.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.reset:active i{background:url(resources/wood/images/reseton.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left li.reset.disabled i{background:url(resources/wood/images/reset-dis.png);background-size:100% 100%}.exam_skin_wood .WavesSuperposition_wrapper .times60{font-size:2.5em;display:inline-block}.exam_skin_wood .WavesSuperposition_wrapper .times95{font-size:3.95833em;display:inline-block}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper{top:3.9em}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper .WavesSuperposition_dialog_tip{max-width:38.33333em;padding:1.5em .2em}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper .WavesSuperposition_dialog_tip .tip_txt{font-size:1.41667em;white-space:normal}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .txt{font-size:1.08333em}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_footer{display:initial}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul{margin-top:.4em}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li{min-width:9.83333em;max-width:10em;margin:0 3.33333em}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li .txt{width:auto;display:-webkit-box;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:1;-webkit-box-orient:vertical}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li.reset .icon{margin-top:.625em}.typefaces_long .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li.reset .txt{display:none}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper{top:3.9em}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper .WavesSuperposition_dialog_tip{max-width:38.33333em;padding:1.5em .2em}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_dialog_wrapper .WavesSuperposition_dialog_tip .tip_txt{font-size:1.41667em;white-space:normal}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .txt{font-size:1.08333em}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_footer{display:initial}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul{margin-top:.4em}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li{min-width:9.83333em;max-width:10em;margin:0 3.33333em}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li .txt{width:auto;display:-webkit-box;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:1;-webkit-box-orient:vertical}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li.reset .icon{margin-top:.625em}.typefaces_ru_RU .exam_skin_wood .WavesSuperposition_wrapper .WavesSuperposition_left ul li.reset .txt{display:none}]]></css><view><![CDATA[<div class="exam_skin_wood"><div class="WavesSuperposition_wrapper"><div class="WavesSuperposition_body"><div class="WavesSuperposition_stage"><svg class="waves_superposition_svg" preserveAspectRatio="xMidYMid meet" style="width: 100%; height: 100%"></svg><div class="WavesSuperposition_dialog_whitePop"><div class="dialog_box"><span class="rowTxt"><em class="right_txt"><i class="TimesNewRoman times95 right_text" style="opacity: 0"></i> <span class="yahei95 symbol_add" style="opacity: 0">+</span> <span class="yahei95 symbol_left" style="display: none">(</span> <i class="TimesNewRoman times95 left_text" style="opacity: 0"></i> <span class="yahei95 symbol_right" style="display: none">)</span> </em><span class="symbol_equal" style="opacity: 0"><i class="yahei95">=</i></span> <span class="middle_text_content"><i class="TimesNewRoman times95 middle_text" style="opacity: 0"></i></span> <span class="symbol_arrow_equal" style="opacity: 0"><i class="yahei95">=</i></span></span></div></div></div><div class="WavesSuperposition_dialog_wrapper hide_dom"><div class="com_dialog_inner"><div class="com_dialog_box WavesSuperposition_dialog_tip"><div class="tip_txt">点击重合区域任意一点,查看叠加详情</div></div></div></div></div><div class="WavesSuperposition_footer"><div class="WavesSuperposition_left"><ul><li class="play"><a><span class="icon"><i></i></span> </a><span class="txt">播放</span></li><li class="pause" style="display: none"><a><span class="icon"><i></i></span> </a><span class="txt">暂停</span></li><li class="slow"><a><span class="icon"><i></i></span> </a><span class="txt">减速</span></li><li class="waves"><a><span class="icon"><i></i></span> </a><span class="txt">原波</span></li><li class="reset disabled"><a><span class="icon"><i></i></span> </a><span class="txt">重置</span></li></ul></div></div></div></div>]]></view><presenter><![CDATA[/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _presenter = __webpack_require__(1);\n\nvar _presenter2 = _interopRequireDefault(_presenter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.AddonWavesSuperposition_create = function () {\n\treturn _presenter2.default;\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/presenter.js\n// module id = 0\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/presenter.js?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _run = __webpack_require__(2);\n\nvar _run2 = _interopRequireDefault(_run);\n\nvar _setBasePath = __webpack_require__(11);\n\nvar _setBasePath2 = _interopRequireDefault(_setBasePath);\n\nvar _destroy = __webpack_require__(12);\n\nvar _destroy2 = _interopRequireDefault(_destroy);\n\nvar _initStudentMobile = __webpack_require__(13);\n\nvar _initStudentMobile2 = _interopRequireDefault(_initStudentMobile);\n\nvar _setLangType = __webpack_require__(14);\n\nvar _setLangType2 = _interopRequireDefault(_setLangType);\n\nvar _setPlayerController = __webpack_require__(15);\n\nvar _setPlayerController2 = _interopRequireDefault(_setPlayerController);\n\nvar _onEventReceived = __webpack_require__(16);\n\nvar _onEventReceived2 = _interopRequireDefault(_onEventReceived);\n\nvar _getExtendData = __webpack_require__(17);\n\nvar _getExtendData2 = _interopRequireDefault(_getExtendData);\n\nvar _getQuestionInfo = __webpack_require__(18);\n\nvar _getQuestionInfo2 = _interopRequireDefault(_getQuestionInfo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import getService from './presenter/getService'\n// import metaInfo from './presenter/metaInfo'\n\nexports.default = {\n\t// metaInfo,   \n\trun: _run2.default,\n\tdestroy: _destroy2.default,\n\tsetBasePath: _setBasePath2.default,\n\tinitStudentMobile: _initStudentMobile2.default,\n\tsetUrlParams: _setLangType2.default,\n\tsetPlayerController: _setPlayerController2.default,\n\tonEventReceived: _onEventReceived2.default,\n\tgetExtendData: _getExtendData2.default,\n\tgetQuestionInfo: _getQuestionInfo2.default\n\t// getService\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter.js\n// module id = 1\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nexports.default = function (view, model) {\n\tvar extendData = getExtData(model);\n\tthis.__interface = {\n\t\tresizeScreen: function resizeScreen(data) {\n\t\t\t//data {ratio:4/3||3/4}\n\t\t\t_AppControl2.default.getInst().handlerResizeScreen(data);\n\t\t}\n\t};\n\treturn window.I18nManager.getInstance().loadLanguage('WavesSuperposition', _I18NControl2.default.getInst().langType).done(function (data) {\n\t\t_I18NControl2.default.getInst().i18nData = data.lang;\n\t\t_AppControl2.default.getInst().init(view, extendData);\n\t});\n};\n\nvar _AppControl = __webpack_require__(3);\n\nvar _AppControl2 = _interopRequireDefault(_AppControl);\n\nvar _I18NControl = __webpack_require__(7);\n\nvar _I18NControl2 = _interopRequireDefault(_I18NControl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 获取教师端推送过来的数据\r\n */\n/**\r\n * 运行环境下, 初始化Module的方法\r\n * @param view 运行视图(DOM对象)\r\n * @param model Module的模型, Key-Value结构\r\n * @remark 该方法为Module生命周期方法,仅在Module初始化时执行一次\r\n */\nfunction getExtData(model) {\n\tif (!model || !model.__ExtendModel) return null;\n\tif (model.__ExtendModel.data) return model.__ExtendModel.data;\n\treturn null;\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/run.js\n// module id = 2\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/run.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseControl2 = __webpack_require__(4);\n\nvar _BaseControl3 = _interopRequireDefault(_BaseControl2);\n\nvar _AppConfig = __webpack_require__(5);\n\nvar _AppConfig2 = _interopRequireDefault(_AppConfig);\n\nvar _AppData = __webpack_require__(6);\n\nvar _AppData2 = _interopRequireDefault(_AppData);\n\nvar _I18NControl = __webpack_require__(7);\n\nvar _I18NControl2 = _interopRequireDefault(_I18NControl);\n\nvar _GraphControl = __webpack_require__(8);\n\nvar _GraphControl2 = _interopRequireDefault(_GraphControl);\n\nvar _FunctionControl = __webpack_require__(9);\n\nvar _FunctionControl2 = _interopRequireDefault(_FunctionControl);\n\nvar _AnimateControl = __webpack_require__(10);\n\nvar _AnimateControl2 = _interopRequireDefault(_AnimateControl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 功能控制器\r\n */\nvar AppControl = function (_BaseControl) {\n    _inherits(AppControl, _BaseControl);\n\n    _createClass(AppControl, null, [{\n        key: 'getInst',\n        value: function getInst() {\n            AppControl._inst = AppControl._inst || new AppControl();\n            return AppControl._inst;\n        }\n\n        /**\r\n         * 构造\r\n         */\n\n        /**\r\n         * 单例\r\n         */\n\n    }]);\n\n    function AppControl() {\n        _classCallCheck(this, AppControl);\n\n        return _possibleConstructorReturn(this, (AppControl.__proto__ || Object.getPrototypeOf(AppControl)).call(this));\n    }\n\n    /**\r\n     * 析构\r\n     */\n\n\n    _createClass(AppControl, [{\n        key: 'destroy',\n        value: function destroy() {\n            this.data.destroy();\n            this.i18N.destroy();\n            this.config.destroy();\n            this.graph.destroy();\n            this.func.destroy();\n            this.animate.destroy();\n            this.data = null;\n            this.i18N = null;\n            this.config = null;\n            this.graph = null;\n            this.func = null;\n            this.animate = null;\n            this.$view = null;\n            AppControl._inst = null;\n        }\n\n        /**\r\n         * 初始化事件\r\n         */\n\n    }, {\n        key: 'init',\n        value: function init(view, extendData) {\n            var that = this;\n            this.$view = $(view);\n            this.i18N = _I18NControl2.default.getInst().init(this);\n            this.config = _AppConfig2.default.getInst().init(this);\n            this.graph = _GraphControl2.default.getInst().init(this);\n            this.func = _FunctionControl2.default.getInst().init(this);\n            this.animate = _AnimateControl2.default.getInst().init(this);\n            this.data = _AppData2.default.getInst();\n            this.data.init(this, extendData);\n            return this;\n        }\n    }, {\n        key: 'handlerResizeScreen',\n        value: function handlerResizeScreen(data) {\n            this.graph.handlerResizeScreen(data);\n        }\n    }]);\n\n    return AppControl;\n}(_BaseControl3.default);\n\nexports.default = AppControl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/control/AppControl.js\n// module id = 3\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/control/AppControl.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _AppConfig = __webpack_require__(5);\n\nvar _AppConfig2 = _interopRequireDefault(_AppConfig);\n\nvar _presenter = __webpack_require__(1);\n\nvar _presenter2 = _interopRequireDefault(_presenter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 控制器基类\r\n *\r\n * @author Tiago\r\n */\nvar BaseControl = function () {\n\t/**\r\n  * 构造\r\n  */\n\tfunction BaseControl() {\n\t\t_classCallCheck(this, BaseControl);\n\t}\n\n\t/**\r\n  * 根据事件类型，获取目标\r\n  * 主要是为了pad兼容\r\n  */\n\n\n\t_createClass(BaseControl, [{\n\t\tkey: \"_getRealEvent\",\n\t\tvalue: function _getRealEvent(event) {\n\t\t\tvar stopPop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\tif (event.originalEvent) event = event.originalEvent;\n\t\t\tstopPop && event.stopPropagation && event.stopPropagation();\n\t\t\tif (event.targetTouches && event.targetTouches.length) return event.targetTouches[0];\n\t\t\tif (event.changedTouches && event.changedTouches.length) return event.changedTouches[0];\n\t\t\treturn event;\n\t\t}\n\n\t\t/**\r\n   * 打印调用堆栈\r\n   */\n\n\t}, {\n\t\tkey: \"__\",\n\t\tvalue: function __() {\n\t\t\tconsole.log(this);\n\t\t\tthrow new Error('《调用堆栈》');\n\t\t}\n\t}]);\n\n\treturn BaseControl;\n}();\n\nexports.default = BaseControl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/control/BaseControl.js\n// module id = 4\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/control/BaseControl.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _presenter = __webpack_require__(1);\n\nvar _presenter2 = _interopRequireDefault(_presenter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 颗粒配置环境\r\n *\r\n * @author Tiago\r\n */\nvar AppConfig = function () {\n\tfunction AppConfig() {\n\t\t_classCallCheck(this, AppConfig);\n\t}\n\n\t_createClass(AppConfig, [{\n\t\tkey: 'init',\n\n\n\t\t/**\r\n   * 初始化\r\n   */\n\t\tvalue: function init(app) {\n\t\t\tvar that = this;\n\t\t\tthis.app = app;\n\t\t\tthis.fontSize = this.app.$view.css('font-size').replace(/px/, '');\n\n\t\t\tthis.BASE_LINE_WIDTH = 0.4166666666666667; // 线的宽度基数\n\t\t\tthis.BASE_CIRCLE_WIDTH = 0.375; // 控制点的宽度基数\n\t\t\tthis.BASE_BORDER_WIDTH = 0.125; // 控制点的边框宽度\n\t\t\tthis.STATE_INIT = 0; // 动画未开始\n\t\t\tthis.STATE_RUN = 1; // 动画运动\n\t\t\tthis.STATE_PAUSE = 2; // 动画暂停\n\t\t\tthis.STATE_OVER = 3; // 动画结束\n\t\t\tthis.ARROW_STATE_INIT = 0; // 箭号动画未开始\n\t\t\tthis.ARROW_STATE_RUN = 1; // 箭号动画运动\n\t\t\tthis.ARROW_STATE_OVER = 2; // 箭号动画结束\n\t\t\tthis.SLOW_SPEED = 10000; // 慢速度\n\t\t\tthis.NORMAL_SPEED = 6000; // 正常速度\n\t\t\tthis.LINE_COLOR = '#00a309'; // 水平线颜色\n\t\t\tthis.LEFT_WAVE_COLOR = '#f09300'; // 左波颜色\n\t\t\tthis.MIDDLE_WAVE_COLOR = '#00a309'; // 相交波颜色\n\t\t\tthis.RIGHT_WAVE_COLOR = '#01a8ff'; // 右波颜色\n\t\t\tthis.WAVE_SELECTED_COLOR = '#ff0'; // 波选中颜色\n\t\t\tthis.CONTROLLER_STROKE_COLOR = '#fff'; // 控制点边框色\n\t\t\tthis.CONTROLLER_COLOR = '#f70000'; // 控制点颜色\n\t\t\tthis.LEFT_CONTROLLER_COLOR = '#e06313'; // 左控制点颜色\n\t\t\tthis.RIGHT_CONTROLLER_COLOR = '#0086db'; // 右控制点颜色\n\t\t\tthis.CONTROLLER_SELECTED_COLOR = '#f70000'; // 控制点选中颜色\n\t\t\tthis.LEFT_WAVE_TYPE = 'leftWave'; // 左波下两控制点的类型\n\t\t\tthis.RIGHT_WAVE_TYPE = 'rightWave'; // 右波下两控制点的类型\n\t\t\tthis.LEFT_ARROW_COLOR = '#f09300'; // 左波箭号颜色\n\t\t\tthis.RIGHT_ARROW_COLOR = '#01a8ff'; // 右波箭号颜色\n\t\t\tthis.MIDDLE_ARROW_COLOR = '#00a309'; // 相交波箭号颜色\n\t\t\tthis.EQUAL_LINE_COLOR = '#000'; // 等号颜色\n\t\t\tthis.CONTROLLER_RADIUS = this.BASE_CIRCLE_WIDTH * this.fontSize; // 控制点半径\n\t\t\tthis.CONTROLLER_STROKE = this.BASE_BORDER_WIDTH * this.fontSize; // 控制点边框\n\t\t\tthis.BORDER_DISTANCE = 2 * this.fontSize;\n\t\t\tthis.LINE_WIDTH = this.BASE_LINE_WIDTH * this.fontSize; // 线宽\n\t\t\tthis.ARROW_WIDTH = 0.7 * this.fontSize;\n\t\t\tthis.LINE_DASH = this.LINE_WIDTH / 10 + ', ' + this.LINE_WIDTH * 2; // 虚线间隔样式\n\t\t\tthis.LINE_OPACITY = .3; // 虚线透明度\n\t\t\tthis.LINE_CAP = 'round'; // 线的端点样式\n\t\t\tthis.LINE_JOIN = 'round'; // 线交点样式\n\t\t\tthis.ARROW_ANIMATE_TIME = 1.2; // 箭号动画时间\n\t\t\tthis.ARROW_ANIMATE_DELAY_TIME = 0.6; // 箭号动画延迟时间\n\t\t\tthis.BASE_MIDDLE_ARROW_POSITION = 29 / 32; // 白框显示相交波箭号位置的基数\n\t\t\tthis.BASE_ARROW_POSITION = 31 / 32; // 白框显示左右波箭号位置的基数\n\t\t\tthis.HORIZONTAL_LINE_OFFSET = 2 * this.fontSize; // 水平偏移值\n\t\t\tthis.VERTICAL_LINE_OFFSET = 6 * this.fontSize; // 垂直偏移值\n\t\t\tthis.VERTICAL_MIDDLE_OFFSET = 2 * this.fontSize; // 相交波箭号垂直偏移值\n\t\t\tthis.VERTICAL_ARROW_OFFSET = 7.5 * this.fontSize; // 箭号垂直偏移值\n\t\t\tthis.EQUAL_LENGTH = 1.95 * this.fontSize; // 等号的长度\n\t\t\tthis.EQUAL_PADDING = 1 / 64; // 等号两边补白基数\n\t\t\tthis.VALID_LINE_WIDTH = 1.7 * this.fontSize; // 有效线宽度\n\t\t\tthis.VALID_CIRCLE_WIDTH = 1 * this.fontSize; // 有效点宽度\n\t\t\tthis.RUN_FORWARD = 0; // 正向运动\n\t\t\tthis.RUN_REVERSE = 1; // 反向运动\n\t\t\tthis.SELECT_NONE_WAVE = 0; // 未选中波\n\t\t\tthis.SELECT_LEFT_WAVE = 1; // 选中左波\n\t\t\tthis.SELECT_RIGHT_WAVE = 2; // 选中左波\n\t\t\tthis.SHAKE_DISTANCE = 2; // 防抖动距离\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tAppConfig._inst = null;\n\t\t}\n\t}], [{\n\t\tkey: 'getInst',\n\t\tvalue: function getInst() {\n\t\t\tAppConfig._inst = AppConfig._inst || new AppConfig();\n\t\t\treturn AppConfig._inst;\n\t\t}\n\n\t\t/**\r\n   * 单例\r\n   */\n\n\t}]);\n\n\treturn AppConfig;\n}();\n\nexports.default = AppConfig;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/model/AppConfig.js\n// module id = 5\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/model/AppConfig.js?");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AppData = function () {\n    _createClass(AppData, null, [{\n        key: 'getInst',\n        value: function getInst() {\n            AppData._inst = AppData._inst || new AppData();\n            return AppData._inst;\n        }\n        /**\r\n         * 单例\r\n         */\n\n    }]);\n\n    function AppData() {\n        _classCallCheck(this, AppData);\n\n        this.$svg = null;\n        this.worldCoord = {}; // 世界坐标\n        this.data = {};\n        this.maxOffset = 0; // 最大偏移值\n    }\n\n    _createClass(AppData, [{\n        key: 'init',\n        value: function init(app, data) {\n            this.app = app;\n            this.$svg = this.app.$view.find('.waves_superposition_svg:first');\n            this.isTransform = false; // 是否在修改波的形状，如波峰，波长，波形等\n            this.isWaveRun = false; // 是否波在运动\n            this.isArrowRun = false; // 是否箭号在运动\n            this.timelineMax = null; // 箭号动画\n            this.svgWidth = this.$svg.width(); //  svg的宽度\n            this.svgHeight = this.$svg.height(); // svg的高度\n            if (this.svgWidth && this.svgHeight) {\n                var self = this;\n                this.$svg.each(function () {\n                    $(this)[0].setAttribute('viewBox', '0 0' + ' ' + self.svgWidth + ' ' + self.svgHeight + '');\n                });\n            }\n            this.worldCoord = { // 世界坐标\n                x: this.svgWidth / 2,\n                y: this.svgHeight / 2\n            };\n            this._defaultData = {\n                isReverse: 0, // 0正向，1反向\n                isShowOriginalWave: 0, // 0不显示，1为显示\n                leftWave: {\n                    start: {\n                        x: this.svgWidth / 8 / this.app.config.fontSize,\n                        y: this.worldCoord.y / this.app.config.fontSize\n                    },\n                    middle: {\n                        x: this.svgWidth / 4 / this.app.config.fontSize,\n                        y: this.svgHeight * 5 / 16 / this.app.config.fontSize\n                    },\n                    startSide: 0, // 0为弧，1为直线\n                    endSide: 0 // 0为弧，1为直线\n                },\n                rightWave: {\n                    start: {\n                        x: this.svgWidth * 5 / 8 / this.app.config.fontSize,\n                        y: this.worldCoord.y / this.app.config.fontSize\n                    },\n                    middle: {\n                        x: this.svgWidth * 3 / 4 / this.app.config.fontSize,\n                        y: this.svgHeight * 5 / 16 / this.app.config.fontSize\n                    },\n                    startSide: 0, // 0为弧，1为直线\n                    endSide: 0 // 0为弧，1为直线\n                },\n                curOffset: 0, // 运动偏移量\n                curSpeed: this.app.config.NORMAL_SPEED, // 当前速度\n                curState: 0,\n                curPoint: {\n                    x: 0,\n                    y: 0,\n                    leftY: 0,\n                    rightY: 0,\n                    runState: 0 // 0箭号未运动，1箭号运动, 2箭号运动完成\n                }, // 相交波上选中的点位置\n                curSelectWave: 0 // 0未选中，1选中左波，2选中右波\n            };\n\n            if (!data) {\n                data = this._defaultData;\n            }\n            data = this._em2px(data);\n\n            // data = {\n            // \t\"isShowOriginalWave\": 1,\n            //     \"leftWave\": {\n            //         \"start\": {\"x\": 134.875, \"y\": 258.6875},\n            //         \"middle\": {\"x\": 269.75, \"y\": 161.6796875},\n            //         \"startSide\": 0,\n            //         \"endSide\": 0\n            //     },\n            //     \"rightWave\": {\n            //         \"start\": {\"x\": 674.375, \"y\": 258.6875},\n            //         \"middle\": {\"x\": 809.2499999999999, \"y\": 161.6796875},\n            //         \"startSide\": 0,\n            //         \"endSide\": 0\n            //     },\n            //     \"curOffset\": 178.03500000000076,\n            //     \"curSpeed\": 10000,\n            //     \"curState\": 1,\n            //     \"curPoint\": {\n            //         \"x\": 551.9100000000008,\n            //         \"y\": -102.17640870747556,\n            //         \"leftY\": -39.19104259770958,\n            //         \"rightY\": -62.98536610976598,\n            //         \"runState\": 1\n            //     }\n            // };\n\n            this.maxOffset = Math.abs(data.leftWave.middle.x - data.rightWave.middle.x);\n            // 如果推送的状态是运动，将curOffset设置为0\n            if (data.curState === this.app.config.STATE_RUN) {\n                data.isReverse ? data.curOffset = this.maxOffset : data.curOffset = 0;\n            }\n            this.data = data;\n            this._init = true;\n            for (var key in data) {\n                this[key] = data[key];\n            }\n            this._init = false;\n            return this;\n        }\n\n        /**\r\n         * [克隆对象]\r\n         * @param  {[object]} obj [被克隆对象]\r\n         */\n\n    }, {\n        key: '_cloneObj',\n        value: function _cloneObj(obj) {\n            if (!obj) return;\n            var str,\n                newobj = obj.constructor === Array ? [] : {};\n            if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {\n                return;\n            } else if (window.JSON) {\n                str = JSON.stringify(obj), //系列化对象\n                newobj = JSON.parse(str); //还原\n            } else {\n                for (var i in obj) {\n                    newobj[i] = _typeof(obj[i]) === 'object' ? cloneObj(obj[i]) : obj[i];\n                }\n            }\n            return newobj;\n        }\n\n        /**\r\n         * [将数据里em转成px]\r\n         * @param  {[object]} data [转换前的数据]\r\n         * @return {[object]}      [转换后的数据]\r\n         */\n\n    }, {\n        key: '_em2px',\n        value: function _em2px(data) {\n            var curData = this._cloneObj(data);\n            curData.leftWave.start.x *= this.app.config.fontSize;\n            curData.leftWave.start.y *= this.app.config.fontSize;\n            curData.leftWave.middle.x *= this.app.config.fontSize;\n            curData.leftWave.middle.y *= this.app.config.fontSize;\n            curData.rightWave.start.x *= this.app.config.fontSize;\n            curData.rightWave.start.y *= this.app.config.fontSize;\n            curData.rightWave.middle.x *= this.app.config.fontSize;\n            curData.rightWave.middle.y *= this.app.config.fontSize;\n            curData.curPoint.x *= this.app.config.fontSize;\n            curData.curPoint.y *= this.app.config.fontSize;\n            curData.curPoint.leftY *= this.app.config.fontSize;\n            curData.curPoint.rightY *= this.app.config.fontSize;\n            curData.curOffset *= this.app.config.fontSize;\n            return curData;\n        }\n\n        /**\r\n         * [将数据里px转成em]\r\n         * @return {[object]}      [转换后的数据]\r\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\r\n         * 销毁\r\n         */\n        value: function destroy() {\n            AppData._inst = null;\n        }\n    }, {\n        key: 'transformData',\n        get: function get() {\n            var curData = this._cloneObj(this.data);\n            curData.leftWave.start.x /= this.app.config.fontSize;\n            curData.leftWave.start.y /= this.app.config.fontSize;\n            curData.leftWave.middle.x /= this.app.config.fontSize;\n            curData.leftWave.middle.y /= this.app.config.fontSize;\n            curData.rightWave.start.x /= this.app.config.fontSize;\n            curData.rightWave.start.y /= this.app.config.fontSize;\n            curData.rightWave.middle.x /= this.app.config.fontSize;\n            curData.rightWave.middle.y /= this.app.config.fontSize;\n            curData.curPoint.x /= this.app.config.fontSize;\n            curData.curPoint.y /= this.app.config.fontSize;\n            curData.curPoint.leftY /= this.app.config.fontSize;\n            curData.curPoint.rightY /= this.app.config.fontSize;\n            curData.curOffset /= this.app.config.fontSize;\n            return curData;\n        }\n\n        /**\r\n         * [获取左波的结束点的坐标]\r\n         * @return {[object]}             [波的结束点]\r\n         */\n\n    }, {\n        key: 'leftEndPoint',\n        get: function get() {\n            return {\n                x: this.data.leftWave.middle.x + (this.data.leftWave.middle.x - this.data.leftWave.start.x),\n                y: this.data.leftWave.start.y\n            };\n        }\n\n        /**\r\n         * [获取右波的结束点的坐标]\r\n         * @return {[object]}             [波的结束点]\r\n         */\n\n    }, {\n        key: 'rightEndPoint',\n        get: function get() {\n            return {\n                x: this.data.rightWave.middle.x + (this.data.rightWave.middle.x - this.data.rightWave.start.x),\n                y: this.data.rightWave.start.y\n            };\n        }\n\n        /**\r\n         * [获取当前状态]\r\n         */\n\n    }, {\n        key: 'curState',\n        get: function get() {\n            return this.data.curState;\n        }\n\n        /**\r\n         * [设置当前状态]\r\n         * @param  {[number]} state [状态值]\r\n         */\n        ,\n        set: function set(curState) {\n            this.data.curState = curState;\n            this.app.func.playState(curState);\n            this.app.animate.animateState(curState);\n            this.app.graph.operateState(curState, this._init);\n        }\n\n        /**\r\n         * [获取左边波的两点坐标]\r\n         * @return {[object]} [左边波的两点坐标]\r\n         */\n\n    }, {\n        key: 'leftWave',\n        get: function get() {\n            return this.data.leftWave;\n        }\n\n        /**\r\n         * [设置左边波的两点坐标]\r\n         * @param  {[object]} leftWave [左边波的两点坐标]\r\n         */\n        ,\n        set: function set(leftWave) {\n            this.data.leftWave = leftWave;\n        }\n\n        /**\r\n         * [获取右边波的两点坐标]\r\n         * @return {[object]} [右边波的两点坐标]\r\n         */\n\n    }, {\n        key: 'rightWave',\n        get: function get() {\n            return this.data.rightWave;\n        }\n\n        /**\r\n         * [设置右边波的两点坐标]\r\n         * @param  {[object]} rightWave [右边波的两点坐标]\r\n         */\n        ,\n        set: function set(rightWave) {\n            this.data.rightWave = rightWave;\n        }\n\n        /**\r\n         * [获取偏移量]\r\n         * @return {[number]} [偏移量]\r\n         */\n\n    }, {\n        key: 'curOffset',\n        get: function get() {\n            return this.data.curOffset;\n        }\n\n        /**\r\n         * [curOffset description]\r\n         * @param  {[number]} curOffset [偏移量]\r\n         */\n        ,\n        set: function set(curOffset) {\n            this.data.curOffset = curOffset;\n            this.app.graph.update();\n        }\n\n        /**\r\n         * 获取当前速度,即动画间隔时长\r\n         */\n\n    }, {\n        key: 'curSpeed',\n        get: function get() {\n            return this.data.curSpeed;\n        }\n\n        /**\r\n         * 设置当前速度\r\n         */\n        ,\n        set: function set(curSpeed) {\n            this.data.curSpeed = curSpeed;\n            this.app.func.speedState(curSpeed);\n        }\n\n        /**\r\n         * 是否显示原波\r\n         */\n\n    }, {\n        key: 'isShowOriginalWave',\n        get: function get() {\n            return this.data.isShowOriginalWave;\n        }\n\n        /**\r\n         * 设置原波的显示\r\n         */\n        ,\n        set: function set(isShowOriginalWave) {\n            this.data.isShowOriginalWave = isShowOriginalWave;\n            this.app.func.waveState(isShowOriginalWave);\n        }\n\n        /**\r\n         * 当前相交波选中的点位置\r\n         */\n\n    }, {\n        key: 'curPoint',\n        get: function get() {\n            return this.data.curPoint;\n        },\n        set: function set(point) {\n            this.data.curPoint = point;\n            this.app.graph.drawArrows(point);\n        }\n\n        /**\r\n         * 是否修改波的形态\r\n         */\n\n    }, {\n        key: 'transform',\n        get: function get() {\n            return this.isTransform;\n        }\n\n        /**\r\n         * 是否修改波的形态\r\n         */\n        ,\n        set: function set(transform) {\n            this.isTransform = transform;\n        }\n\n        /**\r\n         * 是否波在运动\r\n         */\n\n    }, {\n        key: 'waveRun',\n        get: function get() {\n            return this.isWaveRun;\n        }\n\n        /**\r\n         * 是否波在运动\r\n         */\n        ,\n        set: function set(run) {\n            this.isWaveRun = run;\n        }\n\n        /**\r\n         * 是否箭号在运动\r\n         */\n\n    }, {\n        key: 'arrowRun',\n        get: function get() {\n            return this.isArrowRun;\n        }\n\n        /**\r\n         * 是否箭号在运动\r\n         */\n        ,\n        set: function set(run) {\n            this.isArrowRun = run;\n        }\n\n        /**\r\n         * 箭号动画\r\n         */\n\n    }, {\n        key: 'timeline',\n        get: function get() {\n            return this.timelineMax;\n        },\n        set: function set(tl) {\n            this.timelineMax = tl;\n        }\n\n        /**\r\n         * 是否反向运动\r\n         */\n\n    }, {\n        key: 'reverse',\n        get: function get() {\n            return this.data.isReverse;\n        },\n        set: function set(isReverse) {\n            return this.data.isReverse = isReverse;\n        }\n\n        /**\r\n         * 当前选中波\r\n         */\n\n    }, {\n        key: 'curSelectWave',\n        get: function get() {\n            return this.data.curSelectWave;\n        },\n        set: function set(curSelectWave) {\n            this.data.curSelectWave = curSelectWave;\n            this.app.animate.selectWave(curSelectWave);\n        }\n    }]);\n\n    return AppData;\n}();\n\nexports.default = AppData;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/model/AppData.js\n// module id = 6\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/model/AppData.js?");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 功能控制器\r\n */\nvar I18NControl = function () {\n    _createClass(I18NControl, null, [{\n        key: 'getInst',\n        value: function getInst() {\n            I18NControl._inst = I18NControl._inst || new I18NControl();\n            return I18NControl._inst;\n        }\n\n        /**\r\n         * 构造\r\n         */\n\n        /**\r\n         * 单例\r\n         */\n\n    }]);\n\n    function I18NControl() {\n        _classCallCheck(this, I18NControl);\n\n        this.i18nData = {};\n        this.langType = null;\n    }\n\n    /**\r\n     * 析构\r\n     */\n\n\n    _createClass(I18NControl, [{\n        key: 'destroy',\n        value: function destroy() {\n            I18NControl._inst = null;\n        }\n\n        /**\r\n         * 初始化事件\r\n         */\n\n    }, {\n        key: 'init',\n        value: function init(app) {\n            this.app = app;\n            //TODO 多语言初始化事件\n            var data = this.i18nData;\n\n            this.$playText = this.app.$view.find('.play .txt'); // 播放按钮\n            this.$speedText = this.app.$view.find('.slow .txt'); // 速度按钮\n            this.$waveText = this.app.$view.find('.waves .txt'); // 波按钮\n            this.$resetText = this.app.$view.find('.reset .txt'); // 重置按钮\n            this.$tipTxt = this.app.$view.find('.WavesSuperposition_dialog_wrapper:first .tip_txt'); // 信息提示框\n\n            this.$playText.text(this.i18nData['btn_play']);\n            this.$speedText.text(this.i18nData['btn_slow']);\n            this.$waveText.text(this.i18nData['btn_wave']);\n            this.$resetText.text(this.i18nData['btn_reset']);\n            this.$tipTxt.text(this.i18nData['msg_edit_wave']);\n\n            return this;\n        }\n    }]);\n\n    return I18NControl;\n}();\n\nexports.default = I18NControl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/control/I18NControl.js\n// module id = 7\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/control/I18NControl.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseControl2 = __webpack_require__(4);\n\nvar _BaseControl3 = _interopRequireDefault(_BaseControl2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GraphControl = function (_BaseControl) {\n\t_inherits(GraphControl, _BaseControl);\n\n\t_createClass(GraphControl, null, [{\n\t\tkey: 'getInst',\n\t\tvalue: function getInst() {\n\t\t\tGraphControl._inst = GraphControl._inst || new GraphControl();\n\n\t\t\treturn GraphControl._inst;\n\t\t}\n\n\t\t/**\r\n   * 构造\r\n   */\n\n\t\t/**\r\n   * 单例\r\n   */\n\n\t}]);\n\n\tfunction GraphControl() {\n\t\t_classCallCheck(this, GraphControl);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GraphControl.__proto__ || Object.getPrototypeOf(GraphControl)).call(this));\n\n\t\t_this._positions = []; // 两波四个点的位置集合\n\t\t_this._leftPoints = []; // 左波的点集合\n\t\t_this._rightPoints = []; // 右波的点集合\n\t\t_this._middlePoints = []; // 相交波的点集合\n\t\t_this.svg = Snap('.waves_superposition_svg'); // svg\n\t\t_this._leftLine = _this.svg.paper.path(''); // 左边水平线\n\t\t_this._middleLine = _this.svg.paper.path(''); // 中间水平线\n\t\t_this._rightLine = _this.svg.paper.path(''); // 右边水平线\n\t\t_this._tipEditOnce = false; // 提示修改波次数为一次\n\t\t_this._tipDetailOnce = false; // 提示波详情次数为一次\n\t\t_this._tl = null; // 箭号动画\n\t\t_this.ratio = 3 / 4; //全屏缩放比\n\t\t_this.index = 1;\n\t\t_this.initRatio = 1;\n\t\treturn _this;\n\t}\n\n\t/**\r\n  * 析构\r\n  */\n\n\n\t_createClass(GraphControl, [{\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis._unbindEvent();\n\t\t\tGraphControl._inst = null;\n\t\t}\n\n\t\t/**\r\n   * 初始化事件\r\n   */\n\n\t}, {\n\t\tkey: 'init',\n\t\tvalue: function init(app) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar that = this;\n\t\t\tthis.app = app;\n\n\t\t\tthis.$tip = this.app.$view.find('.WavesSuperposition_dialog_wrapper:first'); // 提示信息框\n\t\t\t// this.$close = this.app.$view.find('.dialog_close:first');\t// 箭号框的删除按钮\n\t\t\t// this.$arrowBox = this.app.$view.find('.WavesSuperposition_dialog_whitePop:first'); // 箭号框\n\t\t\t// this.$arrowInner = this.app.$view.find('.whitePop_inner:first');\t// 箭号框白色区域\n\t\t\tthis.$middleText = this.app.$view.find('.middle_text:first'); // 显示相交波数值\n\t\t\tthis.$rightText = this.app.$view.find('.right_text:first'); // 显示右波数值\n\t\t\tthis.$leftText = this.app.$view.find('.left_text:first'); // 显示左波数值\n\t\t\tthis.$symbolLeft = this.app.$view.find('.symbol_left:first'); // 左波左括号\n\t\t\tthis.$symbolRight = this.app.$view.find('.symbol_right:first'); // 左波右括号\n\t\t\tthis.$symbolAdd = this.app.$view.find('.symbol_add:first'); // 左波右括号\n\t\t\tthis.$symbolEqual = this.app.$view.find('.symbol_equal:first'); // 左波右括号\n\t\t\tthis.$arrowEqual = this.app.$view.find('.symbol_arrow_equal:first'); // 箭号中的等号\n\n\t\t\tthis._leftArrowGroup = this.svg.paper.g().attr({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tfillOpacity: 0\n\t\t\t}); // 左波箭号集合\n\t\t\tthis._rightArrowGroup = this.svg.paper.g().attr({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tfillOpacity: 0\n\t\t\t}); // 右波箭号集合\n\t\t\tthis._middleArrowGroup = this.svg.paper.g().attr({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tfillOpacity: 0\n\t\t\t}); // 相交波箭号集合\n\t\t\tthis._leftWave = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.LEFT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN\n\t\t\t}); // 左边波\n\t\t\tthis._leftWaveValid = this.svg.paper.path('').attr({\n\t\t\t\tclass: 'leftWave',\n\t\t\t\tstrokeOpacity: 0.001,\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.LEFT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.VALID_LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP\n\t\t\t}); // 有效左边波\n\t\t\tthis._leftWaveCross = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.LEFT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN,\n\t\t\t\tstrokeOpacity: this.app.config.LINE_OPACITY\n\t\t\t}); // 左边相交处\n\t\t\tthis._leftWaveSurplus = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.LEFT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN\n\t\t\t}); // 左边盈余处\n\t\t\tthis._rightWave = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.RIGHT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN\n\t\t\t}); // 右边波\n\t\t\tthis._rightWaveValid = this.svg.paper.path('').attr({\n\t\t\t\tclass: 'rightWave',\n\t\t\t\tstrokeOpacity: 0.001,\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.RIGHT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.VALID_LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP\n\t\t\t}); // 有效右边波\n\t\t\tthis._rightWaveCross = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.RIGHT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN,\n\t\t\t\tstrokeOpacity: this.app.config.LINE_OPACITY\n\t\t\t}); // 右边相交处\n\t\t\tthis._rightWaveSurplus = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.RIGHT_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN\n\t\t\t}); // 右边盈余处\n\t\t\tthis._middleWave = this.svg.paper.path('').attr({\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.MIDDLE_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tstrokeLinejoin: this.app.config.LINE_JOIN\n\t\t\t}); // 相交波\n\t\t\tthis._middleWaveValid = this.svg.paper.path('').attr({\n\t\t\t\tclass: 'middleWave',\n\t\t\t\tstrokeOpacity: 0.001,\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.MIDDLE_WAVE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.VALID_LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP\n\t\t\t}); // 相交波\n\t\t\tthis._leftController1 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR\n\t\t\t}); // 左波左边控制点\n\t\t\tthis._leftController1Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'leftController1',\n\t\t\t\tclass: 'leftController1',\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效左波左边控制点\n\t\t\tthis._leftController2 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR\n\t\t\t}); // 左波左上控制点\n\t\t\tthis._leftController2Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'leftController2',\n\t\t\t\tclass: 'leftController2',\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效左波左上控制点\n\t\t\tthis._leftController3 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR\n\t\t\t}); // 左波顶点控制点\n\t\t\tthis._leftController3Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'leftController3',\n\t\t\t\tclass: 'leftController3',\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效左波顶点控制点\n\t\t\tthis._leftController4 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR\n\t\t\t}); // 左波右上控制点\n\t\t\tthis._leftController4Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'leftController4',\n\t\t\t\tclass: 'leftController4',\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效左波右上控制点\n\t\t\tthis._leftController5 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR\n\t\t\t}); // 左波右边控制点\n\t\t\tthis._leftController5Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'leftController5',\n\t\t\t\tclass: 'leftController5',\n\t\t\t\tfill: this.app.config.LEFT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效左波右上控制点\n\t\t\tthis._rightController1 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR\n\t\t\t}); // 右波左边控制点\n\t\t\tthis._rightController1Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'rightController1',\n\t\t\t\tclass: 'rightController1',\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效右波左边控制点\n\t\t\tthis._rightController2 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR\n\t\t\t}); // 右波左上控制点\n\t\t\tthis._rightController2Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'rightController2',\n\t\t\t\tclass: 'rightController2',\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效右波左上控制点\n\t\t\tthis._rightController3 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR\n\t\t\t}); // 右波顶点控制点\n\t\t\tthis._rightController3Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'rightController3',\n\t\t\t\tclass: 'rightController3',\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效右波顶点控制点\n\t\t\tthis._rightController4 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR\n\t\t\t}); // 右波右上控制点\n\t\t\tthis._rightController4Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'rightController4',\n\t\t\t\tclass: 'rightController4',\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效右波右上控制点\n\t\t\tthis._rightController5 = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE,\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR\n\t\t\t}); // 右波右边控制点\n\t\t\tthis._rightController5Valid = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\t'curName': 'rightController5',\n\t\t\t\tclass: 'rightController5',\n\t\t\t\tfill: this.app.config.RIGHT_CONTROLLER_COLOR,\n\t\t\t\tfillOpacity: 0.001\n\t\t\t}); // 有效右波右边控制点\n\t\t\tthis._leftArrowLine = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH / 2,\n\t\t\t\tstroke: this.app.config.LEFT_ARROW_COLOR\n\t\t\t}); // 相交波箭号线\n\t\t\tthis._leftArrowCap = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tstroke: 'none',\n\t\t\t\tfill: this.app.config.LEFT_ARROW_COLOR\n\t\t\t}); // 相交波箭号箭帽\n\t\t\tthis._rightArrowLine = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH / 2,\n\t\t\t\tstroke: this.app.config.RIGHT_ARROW_COLOR\n\t\t\t}); // 相交波箭号线\n\t\t\tthis._rightArrowCap = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tstroke: 'none',\n\t\t\t\tfill: this.app.config.RIGHT_ARROW_COLOR\n\t\t\t}); // 相交波箭号箭帽\n\t\t\tthis._middleArrowLine = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH / 2,\n\t\t\t\tstroke: this.app.config.MIDDLE_ARROW_COLOR\n\t\t\t}); // 相交波箭号线\n\t\t\tthis._middleArrowCap = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tstroke: 'none',\n\t\t\t\tfill: this.app.config.MIDDLE_ARROW_COLOR\n\t\t\t}); // 相交波箭号箭帽\n\t\t\tthis._upLineOfEqual = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH / 1.5,\n\t\t\t\tstroke: this.app.config.EQUAL_LINE_COLOR\n\t\t\t}); // 等号上线\n\t\t\tthis._downLineOfEqual = this.svg.paper.path('').attr({\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH / 1.5,\n\t\t\t\tstroke: this.app.config.EQUAL_LINE_COLOR\n\t\t\t}); // 等号下线\n\t\t\tthis._equalGroup = this.svg.paper.g().attr({\n\t\t\t\tstrokeOpacity: 0\n\t\t\t}); // 等号集合\n\t\t\tthis._middleSelectPoint = this.svg.paper.circle(0, 0, 0).attr({\n\t\t\t\tfill: this.app.config.CONTROLLER_COLOR,\n\t\t\t\tstroke: this.app.config.CONTROLLER_STROKE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.CONTROLLER_STROKE\n\t\t\t}); // 相交波上选中点\n\t\t\tthis._leftGroup = this.svg.paper.g().attr({\n\t\t\t\tclass: 'leftGroup'\n\t\t\t}); // 左波控制点集合\n\t\t\tthis._rightGroup = this.svg.paper.g().attr({\n\t\t\t\tclass: 'rightGroup'\n\t\t\t}); // 右波控制点集合\n\t\t\tthis._leftGroup.add(this._leftController1, this._leftController2, this._leftController3, this._leftController4, this._leftController5, this._leftController1Valid, this._leftController2Valid, this._leftController3Valid, this._leftController4Valid, this._leftController5Valid);\n\t\t\tthis._rightGroup.add(this._rightController1, this._rightController2, this._rightController3, this._rightController4, this._rightController5, this._rightController1Valid, this._rightController2Valid, this._rightController3Valid, this._rightController4Valid, this._rightController5Valid);\n\t\t\tthis._middleArrowGroup.add(this._middleArrowLine, this._middleArrowCap);\n\t\t\tthis._leftArrowGroup.add(this._leftArrowLine, this._leftArrowCap);\n\t\t\tthis._rightArrowGroup.add(this._rightArrowLine, this._rightArrowCap);\n\t\t\tthis._equalGroup.add(this._upLineOfEqual, this._downLineOfEqual);\n\t\t\t$(this._leftGroup.node).hide();\n\t\t\t$(this._rightGroup.node).hide();\n\n\t\t\tthis._bindEvent();\n\t\t\t// $('.WavesSuperposition_wrapper').on('click', this._unselectWave.bind(this));\n\t\t\tthis.app.$view.on('click mousedown touchstart', function (e) {\n\t\t\t\t_this2._unselectWave.call(_this2, e);\n\t\t\t\t_this2.cancelSelect.call(_this2, e);\n\t\t\t});\n\t\t\tthis.app.$view.on('mouseleave touchcancel touchend', function () {\n\t\t\t\t_this2.app.data.transform = false;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 动画状态\r\n   */\n\n\t}, {\n\t\tkey: 'operateState',\n\t\tvalue: function operateState(state, isInit) {\n\t\t\tswitch (state) {\n\t\t\t\tcase this.app.config.STATE_INIT:\n\t\t\t\t\tif (!isInit) this.cancelSelect();\n\t\t\t\t\tif (!this._tipEditOnce) {\n\t\t\t\t\t\tthis._tipEditOnce = true;\n\t\t\t\t\t\tif (this.$tip.hasClass('hide_dom')) {\n\t\t\t\t\t\t\tthis.$tip.find('.tip_txt').text(this.app.i18N.i18nData[\"msg_edit_wave\"]);\n\t\t\t\t\t\t\tthis.$tip.removeClass('hide_dom');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.STATE_RUN:\n\t\t\t\t\tthis._unselectWave();\n\t\t\t\t\tthis.cancelSelect();\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.STATE_PAUSE:\n\t\t\t\t\tif (!this._tipDetailOnce && this._middlePoints.length > 0 && this.app.data.curPoint.runState === this.app.config.ARROW_STATE_INIT) {\n\t\t\t\t\t\tthis._tipDetailOnce = true;\n\t\t\t\t\t\tif (this.$tip.hasClass('hide_dom')) {\n\t\t\t\t\t\t\tthis.$tip.find('.tip_txt').text(this.app.i18N.i18nData[\"msg_detail\"]);\n\t\t\t\t\t\t\tthis.$tip.removeClass('hide_dom');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新图形\r\n   */\n\n\t}, {\n\t\tkey: 'update',\n\t\tvalue: function update() {\n\t\t\tthis._leftPoints = [];\n\t\t\tthis._rightPoints = [];\n\t\t\tthis._middlePoints = [];\n\t\t\tthis._wavesPositionInfo();\n\t\t\tthis._drawLine(this._positions);\n\t\t\tthis._drawWaves(this._positions);\n\t\t\tthis._drawControllers();\n\t\t}\n\n\t\t/**\r\n   * 获取消息\r\n   */\n\n\t}, {\n\t\tkey: '_wavesPositionInfo',\n\t\tvalue: function _wavesPositionInfo() {\n\t\t\tvar arr = [],\n\t\t\t    positions = [];\n\t\t\tvar leftWaveStart = {\n\t\t\t\tx: this.app.data.leftWave.start.x + this.app.data.curOffset,\n\t\t\t\ty: this.app.data.worldCoord.y,\n\t\t\t\ttype: this.app.config.LEFT_WAVE_TYPE\n\t\t\t};\n\t\t\tvar leftWaveEnd = {\n\t\t\t\tx: this.app.data.leftEndPoint.x + this.app.data.curOffset,\n\t\t\t\ty: this.app.data.worldCoord.y,\n\t\t\t\ttype: this.app.config.LEFT_WAVE_TYPE\n\t\t\t};\n\t\t\tvar rightWaveStart = {\n\t\t\t\tx: this.app.data.rightWave.start.x - this.app.data.curOffset,\n\t\t\t\ty: this.app.data.worldCoord.y,\n\t\t\t\ttype: this.app.config.RIGHT_WAVE_TYPE\n\t\t\t};\n\t\t\tvar rightWaveEnd = {\n\t\t\t\tx: this.app.data.rightEndPoint.x - this.app.data.curOffset,\n\t\t\t\ty: this.app.data.worldCoord.y,\n\t\t\t\ttype: this.app.config.RIGHT_WAVE_TYPE\n\t\t\t};\n\t\t\tarr.push(leftWaveStart, leftWaveEnd, rightWaveStart, rightWaveEnd);\n\t\t\tpositions = arr.sort(function (a, b) {\n\t\t\t\treturn a.x > b.x ? 1 : a.x < b.x ? -1 : 0;\n\t\t\t});\n\t\t\tthis._positions = positions;\n\t\t}\n\n\t\t//========================图形的绘制===============================\n\t\t/**\r\n   * 绘制线\r\n   */\n\n\t}, {\n\t\tkey: '_drawLine',\n\t\tvalue: function _drawLine(positions) {\n\t\t\tvar lineAttr = this.lineAttr;\n\t\t\tlineAttr.path = 'M0 ' + positions[0].y + ' ' + positions[0].x + ' ' + positions[0].y;\n\t\t\tthis._leftLine.attr(lineAttr);\n\t\t\tif (positions[0].type !== positions[1].type) {\n\t\t\t\t$(this._middleLine.node).hide();\n\t\t\t} else {\n\t\t\t\tlineAttr.path = 'M' + positions[1].x + ' ' + positions[1].y + ' ' + positions[2].x + ' ' + positions[2].y;\n\t\t\t\tthis._middleLine.attr(lineAttr);\n\t\t\t\t$(this._middleLine.node).show();\n\t\t\t}\n\t\t\tlineAttr.path = 'M' + positions[positions.length - 1].x + ' ' + positions[positions.length - 1].y + ' ' + this.app.data.svgWidth + ' ' + positions[positions.length - 1].y;\n\t\t\tthis._rightLine.attr(lineAttr);\n\t\t}\n\n\t\t/**\r\n   * 根据坐标X求对应的Y\r\n   */\n\n\t}, {\n\t\tkey: '_computeY',\n\t\tvalue: function _computeY(x, type, waveRate) {\n\t\t\tvar wave = this.app.data[type],\n\t\t\t    offset = type == this.app.config.LEFT_WAVE_TYPE ? this.app.data.curOffset : -this.app.data.curOffset,\n\t\t\t    dis = (wave.middle.x - wave.start.x) * 2,\n\t\t\t    x1 = wave.start.x + offset,\n\t\t\t    x2 = x1 + dis,\n\t\t\t    coordY = this.app.data.worldCoord.y,\n\t\t\t    y = 0,\n\t\t\t    a = waveRate.a,\n\t\t\t    r = wave.middle.y < coordY ? -waveRate.r : waveRate.r,\n\t\t\t    middleX = wave.middle.x + offset;\n\t\t\tvar lineType = x <= middleX ? wave.startSide : wave.endSide;\n\n\t\t\tif (!lineType) {\n\t\t\t\ty = a * (x - x1) * (x - x2);\n\t\t\t} else {\n\t\t\t\ty = x <= middleX ? r * (x - x1) : r * (x2 - x);\n\t\t\t}\n\n\t\t\treturn y;\n\t\t}\n\n\t\t/**\r\n   * 求波的path\r\n   */\n\n\t}, {\n\t\tkey: '_wavePath',\n\t\tvalue: function _wavePath(p1, p2, type, waveRate) {\n\t\t\tvar y = 0,\n\t\t\t    x = p1.x,\n\t\t\t    path = '',\n\t\t\t    coordY = this.app.data.worldCoord.y;\n\n\t\t\twhile (true) {\n\t\t\t\tif (p1.x < p2.x && x > p2.x || p1.x > p2.x && x < p2.x) {\n\t\t\t\t\tx = p2.x;\n\t\t\t\t}\n\t\t\t\ty = this._computeY(x, type, waveRate) + coordY;\n\t\t\t\tpath += ' ' + x + ' ' + y;\n\t\t\t\tif (x == p2.x) break;\n\t\t\t\tp1.x < p2.x ? x++ : x--;\n\t\t\t}\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\r\n   * 绘制相交波\r\n   */\n\n\t}, {\n\t\tkey: '_middlePath',\n\t\tvalue: function _middlePath(p1, p2, waveRate) {\n\t\t\tvar y1 = 0,\n\t\t\t    y2 = 0,\n\t\t\t    x = p1.x,\n\t\t\t    y = 0,\n\t\t\t    path = '',\n\t\t\t    coordY = this.app.data.worldCoord.y;\n\n\t\t\twhile (true) {\n\t\t\t\tx = x > p2.x ? p2.x : x;\n\t\t\t\ty1 = this._computeY(x, this.app.config.LEFT_WAVE_TYPE, waveRate[this.app.config.LEFT_WAVE_TYPE]);\n\t\t\t\ty2 = this._computeY(x, this.app.config.RIGHT_WAVE_TYPE, waveRate[this.app.config.RIGHT_WAVE_TYPE]);\n\t\t\t\ty = y1 + y2 + coordY;\n\t\t\t\tpath += ' ' + x + ' ' + y;\n\t\t\t\tthis._middlePoints.push({\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y1 + y2,\n\t\t\t\t\tleftY: y1,\n\t\t\t\t\trightY: y2\n\t\t\t\t});\n\t\t\t\tif (x == p2.x) break;\n\t\t\t\tx++;\n\t\t\t}\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\r\n   * 绘制波\r\n   */\n\n\t}, {\n\t\tkey: '_drawWaves',\n\t\tvalue: function _drawWaves(positions) {\n\t\t\tvar paths = {},\n\t\t\t    pathName = '',\n\t\t\t    middlePath = '',\n\t\t\t    waveRate = this.waveRate;\n\n\t\t\t// 根据第一个点的类型，绘制波\n\t\t\tpaths[positions[0].type] = this._wavePath(positions[0], positions[1], positions[0].type, waveRate[positions[0].type]);\n\t\t\t// 如果最后个点与第一个点相同，即有个波长比另一个波长要长，需绘制名字不同的另一段波\n\t\t\tpathName = positions[0].type === positions[3].type ? positions[3].type + 'surplus' : positions[3].type;\n\t\t\tpaths[pathName] = this._wavePath(positions[2], positions[3], positions[3].type, waveRate[positions[3].type]);\n\t\t\t//当左友波有交叉部分时，绘制叠加波与原波\n\t\t\tif (positions[0].type != positions[1].type) {\n\t\t\t\tif (this.app.data.curState === this.app.config.STATE_PAUSE || this.app.data.isShowOriginalWave) {\n\t\t\t\t\tpaths['leftCross'] = this._wavePath(positions[1], positions[2], this.app.config.LEFT_WAVE_TYPE, waveRate[this.app.config.LEFT_WAVE_TYPE]);\n\t\t\t\t\tpaths['rightCross'] = this._wavePath(positions[1], positions[2], this.app.config.RIGHT_WAVE_TYPE, waveRate[this.app.config.RIGHT_WAVE_TYPE]);\n\t\t\t\t}\n\t\t\t\tmiddlePath = 'M' + this._middlePath(positions[1], positions[2], waveRate);\n\t\t\t}\n\t\t\t// 根据path绘制波\n\t\t\tthis._leftWave.attr({\n\t\t\t\tpath: paths[this.app.config.LEFT_WAVE_TYPE] ? 'M' + paths[this.app.config.LEFT_WAVE_TYPE] : ''\n\t\t\t});\n\t\t\tthis._leftWaveCross.attr({\n\t\t\t\tpath: paths['leftCross'] ? 'M' + paths['leftCross'] : ''\n\t\t\t});\n\t\t\tthis._leftWaveSurplus.attr({\n\t\t\t\tpath: paths[this.app.config.LEFT_WAVE_TYPE + 'surplus'] ? 'M' + paths[this.app.config.LEFT_WAVE_TYPE + 'surplus'] : ''\n\t\t\t});\n\t\t\tthis._rightWave.attr({\n\t\t\t\tpath: paths[this.app.config.RIGHT_WAVE_TYPE] ? 'M' + paths[this.app.config.RIGHT_WAVE_TYPE] : ''\n\t\t\t});\n\t\t\tthis._rightWaveCross.attr({\n\t\t\t\tpath: paths['rightCross'] ? 'M' + paths['rightCross'] : ''\n\t\t\t});\n\t\t\tthis._rightWaveSurplus.attr({\n\t\t\t\tpath: paths[this.app.config.RIGHT_WAVE_TYPE + 'surplus'] ? 'M' + paths[this.app.config.RIGHT_WAVE_TYPE + 'surplus'] : ''\n\t\t\t});\n\t\t\tthis._middleWave.attr({\n\t\t\t\tpath: middlePath\n\t\t\t});\n\t\t\t// 中间波可点击的有效范围\n\t\t\tthis._middleWaveValid.attr({\n\t\t\t\tpath: middlePath\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 绘制控制点\r\n   */\n\n\t}, {\n\t\tkey: '_drawControllers',\n\t\tvalue: function _drawControllers() {\n\t\t\t// 左控制点\n\t\t\tthis._controller(this.app.data.leftWave, [this._leftController1, this._leftController2, this._leftController3, this._leftController4, this._leftController5], [this._leftController1Valid, this._leftController2Valid, this._leftController3Valid, this._leftController4Valid, this._leftController5Valid], this.waveRate.leftWave.a, this.waveRate.leftWave.r, this.app.data.leftEndPoint, this._leftWave, this._leftWaveValid, true);\n\t\t\t// 右控制点\n\t\t\tthis._controller(this.app.data.rightWave, [this._rightController1, this._rightController2, this._rightController3, this._rightController4, this._rightController5], [this._rightController1Valid, this._rightController2Valid, this._rightController3Valid, this._rightController4Valid, this._rightController5Valid], this.waveRate.rightWave.a, this.waveRate.rightWave.r, this.app.data.rightEndPoint, this._rightWave, this._rightWaveValid, false);\n\t\t}\n\t\t/**\r\n   * 绘制控制点\r\n   * wave: 波的对象数据\r\n   * cs: 展示的控制点集合\r\n   * cvs：有效范围（可操控）的控制点集合\r\n   * a: 抛物率\r\n   * r：斜率\r\n   * end: 右边控制点的坐标\r\n   * wv: 有效范围的波\r\n   * w: 展示的波\r\n   * isLeft: 是否是左波\r\n   */\n\n\t}, {\n\t\tkey: '_controller',\n\t\tvalue: function _controller(wave, cs, cvs, a, r, end, w, wv) {\n\t\t\tvar isLeft = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : true;\n\n\t\t\tvar dis = (wave.middle.x - wave.start.x) * 2,\n\t\t\t    x = 0,\n\t\t\t    y = 0,\n\t\t\t    b = 0,\n\t\t\t    c = 0,\n\t\t\t    offset = this.app.data.curOffset,\n\t\t\t    coordY = this.app.data.worldCoord.y,\n\t\t\t    radius = this.app.config.CONTROLLER_RADIUS,\n\t\t\t    maxRadius = this.app.config.VALID_CIRCLE_WIDTH;\n\n\t\t\tif (!isLeft) {\n\t\t\t\toffset = -offset;\n\t\t\t}\n\t\t\t// 非初始状态时，不需刷新控制点\n\t\t\tif (this.app.data.curState !== this.app.config.STATE_INIT) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// 左边控制点\n\t\t\tcs[0].attr({\n\t\t\t\tcx: wave.start.x + offset,\n\t\t\t\tcy: coordY,\n\t\t\t\tr: radius\n\t\t\t});\n\t\t\tcvs[0].attr({\n\t\t\t\tcx: wave.start.x + offset,\n\t\t\t\tcy: coordY,\n\t\t\t\tr: maxRadius\n\t\t\t});\n\n\t\t\t// 左波左上角控制点\n\n\t\t\tif (!wave.startSide) {\n\t\t\t\t// 公式a*x*x-a*(i + j)*x + a*i*j - y = 0;\n\t\t\t\ty = (wave.middle.y - coordY) / 2;\n\t\t\t\tb = -a * dis;\n\t\t\t\tc = -y;\n\t\t\t\tif (wave.middle.y < coordY) {\n\t\t\t\t\tx = (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a) + wave.start.x + offset;\n\t\t\t\t}\n\t\t\t\tif (wave.middle.y > coordY) {\n\t\t\t\t\tx = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a) + wave.start.x + offset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = wave.middle.x - wave.start.x;\n\t\t\t\tif (wave.middle.y < coordY) {\n\t\t\t\t\ty = -r * (x / 2 - 0);\n\t\t\t\t}\n\t\t\t\tif (wave.middle.y > coordY) {\n\t\t\t\t\ty = r * (dis / 2 - x / 2);\n\t\t\t\t}\n\t\t\t\tx = (wave.middle.x - wave.start.x) / 2 + wave.start.x + offset;\n\t\t\t}\n\t\t\tcs[1].attr({\n\t\t\t\tcx: x,\n\t\t\t\tcy: y + coordY,\n\t\t\t\tr: radius\n\t\t\t});\n\t\t\tcvs[1].attr({\n\t\t\t\tcx: x,\n\t\t\t\tcy: y + coordY,\n\t\t\t\tr: maxRadius\n\t\t\t});\n\n\t\t\t// 左波顶点控制点\n\t\t\tcs[2].attr({\n\t\t\t\tcx: wave.middle.x + offset,\n\t\t\t\tcy: wave.middle.y,\n\t\t\t\tr: radius\n\t\t\t});\n\t\t\tcvs[2].attr({\n\t\t\t\tcx: wave.middle.x + offset,\n\t\t\t\tcy: wave.middle.y,\n\t\t\t\tr: maxRadius\n\t\t\t});\n\n\t\t\t// 左波右上角控制点\n\t\t\tif (!wave.endSide) {\n\t\t\t\t// 公式a*x*x-a*(i + j)*x + a*i*j - y = 0;\n\t\t\t\ty = (wave.middle.y - coordY) / 2;\n\t\t\t\tb = -a * dis;\n\t\t\t\tc = -y;\n\t\t\t\tif (wave.middle.y < coordY) {\n\t\t\t\t\tx = end.x - (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a) + offset;\n\t\t\t\t}\n\t\t\t\tif (wave.middle.y > coordY) {\n\t\t\t\t\tx = end.x - (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a) + offset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = end.x - wave.middle.x;\n\t\t\t\tif (wave.middle.y < coordY) {\n\t\t\t\t\ty = -r * (dis - x * 3 / 2);\n\t\t\t\t}\n\t\t\t\tif (wave.middle.y > coordY) {\n\t\t\t\t\ty = r * (dis - x * 3 / 2);\n\t\t\t\t}\n\t\t\t\tx = end.x - (end.x - wave.middle.x) / 2 + offset;\n\t\t\t}\n\t\t\tcs[3].attr({\n\t\t\t\tcx: x,\n\t\t\t\tcy: y + coordY,\n\t\t\t\tr: radius\n\t\t\t});\n\t\t\tcvs[3].attr({\n\t\t\t\tcx: x,\n\t\t\t\tcy: y + coordY,\n\t\t\t\tr: maxRadius\n\t\t\t});\n\n\t\t\t// 左波右边控制点\n\t\t\tcs[4].attr({\n\t\t\t\tcx: end.x + offset,\n\t\t\t\tcy: coordY,\n\t\t\t\tr: radius\n\t\t\t});\n\t\t\tcvs[4].attr({\n\t\t\t\tcx: end.x + offset,\n\t\t\t\tcy: coordY,\n\t\t\t\tr: maxRadius\n\t\t\t});\n\t\t\t// 左波可点击的有效范围\n\t\t\twv.attr({\n\t\t\t\tpath: w.attr().d\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 绑定svg点击事件\r\n   */\n\n\t}, {\n\t\tkey: '_bindEvent',\n\t\tvalue: function _bindEvent() {\n\t\t\t// 中间相交波的点击事件\n\t\t\tthis._middleWaveValid.click(this._selectMiddleWaveEvent.bind(this));\n\t\t}\n\n\t\t/**\r\n   * 解绑svg上的事件\r\n   */\n\n\t}, {\n\t\tkey: '_unbindEvent',\n\t\tvalue: function _unbindEvent() {\n\t\t\tthis._middleWaveValid.unclick();\n\t\t}\n\n\t\t//全屏缩放\n\n\t}, {\n\t\tkey: 'handlerResizeScreen',\n\t\tvalue: function handlerResizeScreen(data) {\n\t\t\tthis.ratio = eval(data.ratio);\n\t\t\tif (this.index == 1) {\n\t\t\t\tthis.initRatio = this.ratio;\n\t\t\t\tthis.index++;\n\t\t\t}\n\t\t\tconsole.log('传进来', this.ratio);\n\t\t}\n\t\t/**\r\n   * 选中中间波事件\r\n   */\n\n\t}, {\n\t\tkey: '_selectMiddleWaveEvent',\n\t\tvalue: function _selectMiddleWaveEvent(e) {\n\t\t\tconsole.log('点击到了');\n\t\t\tvar x = 0,\n\t\t\t    y = 0,\n\t\t\t    point = null;\n\t\t\te.stopPropagation();\n\n\t\t\tif (this.app.data.curState !== this.app.config.STATE_PAUSE) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.$tip.hasClass('hide_dom')) {\n\t\t\t\tthis.$tip.addClass('hide_dom');\n\t\t\t}\n\t\t\tif (this.ratio == this.initRatio) {\n\t\t\t\tx = Math.round((e.clientX - $(this.svg.node).offset().left) / this.ratio);\n\t\t\t} else {\n\t\t\t\tx = Math.round(e.clientX - $(this.svg.node).offset().left);\n\t\t\t}\n\t\t\tfor (var i = 0, len = this._middlePoints.length; i < len; i++) {\n\t\t\t\tif (x === Math.round(this._middlePoints[i].x)) {\n\t\t\t\t\tpoint = this._middlePoints[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!point) return;\n\t\t\tpoint.runState = this.app.config.ARROW_STATE_RUN;\n\t\t\tthis.app.data.curPoint = point;\n\t\t}\n\n\t\t/**\r\n   * 画箭号\r\n   */\n\n\t}, {\n\t\tkey: 'drawArrows',\n\t\tvalue: function drawArrows(point) {\n\t\t\tvar rHeight = 0,\n\t\t\t    lHeight = 0,\n\t\t\t    mHeight = 0,\n\t\t\t    ry = 0,\n\t\t\t    ly = 0,\n\t\t\t    my = 0,\n\t\t\t    fontSize = this.app.config.fontSize;\n\n\t\t\tif (this.app.data.curState !== this.app.config.STATE_PAUSE) {\n\t\t\t\treturn;\n\t\t\t};\n\t\t\tif (point.runState === this.app.config.ARROW_STATE_INIT) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// 计算如果高度很小时，不绘制\n\t\t\trHeight = -Math.round(point.rightY / fontSize * 10) / 10;\n\t\t\tlHeight = -Math.round(point.leftY / fontSize * 10) / 10;\n\t\t\tmHeight = Math.round((rHeight + lHeight) * 10) / 10;\n\t\t\try = rHeight ? point.rightY : 0;\n\t\t\tly = lHeight ? point.leftY : 0;\n\t\t\tmy = mHeight ? point.y : 0;\n\n\t\t\tthis._middleArrowLine.attr({\n\t\t\t\tpath: this._arrowPath(point.x, my).linePath\n\t\t\t});\n\t\t\tthis._middleArrowCap.attr({\n\t\t\t\tpath: this._arrowPath(point.x, my).capPath\n\t\t\t});\n\t\t\tthis._leftArrowLine.attr({\n\t\t\t\tpath: this._arrowPath(point.x, ly).linePath\n\t\t\t});\n\t\t\tthis._leftArrowCap.attr({\n\t\t\t\tpath: this._arrowPath(point.x, ly).capPath\n\t\t\t});\n\t\t\tthis._rightArrowLine.attr({\n\t\t\t\tpath: this._arrowPath(point.x, ry).linePath\n\t\t\t});\n\t\t\tthis._rightArrowCap.attr({\n\t\t\t\tpath: this._arrowPath(point.x, ry).capPath\n\t\t\t});\n\t\t\tthis._arrowAnimateStart(point);\n\t\t\tthis._middleSelectPoint.attr({\n\t\t\t\tcx: point.x,\n\t\t\t\tcy: point.y + this.app.data.worldCoord.y,\n\t\t\t\tr: this.app.config.CONTROLLER_RADIUS\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 箭号动画开始\r\n   */\n\n\t}, {\n\t\tkey: '_arrowAnimateStart',\n\t\tvalue: function _arrowAnimateStart(point) {\n\t\t\tvar rText = 0,\n\t\t\t    lText = 0,\n\t\t\t    svgWidth = this.app.data.svgWidth,\n\t\t\t    verticalOffset = this.app.config.VERTICAL_ARROW_OFFSET,\n\t\t\t    coordY = this.app.data.worldCoord.y,\n\t\t\t    fontSize = Number.parseFloat(this.app.config.fontSize),\n\t\t\t    equalPadding = this.app.config.EQUAL_PADDING,\n\t\t\t    length = this.app.config.EQUAL_LENGTH,\n\t\t\t    arrowsDis = null;\n\t\t\tthis._arrowAnimatePause();\n\t\t\tthis._tl = new TimelineMax({\n\t\t\t\tonComplete: this._complete.bind(this),\n\t\t\t\tonCompleteParams: [point],\n\t\t\t\tpaused: true\n\t\t\t});\n\n\t\t\t// 生成数值\n\t\t\trText = -Math.round(point.rightY / fontSize * 10) / 10;\n\t\t\tlText = -Math.round(point.leftY / fontSize * 10) / 10;\n\t\t\tthis.$middleText.text(Math.round((rText + lText) * 10) / 10);\n\t\t\tthis.$rightText.text(rText);\n\t\t\tthis.$leftText.text(lText);\n\n\t\t\t// 箭号移动的位置集合\n\t\t\tarrowsDis = this._computeDis(point, svgWidth, verticalOffset, equalPadding, coordY, length, lText);\n\n\t\t\t// 绘制等号\n\t\t\t// this._drawEqual(point, arrowsDis.middleDis);\n\n\t\t\t// 动画\n\t\t\tthis._tl.to($(this._rightArrowGroup.node), this.app.config.ARROW_ANIMATE_TIME / 10, {\n\t\t\t\tstrokeOpacity: .8,\n\t\t\t\tfillOpacity: .8,\n\t\t\t\tease: Linear.easeNone\n\t\t\t}).to($(this._leftArrowGroup.node), this.app.config.ARROW_ANIMATE_TIME / 10, {\n\t\t\t\tstrokeOpacity: .8,\n\t\t\t\tfillOpacity: .8,\n\t\t\t\tease: Linear.easeNone\n\t\t\t}, '-=' + this.app.config.ARROW_ANIMATE_TIME / 10).to($(this._middleArrowGroup.node), this.app.config.ARROW_ANIMATE_TIME / 10, {\n\t\t\t\tstrokeOpacity: .8,\n\t\t\t\tfillOpacity: .8,\n\t\t\t\tease: Linear.easeNone\n\t\t\t}, '-=' + this.app.config.ARROW_ANIMATE_TIME / 10).to($(this._rightArrowGroup.node), this.app.config.ARROW_ANIMATE_TIME, {\n\t\t\t\tx: arrowsDis.rightDis.x,\n\t\t\t\ty: arrowsDis.rightDis.y,\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tfillOpacity: 1,\n\t\t\t\tease: Linear.easeNone\n\t\t\t}, '+=' + this.app.config.ARROW_ANIMATE_DELAY_TIME).to(this.$rightText, 0.01, {\n\t\t\t\topacity: 1\n\t\t\t}).to($(this._leftArrowGroup.node), this.app.config.ARROW_ANIMATE_TIME, {\n\t\t\t\tx: arrowsDis.leftDis.x,\n\t\t\t\ty: arrowsDis.leftDis.y,\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tfillOpacity: 1,\n\t\t\t\tease: Linear.easeNone\n\t\t\t}, '-=' + this.app.config.ARROW_ANIMATE_DELAY_TIME / 3).to(this.$leftText, 0.01, {\n\t\t\t\topacity: 1\n\t\t\t}).to([this.$symbolAdd, this.$symbolEqual, $(this.$arrowEqual)], 0.01, {\n\t\t\t\topacity: 1\n\t\t\t});\n\n\t\t\tif (lText < 0) {\n\t\t\t\tthis._tl.add(new TweenMax([this.$symbolLeft, this.$symbolRight], 0.01, {\n\t\t\t\t\tdisplay: 'inline-block'\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tthis._tl.to($(this._middleArrowGroup.node), this.app.config.ARROW_ANIMATE_TIME, {\n\t\t\t\tx: arrowsDis.middleDis.x,\n\t\t\t\ty: arrowsDis.middleDis.y,\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tfillOpacity: 1,\n\t\t\t\tease: Linear.easeNone\n\t\t\t}, '-=' + this.app.config.ARROW_ANIMATE_DELAY_TIME / 3).to(this.$middleText, 0.01, {\n\t\t\t\topacity: 1\n\t\t\t});\n\n\t\t\tif (point && point.runState === this.app.config.ARROW_STATE_RUN) {\n\t\t\t\tthis._tl.play();\n\t\t\t}\n\t\t\tif (point && point.runState === this.app.config.ARROW_STATE_OVER) {\n\t\t\t\tthis._tl.progress(1);\n\t\t\t}\n\t\t\tthis.app.data.timeline = this._tl;\n\t\t}\n\n\t\t/**\r\n   * 计算箭号移动距离\r\n   */\n\n\t}, {\n\t\tkey: '_computeDis',\n\t\tvalue: function _computeDis(point, svgWidth, verticalOffset, equalPadding, coordY, length, lText) {\n\t\t\tvar middleDis = null,\n\t\t\t    leftDis = null,\n\t\t\t    rightDis = null,\n\t\t\t    middleOffset = this.app.config.VERTICAL_MIDDLE_OFFSET;\n\t\t\t// 当两个都是正弦波时，两波相加，三箭号箭帽朝上， 左右波箭号同一列\n\t\t\tif (point.leftY <= 0 && point.rightY <= 0) {\n\t\t\t\tmiddleDis = {\n\t\t\t\t\tx: svgWidth - middleOffset - point.x,\n\t\t\t\t\ty: Math.abs(point.y) / 2 - coordY / 2\n\t\t\t\t};\n\t\t\t\tleftDis = {\n\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\ty: Math.abs(point.y) / 2 - coordY / 2\n\t\t\t\t};\n\t\t\t\trightDis = {\n\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\ty: Math.abs(point.y) / 2 - coordY / 2 - Math.abs(point.leftY)\n\t\t\t\t};\n\t\t\t}\n\t\t\t// 当两个都是余弦波时，两波相加，三箭号箭帽朝下，左右波箭号同一列\n\t\t\tif (point.leftY > 0 && point.rightY > 0) {\n\t\t\t\tmiddleDis = {\n\t\t\t\t\tx: svgWidth - middleOffset - point.x,\n\t\t\t\t\ty: -Math.abs(point.y) / 2 - coordY / 2\n\t\t\t\t};\n\t\t\t\tleftDis = {\n\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\ty: -Math.abs(point.y) / 2 - coordY / 2\n\t\t\t\t};\n\t\t\t\trightDis = {\n\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\ty: -Math.abs(point.y) / 2 - coordY / 2 + Math.abs(point.leftY)\n\t\t\t\t};\n\t\t\t}\n\t\t\t// 左波为正弦波，右波为余弦波时\n\t\t\tif (point.leftY <= 0 && point.rightY > 0) {\n\t\t\t\tif (Math.abs(point.leftY) >= Math.abs(point.rightY)) {\n\t\t\t\t\t// 左波波峰大于右波波峰时，左波箭号朝上，右波箭号朝下，相交波箭号朝上，左右波箭号不同列\n\t\t\t\t\tmiddleDis = {\n\t\t\t\t\t\tx: svgWidth - middleOffset - point.x,\n\t\t\t\t\t\ty: Math.abs(point.leftY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t\tleftDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: Math.abs(point.leftY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t\t// 如果左波箭号高度为0时，右波箭号往右移，避免与等号之间空白\n\t\t\t\t\tlText ? rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x - equalPadding * svgWidth * 2,\n\t\t\t\t\t\ty: Math.abs(point.leftY) / 2 - coordY / 2 - Math.abs(point.leftY)\n\t\t\t\t\t} : rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: Math.abs(point.leftY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// 左波波峰小于右波波峰时，左波箭号朝上，右波箭号朝下，相交波箭号朝下，左右波箭号不同列\n\t\t\t\t\tmiddleDis = {\n\t\t\t\t\t\tx: svgWidth - middleOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.rightY) / 2 - coordY / 2 + Math.abs(point.leftY)\n\t\t\t\t\t};\n\t\t\t\t\tleftDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.rightY) / 2 - coordY / 2 + Math.abs(point.leftY)\n\t\t\t\t\t};\n\t\t\t\t\t// 如果左波箭号高度为0时，右波箭号往右移，避免与等号之间空白\n\t\t\t\t\tlText ? rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x - equalPadding * svgWidth * 2,\n\t\t\t\t\t\ty: -Math.abs(point.rightY) / 2 - coordY / 2\n\t\t\t\t\t} : rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.rightY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\t// 左波为余弦波，右波为正弦波时\n\t\t\tif (point.leftY > 0 && point.rightY <= 0) {\n\t\t\t\tif (Math.abs(point.leftY) >= Math.abs(point.rightY)) {\n\t\t\t\t\t// 左波波峰大于右波波峰时，左波箭号朝下，右波箭号朝上，相交波箭号朝下，左右波箭号不同列\n\t\t\t\t\tmiddleDis = {\n\t\t\t\t\t\tx: svgWidth - middleOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.leftY) / 2 - coordY / 2 + Math.abs(point.rightY)\n\t\t\t\t\t};\n\t\t\t\t\tleftDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.leftY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t\t// 如果左波箭号高度为0时，右波箭号往右移，避免与等号之间空白\n\t\t\t\t\tlText ? rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x - equalPadding * svgWidth * 2,\n\t\t\t\t\t\ty: -Math.abs(point.leftY) / 2 - coordY / 2 + Math.abs(point.rightY)\n\t\t\t\t\t} : rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.leftY) / 2 - coordY / 2 + Math.abs(point.rightY)\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// 左波波峰小于右波波峰时，左波箭号朝下，右波箭号朝上，相交波箭号朝上，左右波箭号不同列\n\t\t\t\t\tmiddleDis = {\n\t\t\t\t\t\tx: svgWidth - middleOffset - point.x,\n\t\t\t\t\t\ty: Math.abs(point.rightY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t\tleftDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: -Math.abs(point.rightY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t\t// 如果右波箭号高度为0时，左波箭号往左移，避免与等号之间空白\n\t\t\t\t\tlText ? rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x - equalPadding * svgWidth * 2,\n\t\t\t\t\t\ty: Math.abs(point.rightY) / 2 - coordY / 2\n\t\t\t\t\t} : rightDis = {\n\t\t\t\t\t\tx: svgWidth - verticalOffset - point.x,\n\t\t\t\t\t\ty: Math.abs(point.rightY) / 2 - coordY / 2\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tmiddleDis: middleDis,\n\t\t\t\tleftDis: leftDis,\n\t\t\t\trightDis: rightDis\n\t\t\t};\n\t\t}\n\n\t\t/**\r\n   * 停止动画\r\n   */\n\n\t}, {\n\t\tkey: '_arrowAnimatePause',\n\t\tvalue: function _arrowAnimatePause() {\n\t\t\tthis._tl && this._tl.pause(0);\n\t\t\tthis._tl && this._tl.kill();\n\t\t\tthis._middleSelectPoint.attr({\n\t\t\t\tcx: 0,\n\t\t\t\tcy: 0,\n\t\t\t\tr: 0\n\t\t\t});\n\t\t\tthis.app.data.timeline = null;\n\t\t}\n\n\t\t/**\r\n   * 箭号动画结束事件\r\n   */\n\n\t}, {\n\t\tkey: '_complete',\n\t\tvalue: function _complete(point) {\n\t\t\tif (point.runState !== this.app.config.ARROW_STATE_OVER) {\n\t\t\t\tpoint.runState = this.app.config.ARROW_STATE_OVER;\n\t\t\t\tthis.app.data.curPoint = point;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 中间波三个箭号的path\r\n   */\n\n\t}, {\n\t\tkey: '_arrowPath',\n\t\tvalue: function _arrowPath(x, y) {\n\t\t\tvar linePath = '',\n\t\t\t    capPath = '';\n\n\t\t\tif (y < 0) {\n\t\t\t\t// 如果选择的点的波峰太小，就不绘制箭号的箭帽\n\t\t\t\tif (Math.abs(y) < this.app.config.ARROW_WIDTH) {\n\t\t\t\t\tlinePath = 'M' + x + ' ' + this.app.data.worldCoord.y + ' ' + x + ' ' + (y + this.app.data.worldCoord.y);\n\t\t\t\t\tcapPath = '';\n\t\t\t\t} else {\n\t\t\t\t\tlinePath = 'M' + x + ' ' + this.app.data.worldCoord.y + ' ' + x + ' ' + (y + this.app.config.ARROW_WIDTH / 2 + this.app.data.worldCoord.y);\n\t\t\t\t\tcapPath = 'M' + x + ' ' + (y + this.app.data.worldCoord.y) + ' ' + (x - this.app.config.ARROW_WIDTH) + ' ' + (y + this.app.config.ARROW_WIDTH + this.app.data.worldCoord.y) + ' ' + x + ' ' + (y + this.app.config.ARROW_WIDTH / 2 + this.app.data.worldCoord.y) + ' ' + (x + this.app.config.ARROW_WIDTH) + ' ' + (y + this.app.config.ARROW_WIDTH + this.app.data.worldCoord.y);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (Math.abs(y) < this.app.config.ARROW_WIDTH) {\n\t\t\t\t\tlinePath = 'M' + x + ' ' + this.app.data.worldCoord.y + ' ' + x + ' ' + (y + this.app.data.worldCoord.y);\n\t\t\t\t\tcapPath = '';\n\t\t\t\t} else {\n\t\t\t\t\tlinePath = 'M' + x + ' ' + this.app.data.worldCoord.y + ' ' + x + ' ' + (y - this.app.config.ARROW_WIDTH / 2 + this.app.data.worldCoord.y);\n\t\t\t\t\tcapPath = 'M' + x + ' ' + (y + this.app.data.worldCoord.y) + ' ' + (x - this.app.config.ARROW_WIDTH) + ' ' + (y - this.app.config.ARROW_WIDTH + this.app.data.worldCoord.y) + ' ' + x + ' ' + (y - this.app.config.ARROW_WIDTH / 2 + this.app.data.worldCoord.y) + ' ' + (x + this.app.config.ARROW_WIDTH) + ' ' + (y - this.app.config.ARROW_WIDTH + this.app.data.worldCoord.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tlinePath: linePath,\n\t\t\t\tcapPath: capPath\n\t\t\t};\n\t\t}\n\n\t\t/**\r\n   * 绘制等号\r\n   */\n\n\t}, {\n\t\tkey: '_drawEqual',\n\t\tvalue: function _drawEqual(point, middle) {\n\t\t\tvar length = this.app.config.EQUAL_LENGTH,\n\t\t\t    coordY = this.app.data.worldCoord.y,\n\t\t\t    svgWidth = this.app.data.svgWidth,\n\t\t\t    equalPadding = this.app.config.EQUAL_PADDING,\n\t\t\t    lineWidth = this.app.config.LINE_WIDTH;\n\t\t\tthis._upLineOfEqual.attr({\n\t\t\t\tpath: 'M' + (point.x + middle.x - svgWidth * equalPadding) + ' ' + (coordY / 2 + lineWidth) + ' ' + (point.x + middle.x - svgWidth * equalPadding - length) + ' ' + (coordY / 2 + lineWidth)\n\t\t\t});\n\t\t\tthis._downLineOfEqual.attr({\n\t\t\t\tpath: 'M' + (point.x + middle.x - svgWidth * equalPadding) + ' ' + (coordY / 2 - lineWidth) + ' ' + (point.x + middle.x - svgWidth * equalPadding - length) + ' ' + (coordY / 2 - lineWidth)\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 取消\r\n   */\n\n\t}, {\n\t\tkey: 'cancelSelect',\n\t\tvalue: function cancelSelect(e) {\n\t\t\te && this._getRealEvent(e);\n\t\t\tif (!this.$tip.hasClass('hide_dom')) {\n\t\t\t\tthis.$tip.addClass('hide_dom');\n\t\t\t}\n\t\t\tthis._arrowAnimatePause();\n\t\t\tvar point = this.app.data.curPoint;\n\t\t\tif (point.runState !== this.app.config.ARROW_STATE_INIT) {\n\t\t\t\tpoint.runState = this.app.config.ARROW_STATE_INIT;\n\t\t\t\tthis.app.data.curPoint = point;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 取消选中波\r\n   */\n\n\t}, {\n\t\tkey: '_unselectWave',\n\t\tvalue: function _unselectWave(e) {\n\t\t\tif (e) {\n\t\t\t\te = this._getRealEvent(e);\n\t\t\t\tvar className = $(e.target).attr('class');\n\t\t\t\tif (className == 'leftWave' && this.app.data.curSelectWave == this.app.config.SELECT_LEFT_WAVE || className == 'rightWave' && this.app.data.curSelectWave == this.app.config.SELECT_RIGHT_WAVE) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this.app.data.transform) {\n\t\t\t\tthis.app.data.transform = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.app.data.curSelectWave = this.app.config.SELECT_NONE_WAVE;\n\t\t}\n\n\t\t// ===================获取属性=======================\n\t\t/**\r\n   * 获取波的抛物a及斜率比\r\n   */\n\n\t}, {\n\t\tkey: 'waveRate',\n\t\tget: function get() {\n\t\t\treturn {\n\t\t\t\tleftWave: {\n\t\t\t\t\ta: (this.app.data.leftWave.middle.y - this.app.data.worldCoord.y) / ((this.app.data.leftWave.middle.x - this.app.data.leftWave.start.x) * (this.app.data.leftWave.middle.x - this.app.data.leftEndPoint.x)),\n\t\t\t\t\tr: Math.abs(this.app.data.leftWave.middle.y - this.app.data.worldCoord.y) / (this.app.data.leftWave.middle.x - this.app.data.leftWave.start.x)\n\t\t\t\t},\n\t\t\t\trightWave: {\n\t\t\t\t\ta: (this.app.data.rightWave.middle.y - this.app.data.worldCoord.y) / ((this.app.data.rightWave.middle.x - this.app.data.rightWave.start.x) * (this.app.data.rightWave.middle.x - this.app.data.rightEndPoint.x)),\n\t\t\t\t\tr: Math.abs(this.app.data.rightWave.middle.y - this.app.data.worldCoord.y) / (this.app.data.rightWave.middle.x - this.app.data.rightWave.start.x)\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\r\n   * 线属性\r\n   */\n\n\t}, {\n\t\tkey: 'lineAttr',\n\t\tget: function get() {\n\t\t\treturn {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: this.app.config.LINE_COLOR,\n\t\t\t\tstrokeWidth: this.app.config.LINE_WIDTH,\n\t\t\t\tstrokeLinecap: this.app.config.LINE_CAP,\n\t\t\t\tpath: ''\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn GraphControl;\n}(_BaseControl3.default);\n\nexports.default = GraphControl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/control/GraphControl.js\n// module id = 8\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/control/GraphControl.js?");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseControl2 = __webpack_require__(4);\n\nvar _BaseControl3 = _interopRequireDefault(_BaseControl2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionControl = function (_BaseControl) {\n\t_inherits(FunctionControl, _BaseControl);\n\n\t_createClass(FunctionControl, null, [{\n\t\tkey: 'getInst',\n\t\tvalue: function getInst() {\n\t\t\tFunctionControl._inst = FunctionControl._inst || new FunctionControl();\n\n\t\t\treturn FunctionControl._inst;\n\t\t}\n\n\t\t/**\r\n   * 构造\r\n   */\n\n\t\t/**\r\n   * 单例\r\n   */\n\n\t}]);\n\n\tfunction FunctionControl() {\n\t\t_classCallCheck(this, FunctionControl);\n\n\t\tvar _this = _possibleConstructorReturn(this, (FunctionControl.__proto__ || Object.getPrototypeOf(FunctionControl)).call(this));\n\n\t\t_this._isRun = false;\n\t\treturn _this;\n\t}\n\n\t/**\r\n  * 初始化事件\r\n  */\n\n\n\t_createClass(FunctionControl, [{\n\t\tkey: 'init',\n\t\tvalue: function init(app) {\n\t\t\tthis.app = app; //绑定AppControl到当前对象\n\t\t\tthis.$playBtn = this.app.$view.find('.play'); // 播放按钮\n\t\t\tthis.$speedBtn = this.app.$view.find('.slow'); // 速度按钮\n\t\t\tthis.$waveBtn = this.app.$view.find('.waves'); // 波按钮\n\t\t\tthis.$resetBtn = this.app.$view.find('.reset'); // 重置按钮\n\n\t\t\tthis.$playBtn.on('click', this._playEvent.bind(this));\n\t\t\tthis.$speedBtn.on('click', this._speedEvent.bind(this));\n\t\t\tthis.$waveBtn.on('click', this._waveEvent.bind(this));\n\t\t\tthis.$resetBtn.on('click', this._resetEvent.bind(this));\n\t\t\tthis.$speedBtn.on('mousedown touchstart', function (e) {\n\t\t\t\te && e.stopPropagation();\n\t\t\t});\n\t\t\tthis.$waveBtn.on('mousedown touchstart', function (e) {\n\t\t\t\te && e.stopPropagation();\n\t\t\t});\n\t\t\tthis.$resetBtn.on('mousedown touchstart', function (e) {\n\t\t\t\te && e.stopPropagation();\n\t\t\t});\n\n\t\t\t// 预加载图片\n\t\t\tvar image1 = new Image(),\n\t\t\t    image2 = new Image(),\n\t\t\t    image3 = new Image(),\n\t\t\t    image4 = new Image(),\n\t\t\t    image5 = new Image(),\n\t\t\t    image6 = new Image(),\n\t\t\t    image7 = new Image();\n\n\t\t\timage1.src = this.app.config.basePath + 'resources/wood/images/playon.png';\n\t\t\timage2.src = this.app.config.basePath + 'resources/wood/images/pauseon.png';\n\t\t\timage3.src = this.app.config.basePath + 'resources/wood/images/slowon.png';\n\t\t\timage4.src = this.app.config.basePath + 'resources/wood/images/waveson.png';\n\t\t\timage5.src = this.app.config.basePath + 'resources/wood/images/reset.png';\n\t\t\timage6.src = this.app.config.basePath + 'resources/wood/images/reseton.png';\n\t\t\timage7.src = this.app.config.basePath + 'resources/wood/images/pause.png';\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 析构\r\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis._time && clearInterval(this._time);\n\t\t\tFunctionControl._inst = null;\n\t\t}\n\n\t\t/**\r\n   * 播放事件\r\n   */\n\n\t}, {\n\t\tkey: '_playEvent',\n\t\tvalue: function _playEvent(e) {\n\t\t\te && e.stopPropagation();\n\t\t\tswitch (this.app.data.curState) {\n\t\t\t\tcase this.app.config.STATE_INIT:\n\t\t\t\t\tthis.app.data.curState = this.app.config.STATE_RUN;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.STATE_RUN:\n\t\t\t\t\tthis.app.data.curState = this.app.config.STATE_PAUSE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.STATE_PAUSE:\n\t\t\t\t\tthis.app.data.curState = this.app.config.STATE_RUN;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 播放按钮状态修改\r\n   */\n\n\t}, {\n\t\tkey: 'playState',\n\t\tvalue: function playState(state) {\n\t\t\tswitch (state) {\n\t\t\t\tcase this.app.config.STATE_INIT:\n\t\t\t\t\tthis.$playBtn.find('.txt').text(this.app.i18N.i18nData[\"btn_play\"]);\n\t\t\t\t\tif (this.$playBtn.hasClass('pause')) {\n\t\t\t\t\t\tthis.$playBtn.removeClass('pause');\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.$resetBtn.hasClass('disabled')) {\n\t\t\t\t\t\tthis.$resetBtn.addClass('disabled');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.STATE_RUN:\n\t\t\t\t\tthis.$playBtn.find('.txt').text(this.app.i18N.i18nData[\"btn_pause\"]);\n\t\t\t\t\tif (!this.$playBtn.hasClass('pause')) {\n\t\t\t\t\t\tthis.$playBtn.addClass('pause');\n\t\t\t\t\t}\n\t\t\t\t\tif (this.$resetBtn.hasClass('disabled')) {\n\t\t\t\t\t\tthis.$resetBtn.removeClass('disabled');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.STATE_PAUSE:\n\t\t\t\t\tthis.$playBtn.find('.txt').text(this.app.i18N.i18nData[\"btn_resume\"]);\n\t\t\t\t\tif (this.$playBtn.hasClass('pause')) {\n\t\t\t\t\t\tthis.$playBtn.removeClass('pause');\n\t\t\t\t\t}\n\t\t\t\t\tif (this.$resetBtn.hasClass('disabled')) {\n\t\t\t\t\t\tthis.$resetBtn.removeClass('disabled');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 速度修改\r\n   */\n\n\t}, {\n\t\tkey: '_speedEvent',\n\t\tvalue: function _speedEvent(e) {\n\t\t\te && e.stopPropagation();\n\t\t\tthis.app.data.curSpeed = this.app.data.curSpeed === this.app.config.NORMAL_SPEED ? this.app.config.SLOW_SPEED : this.app.config.NORMAL_SPEED;\n\t\t\tif (this.app.data.curState === this.app.config.STATE_RUN || this.app.data.curState === this.app.config.STATE_PAUSE) {\n\t\t\t\t// this._resetEvent();\n\t\t\t\tthis.app.data.reverse ? this.app.data.curOffset = this.app.data.maxOffset : this.app.data.curOffset = 0;\n\t\t\t\tthis.app.data.curState = this.app.config.STATE_RUN;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 速度按钮状态修改\r\n   */\n\n\t}, {\n\t\tkey: 'speedState',\n\t\tvalue: function speedState(speed) {\n\t\t\tswitch (speed) {\n\t\t\t\tcase this.app.config.NORMAL_SPEED:\n\t\t\t\t\tif (this.$speedBtn.hasClass('active')) {\n\t\t\t\t\t\tthis.$speedBtn.removeClass('active');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.app.config.SLOW_SPEED:\n\t\t\t\t\tif (!this.$speedBtn.hasClass('active')) {\n\t\t\t\t\t\tthis.$speedBtn.addClass('active');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 原波按钮修改\r\n   */\n\n\t}, {\n\t\tkey: '_waveEvent',\n\t\tvalue: function _waveEvent(e) {\n\t\t\te && e.stopPropagation();\n\t\t\tthis.app.data.isShowOriginalWave = !this.app.data.isShowOriginalWave ? 1 : 0;\n\t\t\tif (this.app.data.curState === this.app.config.STATE_RUN || this.app.data.curState === this.app.config.STATE_PAUSE) {\n\t\t\t\t// this._resetEvent();\n\t\t\t\tthis.app.data.reverse ? this.app.data.curOffset = this.app.data.maxOffset : this.app.data.curOffset = 0;\n\t\t\t\tthis.app.data.curState = this.app.config.STATE_RUN;\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 原波按钮状态修改\r\n   */\n\n\t}, {\n\t\tkey: 'waveState',\n\t\tvalue: function waveState(isShowOriginalWave) {\n\t\t\tif (isShowOriginalWave) {\n\t\t\t\tif (!this.$waveBtn.hasClass('active')) {\n\t\t\t\t\tthis.$waveBtn.addClass('active');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.$waveBtn.hasClass('active')) {\n\t\t\t\t\tthis.$waveBtn.removeClass('active');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 重置\r\n   */\n\n\t}, {\n\t\tkey: '_resetEvent',\n\t\tvalue: function _resetEvent(e) {\n\t\t\te && e.stopPropagation();\n\t\t\tif (this.app.data.curState == this.app.config.STATE_INIT) return;\n\t\t\tthis.app.data.curState = this.app.config.STATE_INIT;\n\t\t}\n\t}]);\n\n\treturn FunctionControl;\n}(_BaseControl3.default);\n\nexports.default = FunctionControl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/control/FunctionControl.js\n// module id = 9\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/control/FunctionControl.js?");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseControl2 = __webpack_require__(4);\n\nvar _BaseControl3 = _interopRequireDefault(_BaseControl2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 功能控制器\r\n */\nvar AnimateControl = function (_BaseControl) {\n    _inherits(AnimateControl, _BaseControl);\n\n    _createClass(AnimateControl, null, [{\n        key: 'getInst',\n        value: function getInst() {\n            AnimateControl._inst = AnimateControl._inst || new AnimateControl();\n            return AnimateControl._inst;\n        }\n\n        /**\r\n         * 构造\r\n         */\n\n        /**\r\n         * 单例\r\n         */\n\n    }]);\n\n    function AnimateControl() {\n        _classCallCheck(this, AnimateControl);\n\n        var _this = _possibleConstructorReturn(this, (AnimateControl.__proto__ || Object.getPrototypeOf(AnimateControl)).call(this));\n\n        _this._curController = null;\n        _this._time = null;\n        _this._isRun = false;\n        _this._down = 0;\n        _this._move = 0;\n        return _this;\n    }\n\n    /**\r\n     * 析构\r\n     */\n\n\n    _createClass(AnimateControl, [{\n        key: 'destroy',\n        value: function destroy() {\n            this._unbindEvent();\n            AnimateControl._inst = null;\n        }\n\n        /**\r\n         * 初始化事件\r\n         */\n\n    }, {\n        key: 'init',\n        value: function init(app) {\n            this.app = app;\n            this._$tip = this.app.$view.find('.WavesSuperposition_dialog_wrapper:first');\n            this._leftWave = Snap.select('.leftWave');\n            this._rightWave = Snap.select('.rightWave');\n            this._leftController1 = Snap.select('.leftController1');\n            this._leftController2 = Snap.select('.leftController2');\n            this._leftController3 = Snap.select('.leftController3');\n            this._leftController4 = Snap.select('.leftController4');\n            this._leftController5 = Snap.select('.leftController5');\n            this._rightController1 = Snap.select('.rightController1');\n            this._rightController2 = Snap.select('.rightController2');\n            this._rightController3 = Snap.select('.rightController3');\n            this._rightController4 = Snap.select('.rightController4');\n            this._rightController5 = Snap.select('.rightController5');\n            this._leftGroup = Snap.select('.leftGroup');\n            this._rightGroup = Snap.select('.rightGroup');\n\n            this._bindEvent();\n            return this;\n        }\n\n        /**\r\n         * 绑定svg点击事件\r\n         */\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            // // 两波选中事件\n            this._leftWave.click(this._selectLeftWaveEvent.bind(this));\n            this._rightWave.click(this._selectRightWaveEvent.bind(this));\n            // 左波控制点事件\n            this._leftController3.mousedown(this._modifHeightStartEvent.bind(this));\n            this._leftController3.touchstart(this._modifHeightStartEvent.bind(this));\n            this._leftController1.mousedown(this._modifWidthStartEvent.bind(this));\n            this._leftController1.touchstart(this._modifWidthStartEvent.bind(this));\n            this._leftController5.mousedown(this._modifWidthStartEvent.bind(this));\n            this._leftController5.touchstart(this._modifWidthStartEvent.bind(this));\n            this._leftController2.mousedown(this._modifShapeStartEvent.bind(this));\n            this._leftController2.touchstart(this._modifShapeStartEvent.bind(this));\n            this._leftController4.mousedown(this._modifShapeStartEvent.bind(this));\n            this._leftController4.touchstart(this._modifShapeStartEvent.bind(this));\n            // 右波控制点事件\n            this._rightController3.mousedown(this._modifHeightStartEvent.bind(this));\n            this._rightController3.touchstart(this._modifHeightStartEvent.bind(this));\n            this._rightController1.mousedown(this._modifWidthStartEvent.bind(this));\n            this._rightController1.touchstart(this._modifWidthStartEvent.bind(this));\n            this._rightController5.mousedown(this._modifWidthStartEvent.bind(this));\n            this._rightController5.touchstart(this._modifWidthStartEvent.bind(this));\n            this._rightController2.mousedown(this._modifShapeStartEvent.bind(this));\n            this._rightController2.touchstart(this._modifShapeStartEvent.bind(this));\n            this._rightController4.mousedown(this._modifShapeStartEvent.bind(this));\n            this._rightController4.touchstart(this._modifShapeStartEvent.bind(this));\n        }\n\n        /**\r\n         * 解绑svg上的事件\r\n         */\n\n    }, {\n        key: '_unbindEvent',\n        value: function _unbindEvent() {\n            this._leftWave.unclick();\n            this._rightWave.unclick();\n            this._leftController3.unmousedown(this._modifHeightStartEvent);\n            this._leftController3.untouchstart(this._modifHeightStartEvent);\n            this._leftController1.unmousedown(this._modifWidthStartEvent);\n            this._leftController1.untouchstart(this._modifWidthStartEvent);\n            this._leftController5.unmousedown(this._modifWidthStartEvent);\n            this._leftController5.untouchstart(this._modifWidthStartEvent);\n            this._leftController2.unmousedown(this._modifShapeStartEvent);\n            this._leftController2.untouchstart(this._modifShapeStartEvent);\n            this._leftController4.unmousedown(this._modifShapeStartEvent);\n            this._leftController4.untouchstart(this._modifShapeStartEvent);\n            this._rightController3.unmousedown(this._modifHeightStartEvent);\n            this._rightController3.untouchstart(this._modifHeightStartEvent);\n            this._rightController1.unmousedown(this._modifWidthStartEvent);\n            this._rightController1.untouchstart(this._modifWidthStartEvent);\n            this._rightController5.unmousedown(this._modifWidthStartEvent);\n            this._rightController5.untouchstart(this._modifWidthStartEvent);\n            this._rightController2.unmousedown(this._modifShapeStartEvent);\n            this._rightController2.untouchstart(this._modifShapeStartEvent);\n            this._rightController4.unmousedown(this._modifShapeStartEvent);\n            this._rightController4.untouchstart(this._modifShapeStartEvent);\n        }\n\n        /**\r\n         * 选中波事件\r\n         */\n\n    }, {\n        key: 'selectWave',\n        value: function selectWave(curSelectWave) {\n            var leftGroup = $(this._leftGroup.node),\n                rightGroup = $(this._rightGroup.node);\n\n            switch (curSelectWave) {\n                case this.app.config.SELECT_NONE_WAVE:\n                    leftGroup.hide();\n                    rightGroup.hide();\n                    break;\n                case this.app.config.SELECT_LEFT_WAVE:\n                    leftGroup.show();\n                    rightGroup.hide();\n                    break;\n                case this.app.config.SELECT_RIGHT_WAVE:\n                    leftGroup.hide();\n                    rightGroup.show();\n                    break;\n            }\n        }\n\n        /**\r\n         * 选中左波事件\r\n         */\n\n    }, {\n        key: '_selectLeftWaveEvent',\n        value: function _selectLeftWaveEvent(e) {\n            this._getRealEvent(e);\n            if (this.app.data.curState !== this.app.config.STATE_INIT) {\n                return;\n            }\n            if (!this._$tip.hasClass('hide_dom')) {\n                this._$tip.addClass('hide_dom');\n            }\n\n            this.app.data.curSelectWave = this.app.data.curSelectWave === this.app.config.SELECT_LEFT_WAVE ? this.app.config.SELECT_NONE_WAVE : this.app.config.SELECT_LEFT_WAVE;\n        }\n\n        /**\r\n         * 选中右波事件\r\n         */\n\n    }, {\n        key: '_selectRightWaveEvent',\n        value: function _selectRightWaveEvent(e) {\n            this._getRealEvent(e);\n            if (this.app.data.curState !== this.app.config.STATE_INIT) {\n                return;\n            }\n            if (!this._$tip.hasClass('hide_dom')) {\n                this._$tip.addClass('hide_dom');\n            }\n            this.app.data.curSelectWave = this.app.data.curSelectWave === this.app.config.SELECT_RIGHT_WAVE ? this.app.config.SELECT_NONE_WAVE : this.app.config.SELECT_RIGHT_WAVE;\n        }\n\n        /**\r\n         * 修改波的宽度\r\n         */\n\n    }, {\n        key: '_modifWidthStartEvent',\n        value: function _modifWidthStartEvent(e) {\n            if (this._curController) return;\n            e = this._getRealEvent(e);\n            this.app.graph.cancelSelect(e);\n            var curName = e.target.getAttribute('curName');\n            this._down = e.clientX;\n            switch (curName) {\n                case 'leftController1':\n                    this._curController = this._leftController1;\n                    break;\n                case 'leftController5':\n                    this._curController = this._leftController5;\n                    break;\n                case 'rightController1':\n                    this._curController = this._rightController1;\n                    break;\n                case 'rightController5':\n                    this._curController = this._rightController5;\n                    break;\n                default:\n                    return;\n            }\n            this._widthEvent = {\n                'mousemove touchmove': this._modifWidthMoveEvent.bind(this),\n                'mouseup touchend': this._modifWidthEndEvent.bind(this),\n                'mouseleave touchcancel': this._modifWidthEndEvent.bind(this)\n            };\n            this.app.$view.on(this._widthEvent);\n        }\n    }, {\n        key: '_modifWidthMoveEvent',\n        value: function _modifWidthMoveEvent(e) {\n            if (!this._curController) return;\n            e = this._getRealEvent(e);\n            var dis = 0,\n                curName = this._curController.node.getAttribute('curName'),\n                wave = null,\n                svgWidth = this.app.data.svgWidth,\n                svgHeight = this.app.data.svgHeight;\n\n            this.app.data.transform = true;\n\n            this._move = e.clientX;\n            dis = this._move - this._down;\n            if (Math.abs(dis) < this.app.config.SHAKE_DISTANCE) {\n                return;\n            }\n            this._down = this._move;\n            if (this._curController) {\n                this._hideTip();\n                switch (curName) {\n                    case 'leftController1':\n                        wave = this.app.data.leftWave;\n                        wave.start.x += dis;\n                        if (wave.start.x < this.app.config.VERTICAL_LINE_OFFSET) {\n                            wave.start.x = this.app.config.VERTICAL_LINE_OFFSET;\n                            this._showTip();\n                        }\n                        if (wave.start.x > wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2) {\n                            wave.start.x = wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2;\n                            this._showTip();\n                        }\n                        this.app.data.leftWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'leftController5':\n                        wave = this.app.data.leftWave;\n                        wave.start.x -= dis;\n                        if (wave.start.x < this.app.config.VERTICAL_LINE_OFFSET) {\n                            wave.start.x = this.app.config.VERTICAL_LINE_OFFSET;\n                            this._showTip();\n                        }\n                        if (wave.start.x > wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2) {\n                            wave.start.x = wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2;\n                            this._showTip();\n                        }\n                        this.app.data.leftWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'rightController1':\n                        wave = this.app.data.rightWave;\n                        wave.start.x += dis;\n                        if (wave.start.x < svgWidth / 2 + this.app.config.VERTICAL_LINE_OFFSET) {\n                            wave.start.x = svgWidth / 2 + this.app.config.VERTICAL_LINE_OFFSET;\n                            this._showTip();\n                        }\n                        if (wave.start.x > wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2) {\n                            wave.start.x = wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2;\n                            this._showTip();\n                        }\n                        this.app.data.rightWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'rightController5':\n                        wave = this.app.data.rightWave;\n                        wave.start.x -= dis;\n                        if (wave.start.x < svgWidth / 2 + this.app.config.VERTICAL_LINE_OFFSET) {\n                            wave.start.x = svgWidth / 2 + this.app.config.VERTICAL_LINE_OFFSET;\n                            this._showTip();\n                        }\n                        if (wave.start.x > wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2) {\n                            wave.start.x = wave.middle.x - this.app.config.VERTICAL_LINE_OFFSET / 2;\n                            this._showTip();\n                        }\n                        this.app.data.rightWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                }\n            }\n        }\n    }, {\n        key: '_modifWidthEndEvent',\n        value: function _modifWidthEndEvent(e) {\n            if (!this._curController) return;\n            this._curController = null;\n            this.app.$view.off(this._widthEvent);\n            this._hideTip();\n        }\n\n        /**\r\n         * 修改波高度控制\r\n         */\n\n    }, {\n        key: '_modifHeightStartEvent',\n        value: function _modifHeightStartEvent(e) {\n            if (this._curController) return;\n            e = this._getRealEvent(e);\n            this.app.graph.cancelSelect(e);\n            var curName = e.target.getAttribute('curName');\n            this._down = e.pageY;\n            switch (curName) {\n                case 'leftController3':\n                    this._curController = this._leftController3;\n                    break;\n                case 'rightController3':\n                    this._curController = this._rightController3;\n                    break;\n                default:\n                    return;\n            }\n            this._heightEvent = {\n                'mousemove touchmove': this._modifHeightMoveEvent.bind(this),\n                'mouseup touchend': this._modifHeightEndEvent.bind(this),\n                'mouseleave touchcancel': this._modifHeightEndEvent.bind(this)\n            };\n            // $(document).on(this._heightEvent);\n            this.app.$view.on(this._heightEvent);\n        }\n    }, {\n        key: '_modifHeightMoveEvent',\n        value: function _modifHeightMoveEvent(e) {\n            if (!this._curController) return;\n            e = this._getRealEvent(e);\n            var dis = 0,\n                curName = this._curController.node.getAttribute('curName'),\n                wave = null,\n                otherWave = null;\n\n            this.app.data.transform = true;\n\n            this._move = e.pageY;\n            dis = this._move - this._down;\n            if (Math.abs(dis) < this.app.config.SHAKE_DISTANCE) {\n                return;\n            }\n            this._down = this._move;\n\n            if (this._curController) {\n                switch (curName) {\n                    case 'leftController3':\n                        wave = this.app.data.leftWave;\n                        otherWave = this.app.data.rightWave;\n                        this.app.data.leftWave = this._waveHeightBound(wave, otherWave, dis);\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'rightController3':\n                        wave = this.app.data.rightWave;\n                        otherWave = this.app.data.leftWave;\n                        this.app.data.rightWave = this._waveHeightBound(wave, otherWave, dis);\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                }\n            }\n        }\n    }, {\n        key: '_modifHeightEndEvent',\n        value: function _modifHeightEndEvent() {\n            // $(document).off(this._heightEvent);\n            if (!this._curController) return;\n            this._curController = null;\n            this.app.$view.off(this._heightEvent);\n            this._hideTip();\n        }\n\n        /**\r\n         * 限定波的范围\r\n         */\n\n    }, {\n        key: '_waveHeightBound',\n        value: function _waveHeightBound(wave, otherWave, dis) {\n            var svgWidth = this.app.data.svgWidth,\n                svgHeight = this.app.data.svgHeight,\n                coordY = this.app.data.worldCoord.y;\n            this._hideTip();\n            wave.middle.y += dis;\n            if (wave.middle.y + otherWave.middle.y - coordY < this.app.config.BORDER_DISTANCE) {\n                // 判断两波相叠加超出上边界限时，波峰的位置\n                wave.middle.y = coordY + this.app.config.BORDER_DISTANCE - otherWave.middle.y;\n                this._showTip();\n            } else if (wave.middle.y + otherWave.middle.y - coordY > svgHeight - this.app.config.BORDER_DISTANCE) {\n                // 判断两波相叠加超出下边界限时，波峰的位置\n                wave.middle.y = svgHeight - this.app.config.BORDER_DISTANCE + coordY - otherWave.middle.y;\n                this._showTip();\n            }\n            // 判断单波超出上边界限时，波峰的位置\n            if (wave.middle.y < coordY && wave.middle.y < this.app.config.BORDER_DISTANCE) {\n                wave.middle.y = this.app.config.BORDER_DISTANCE;\n                this._showTip();\n            }\n            // 判断单波超出下边界限时，波峰的位置\n            if (wave.middle.y > coordY && wave.middle.y > svgHeight - this.app.config.BORDER_DISTANCE) {\n                wave.middle.y = svgHeight - this.app.config.BORDER_DISTANCE;\n                this._showTip();\n            }\n            // 判断单波中间位置变换的波峰位置\n            if (wave.middle.y <= coordY && wave.middle.y > coordY - this.app.config.HORIZONTAL_LINE_OFFSET) {\n                if (this.app.config.HORIZONTAL_LINE_OFFSET + otherWave.middle.y < svgHeight - this.app.config.BORDER_DISTANCE) {\n                    wave.middle.y = coordY + this.app.config.HORIZONTAL_LINE_OFFSET;\n                } else {\n                    wave.middle.y = coordY - this.app.config.HORIZONTAL_LINE_OFFSET;\n                    this._showTip();\n                }\n            }\n            // 判断单波中间位置变换的波峰位置\n            if (wave.middle.y >= coordY && wave.middle.y < coordY + this.app.config.HORIZONTAL_LINE_OFFSET) {\n                if (-this.app.config.HORIZONTAL_LINE_OFFSET + otherWave.middle.y > this.app.config.BORDER_DISTANCE) {\n                    wave.middle.y = coordY - this.app.config.HORIZONTAL_LINE_OFFSET;\n                } else {\n                    wave.middle.y = coordY + this.app.config.HORIZONTAL_LINE_OFFSET;\n                    this._showTip();\n                }\n            }\n            return wave;\n        }\n\n        /**\r\n         * 拖动高度提示\r\n         */\n\n    }, {\n        key: '_showTip',\n        value: function _showTip() {\n            if (this._$tip.hasClass('hide_dom')) {\n                this._$tip.find('.tip_txt').text(this.app.i18N.i18nData[\"msg_height\"]);\n                this._$tip.removeClass('hide_dom');\n            }\n        }\n    }, {\n        key: '_hideTip',\n        value: function _hideTip() {\n            if (!this._$tip.hasClass('hide_dom')) {\n                this._$tip.addClass('hide_dom');\n            }\n        }\n\n        /**\r\n         * 修改波的形态\r\n         */\n\n    }, {\n        key: '_modifShapeStartEvent',\n        value: function _modifShapeStartEvent(e) {\n            if (this._curController) return;\n            e = this._getRealEvent(e);\n            this.app.graph.cancelSelect(e);\n            var curName = e.target.getAttribute('curName');\n            this._down = e.clientX;\n            switch (curName) {\n                case 'leftController2':\n                    this._curController = this._leftController2;\n                    break;\n                case 'leftController4':\n                    this._curController = this._leftController4;\n                    break;\n                case 'rightController2':\n                    this._curController = this._rightController2;\n                    break;\n                case 'rightController4':\n                    this._curController = this._rightController4;\n                    break;\n                default:\n                    return;\n            }\n            this._shapeEvent = {\n                'mousemove touchmove': this._modifShapeMoveEvent.bind(this),\n                'mouseup touchend': this._modifShapeEndEvent.bind(this),\n                'mouseleave touchcancel': this._modifShapeEndEvent.bind(this)\n            };\n            this.app.$view.on(this._shapeEvent);\n        }\n    }, {\n        key: '_modifShapeMoveEvent',\n        value: function _modifShapeMoveEvent(e) {\n            if (!this._curController) return;\n            e = this._getRealEvent(e);\n            var dis = 0,\n                curName = this._curController.node.getAttribute('curName'),\n                wave = null;\n\n            this.app.data.transform = true;\n\n            this._move = e.clientX;\n            dis = this._move - this._down;\n            if (this._curController) {\n                switch (curName) {\n                    case 'leftController2':\n                        wave = this.app.data.leftWave;\n                        if (!wave.startSide && dis > this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.startSide = 1;\n                        }\n                        if (wave.startSide && dis < -this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.startSide = 0;\n                        }\n                        this.app.data.leftWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'leftController4':\n                        wave = this.app.data.leftWave;\n                        if (!wave.endSide && dis < -this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.endSide = 1;\n                        }\n                        if (wave.endSide && dis > this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.endSide = 0;\n                        }\n                        this.app.data.leftWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'rightController2':\n                        wave = this.app.data.rightWave;\n                        if (!wave.startSide && dis > this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.startSide = 1;\n                        }\n                        if (wave.startSide && dis < -this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.startSide = 0;\n                        }\n                        this.app.data.rightWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                    case 'rightController4':\n                        wave = this.app.data.rightWave;\n                        if (!wave.endSide && dis < -this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.endSide = 1;\n                        }\n                        if (wave.endSide && dis > this.app.config.BASE_CIRCLE_WIDTH * this.app.config.fontSize) {\n                            wave.endSide = 0;\n                        }\n                        this.app.data.rightWave = wave;\n                        this.app.data.curOffset = this.app.data.curOffset;\n                        break;\n                }\n            }\n        }\n    }, {\n        key: '_modifShapeEndEvent',\n        value: function _modifShapeEndEvent(e) {\n            this._curController = null;\n            this.app.$view.off(this._shapeEvent);\n        }\n\n        /**\r\n         * 动画状态\r\n         */\n\n    }, {\n        key: 'animateState',\n        value: function animateState(state) {\n            switch (state) {\n                case this.app.config.STATE_INIT:\n                    this._isRun = false;\n                    this._stop();\n                    this.app.data.reverse ? this.app.data.curOffset = this.app.data.maxOffset : this.app.data.curOffset = 0;\n                    break;\n                case this.app.config.STATE_RUN:\n                    this._isRun = true;\n                    this._modifOffset();\n                    break;\n                case this.app.config.STATE_PAUSE:\n                    this._isRun = false;\n                    this._stop();\n                    this.app.data.curOffset = this.app.data.curOffset;\n                    break;\n            }\n        }\n\n        /**\r\n         * 动画offset\r\n         */\n\n    }, {\n        key: '_modifOffset',\n        value: function _modifOffset() {\n            this._stepOffset = this.app.data.maxOffset / this.app.data.curSpeed;\n            if (!this._time) {\n                this._lastTime = new Date().getTime();\n                this._step();\n            }\n        }\n    }, {\n        key: '_step',\n        value: function _step() {\n            if (this._isRun) {\n                if (!this.app.data.reverse && this.app.data.curOffset >= this.app.data.maxOffset) {\n                    cancelAnimationFrame(this._time);\n                    this._time = null;\n                    this.app.data.reverse = this.app.config.RUN_REVERSE;\n                    this.app.data.curState = this.app.config.STATE_INIT;\n                    return;\n                }\n                if (this.app.data.reverse && this.app.data.curOffset <= 0) {\n                    cancelAnimationFrame(this._time);\n                    this._time = null;\n                    this.app.data.reverse = this.app.config.RUN_FORWARD;\n                    this.app.data.curState = this.app.config.STATE_INIT;\n                    return;\n                }\n                this._time = requestAnimationFrame(this._step.bind(this));\n                var curTime = new Date().getTime();\n                var disTime = curTime - this._lastTime;\n                this._lastTime = curTime;\n                if (disTime > 200) {\n                    return;\n                }\n                this.app.data.reverse ? this.app.data.curOffset -= this._stepOffset * disTime : this.app.data.curOffset += this._stepOffset * disTime;\n            }\n        }\n\n        /**\r\n         * 停止动画\r\n         */\n\n    }, {\n        key: '_stop',\n        value: function _stop() {\n            if (this._time) {\n                cancelAnimationFrame(this._time);\n                this._time = null;\n            }\n        }\n    }]);\n\n    return AnimateControl;\n}(_BaseControl3.default);\n\nexports.default = AnimateControl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/control/AnimateControl.js\n// module id = 10\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/control/AnimateControl.js?");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (path) {\n    _AppConfig2.default.getInst().basePath = path;\n};\n\nvar _AppConfig = __webpack_require__(5);\n\nvar _AppConfig2 = _interopRequireDefault(_AppConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/setBasePath.js\n// module id = 11\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/setBasePath.js?");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  //解除绑定的Module事件\n  _AppControl2.default.getInst().destroy();\n};\n\nvar _AppControl = __webpack_require__(3);\n\nvar _AppControl2 = _interopRequireDefault(_AppControl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/destroy.js\n// module id = 12\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/destroy.js?");

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nexports.default = function () {\n\t_AppConfig2.default.getInst().inStudentMobile = true;\n};\n\nvar _AppConfig = __webpack_require__(5);\n\nvar _AppConfig2 = _interopRequireDefault(_AppConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/initStudentMobile.js\n// module id = 13\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/initStudentMobile.js?");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _I18NControl = __webpack_require__(7);\n\nvar _I18NControl2 = _interopRequireDefault(_I18NControl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj) {\n\t_I18NControl2.default.getInst().langType = obj._lang_;\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/setLangType.js\n// module id = 14\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/setLangType.js?");

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n   value: true\n});\n\nvar _presenter = __webpack_require__(1);\n\nvar _presenter2 = _interopRequireDefault(_presenter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (controller) {\n   _presenter2.default.playerController = controller;\n   _presenter2.default.eventBus = _presenter2.default.playerController.getEventBus();\n   _presenter2.default.eventBus.addEventListener(\"PLAYER.TOOL.MAXIMIZE\", _presenter2.default);\n   _presenter2.default.eventBus.addEventListener(\"PLAYER.TOOL.MINIMIZE\", _presenter2.default);\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/setPlayerController.js\n// module id = 15\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/setPlayerController.js?");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _AppControl = __webpack_require__(3);\n\nvar _AppControl2 = _interopRequireDefault(_AppControl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (eventName, event) {\n    var app = _AppControl2.default.getInst();\n    switch (eventName) {\n        case \"PLAYER.TOOL.MAXIMIZE\":\n            //  console.log('最大化');  \n            // 如果波在运动时，继续运动\n            if (app.data.waveRun) {\n                app.data.waveRun = false;\n                app.data.curState = app.config.STATE_RUN;\n            }\n            // 如果波在暂停并且箭号运动存在时，播放动画\n            if (app.data.curState === app.config.STATE_PAUSE && app.data.timeline) {\n                app.data.timeline.play();\n            }\n            break;\n        case \"PLAYER.TOOL.MINIMIZE\":\n            // console.log('最小化');\n            // 如果波在运动时，运动暂停\n            if (app.data.curState === app.config.STATE_RUN) {\n                app.data.waveRun = true;\n                app.data.curState = app.config.STATE_PAUSE;\n            }\n            // 如果波在暂停并且箭号运动存在时，暂停动画\n            if (app.data.curState === app.config.STATE_PAUSE && app.data.timeline) {\n                app.data.timeline.pause();\n            }\n            break;\n        default:\n            //mouseUp(event);\n            break;\n    }\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/onEventReceived.js\n// module id = 16\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/onEventReceived.js?");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _AppData = __webpack_require__(6);\n\nvar _AppData2 = _interopRequireDefault(_AppData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n\treturn {\n\t\twidth: \"100%\",\n\t\tdata: _AppData2.default.getInst().transformData\n\t};\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/getExtendData.js\n// module id = 17\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/getExtendData.js?");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _presenter = __webpack_require__(1);\n\nvar _presenter2 = _interopRequireDefault(_presenter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n    var question_id = '',\n        question_url = '';\n    if (_presenter2.default.model !== undefined) {\n        try {\n            question_id = _presenter2.default.model.question_id;\n            question_url = JSON.stringify(_presenter2.default.model.question_url);\n        } catch (e) {\n            console.log('json stringify failed');\n        }\n    }\n    return {\n        id: question_id,\n        dispatchOnly: true,\n        type_code: 'WavesSuperposition',\n        type_name: '波的叠加演示',\n        url: question_url,\n        notExistStatistics: true,\n        noNeedQuizProgress: true\n    };\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./ref/presenters/WavesSuperposition/libs/app/presenter/getQuestionInfo.js\n// module id = 18\n// module chunks = 0\n//# sourceURL=webpack:///./ref/presenters/WavesSuperposition/libs/app/presenter/getQuestionInfo.js?");

/***/ }
/******/ ]);]]></presenter><resources><file src="./resources/locations/en_US/lang.json"/><file src="./resources/locations/en/lang.json"/><file src="./resources/locations/ja_JP/lang.json"/><file src="./resources/locations/ja/lang.json"/><file src="./resources/locations/ru_RU/lang.json"/><file src="./resources/locations/zh_CN/lang.json"/><file src="./resources/locations/zh_HK/lang.json"/><file src="./resources/locations/zh_TW/lang.json"/><file src="./resources/locations/zh/lang.json"/><file src="./resources/wood/images/close.png"/><file src="./resources/wood/images/pause-dis.png"/><file src="./resources/wood/images/pause.png"/><file src="./resources/wood/images/pauseon.png"/><file src="./resources/wood/images/play-dis.png"/><file src="./resources/wood/images/play.png"/><file src="./resources/wood/images/playon.png"/><file src="./resources/wood/images/reset-dis.png"/><file src="./resources/wood/images/reset.png"/><file src="./resources/wood/images/reseton.png"/><file src="./resources/wood/images/slow-dis.png"/><file src="./resources/wood/images/slow.png"/><file src="./resources/wood/images/slowon.png"/><file src="./resources/wood/images/waves-dis.png"/><file src="./resources/wood/images/waves.png"/><file src="./resources/wood/images/waveson.png"/></resources></addon>