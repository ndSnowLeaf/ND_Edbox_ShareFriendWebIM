<?xml version='1.0' encoding='UTF-8'?><addon id="templateid"><properties><property name="type" displayName="平面几何类型" type="string" isLocalized="false"/></properties><dependencies><jsDependency><javaScript name="threejs" version="73.1"/><javaScript name="webui-popover" version="1.2.5"/><javaScript name="webglControl" version="1.0.0"/></jsDependency></dependencies><css><![CDATA[body{width:100%;height:100%}.addon_DJ2DTool .bg_pop{display:none;position:fixed;width:100%;height:100%;z-index:1000;text-align:center;pointer-events:none}.addon_DJ2DTool .bg_pop .text{display:inline-block;margin-top:15%;padding:30px 67px;border-radius:5px;font-size:20px;color:#fff;background:rgba(0,0,0,.66)}.addon_DJ2DTool *{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.addon_DJ2DTool .mr-m{margin-right:5px}.addon_DJ2DTool .toolbar{position:fixed;list-style:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;border-radius:5px;color:#fff;font-size:12px}.addon_DJ2DTool .toolbar-hide{visibility:hidden}.addon_DJ2DTool .toolbar-item{position:relative;background:#474747;vertical-align:middle}.addon_DJ2DTool .toolbar-item a{width:62px;height:62px;display:block;cursor:default;text-align:center;background:url(resources/images/divider-r.png) right center no-repeat;padding:2px}.addon_DJ2DTool .toolbar-item a img{width:30px;height:30px;margin-top:2px}.addon_DJ2DTool .toolbar-item a .tool-item-text{display:block}.addon_DJ2DTool .toolbar-item .color-bank{margin:35px 17px;position:absolute;width:28px;height:6px;background-color:red;border-radius:2px}.addon_DJ2DTool .toolbar-item:active{background:#11B0B6}.addon_DJ2DTool .toolbar-item:active img{margin-top:1px;width:32px;height:32px}.addon_DJ2DTool .toolbar-item-close{position:relative;background:0 0;vertical-align:middle}.addon_DJ2DTool .toolbar-item-close a{width:42px;height:62px;display:block;background:url(resources/images/action-close.png) right center no-repeat;cursor:default;text-align:center;padding:2px}.addon_DJ2DTool .toolbar-item-close a:hover{background:url(resources/images/action-close-p.png) right center no-repeat}.addon_DJ2DTool .toolbar-sub{position:absolute;bottom:42px;left:-28px;background-color:#E8E8E8;border:1px solid #B3ADAD;border-radius:5px;width:130px;list-style:none;margin:0;padding:0}.addon_DJ2DTool .pullUpMenu{position:absolute;top:-9px;border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid #B3ADAD;font-size:0;line-height:0}.addon_DJ2DTool .toolbar-sub-item>*{vertical-align:middle}.addon_DJ2DTool .toolbar-sub-item{padding:5px;position:relative}.addon_DJ2DTool .toolbar-sub-item:hover{background:#646B74;box-shadow:2px 0 0 0 #0C0 inset}.addon_DJ2DTool .toolbar-sub-item input{position:absolute;width:100%;height:100%;top:0;left:0;opacity:0}.popover-area{display:none;width:600px;background-color:#474747;border-top-left-radius:5px;border-top-right-radius:5px}.popover-area .color-selector{background:0 0;height:82px;padding-left:4px}.popover-area .color-selector .btn-color{width:74px;height:74px;float:left;margin-top:8px}.popover-area .color-selector .btn-color.color-1{background:url(resources/images/color-1.png) center no-repeat}.popover-area .color-selector .btn-color.color-1.on,.popover-area .color-selector .btn-color.color-1:hover{background:url(resources/images/color-1-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-2{background:url(resources/images/color-2.png) center no-repeat}.popover-area .color-selector .btn-color.color-2.on,.popover-area .color-selector .btn-color.color-2:hover{background:url(resources/images/color-2-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-3{background:url(resources/images/color-3.png) center no-repeat}.popover-area .color-selector .btn-color.color-3.on,.popover-area .color-selector .btn-color.color-3:hover{background:url(resources/images/color-3-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-4{background:url(resources/images/color-4.png) center no-repeat}.popover-area .color-selector .btn-color.color-4.on,.popover-area .color-selector .btn-color.color-4:hover{background:url(resources/images/color-4-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-5{background:url(resources/images/color-5.png) center no-repeat}.popover-area .color-selector .btn-color.color-5.on,.popover-area .color-selector .btn-color.color-5:hover{background:url(resources/images/color-5-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-6{background:url(resources/images/color-6.png) center no-repeat}.popover-area .color-selector .btn-color.color-6.on,.popover-area .color-selector .btn-color.color-6:hover{background:url(resources/images/color-6-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-7{background:url(resources/images/color-7.png) center no-repeat}.popover-area .color-selector .btn-color.color-7.on,.popover-area .color-selector .btn-color.color-7:hover{background:url(resources/images/color-7-p.png) center no-repeat}.popover-area .color-selector .btn-color.color-8{background:url(resources/images/color-8.png) center no-repeat}.popover-area .color-selector .btn-color.color-8.on,.popover-area .color-selector .btn-color.color-8:hover{background:url(resources/images/color-8-p.png) center no-repeat}.popover-area .btn-color{border:none;width:74px;height:74px;background:0 0}.popover-area .btn-color .color-black{background-color:#000}.popover-area .divider{background:url(resources/images/divider-c.png) repeat-x;height:1px}.popover-area .border-selector{background:0 0;height:30px}.popover-area .border-selector .image-line{width:109px;height:8px;float:left;padding:12px 20px 10px;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}.popover-area .border-selector .image-divider{background:url(resources/images/divider-r.png);width:1px;float:left;height:100%}.popover-area .border-selector .image-line.on,.popover-area .border-selector :hover{background:url(resources/images/line-select.png)}]]></css><view><![CDATA[<div style="z-index: 301"><div class="three2D-canvas" style="pointer-events: none; display: none"><div class="2D-canvas"><canvas style="pointer-events: none"></canvas></div></div><ul class="js-toolbar toolbar toolbar-hide"><li class="toolbar-item toogle-len"><a><img data-src="resources/images/action-ruler.png"><span class="tool-item-text"></span></a></li><li class="toolbar-item toogle-angle"><a><img data-src="resources/images/action-angle.png"><span class="tool-item-text"></span></a></li><li class="toolbar-item popover popover-color" data-placement="bottom"><a><img data-src="resources/images/fill_black.png"><span class="tool-item-text"></span></a></li><li class="toolbar-item popover popover-border" data-placement="bottom"><a><img data-src="resources/images/border_black.png"><span class="tool-item-text"></span></a></li><li class="toolbar-item copy"><a><img data-src="resources/images/action-copy.png"><span class="tool-item-text"></span></a></li><li class="toolbar-item delete"><a><img data-src="resources/images/action-delete.png"><span class="tool-item-text"></span></a></li><li class="toolbar-item-close close"><a></a></li></ul><div class="popover-area color-area"><div class="color-selector"><div class="btn-color color-1" data-color="black"></div><div class="btn-color color-2" data-color="white"></div><div class="btn-color color-3" data-color="red"></div><div class="btn-color color-4" data-color="orange"></div><div class="btn-color color-5" data-color="yellow"></div><div class="btn-color color-6" data-color="green"></div><div class="btn-color color-7" data-color="blue"></div><div class="btn-color color-8" data-color="purple"></div></div></div><div class="popover-area border-area"><div class="color-selector"><div class="btn-color color-1" data-color="black"></div><div class="btn-color color-2" data-color="white"></div><div class="btn-color color-3" data-color="red"></div><div class="btn-color color-4" data-color="orange"></div><div class="btn-color color-5" data-color="yellow"></div><div class="btn-color color-6" data-color="green"></div><div class="btn-color color-7" data-color="blue"></div><div class="btn-color color-8" data-color="purple"></div></div><div class="divider"></div><div class="border-selector"><img data-src="resources/images/line-1.png" class="image-line" data-border-width="2"><div class="image-divider"></div><img data-src="resources/images/line-2.png" class="image-line" data-border-width="4"><div class="image-divider"></div><img data-src="resources/images/line-3.png" class="image-line" data-border-width="6"><div class="image-divider"></div><img data-src="resources/images/line-4.png" class="image-line" data-border-width="8"></div></div><div class="bg_pop"><p class="text"></p></div></div>]]></view><presenter><![CDATA['use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var AddonDJ2DTool_create = function AddonDJ2DTool_create() {
	/******/var presenter = function (modules) {
		// webpackBootstrap
		/******/ // The module cache
		/******/var installedModules = {};

		/******/ // The require function
		/******/function __webpack_require__(moduleId) {

			/******/ // Check if module is in cache
			/******/if (installedModules[moduleId])
				/******/return installedModules[moduleId].exports;

			/******/ // Create a new module (and put it into the cache)
			/******/var module = installedModules[moduleId] = {
				/******/exports: {},
				/******/id: moduleId,
				/******/loaded: false
				/******/ };

			/******/ // Execute the module function
			/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

			/******/ // Flag the module as loaded
			/******/module.loaded = true;

			/******/ // Return the exports of the module
			/******/return module.exports;
			/******/
		}

		/******/ // expose the modules object (__webpack_modules__)
		/******/__webpack_require__.m = modules;

		/******/ // expose the module cache
		/******/__webpack_require__.c = installedModules;

		/******/ // __webpack_public_path__
		/******/__webpack_require__.p = "";

		/******/ // Load entry module and return exports
		/******/return __webpack_require__(0);
		/******/
	}(
	/************************************************************************/
	/******/[
	/* 0 */
	/***/function (module, exports, __webpack_require__) {

		module.exports = __webpack_require__(1);

		/***/
	},
	/* 1 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _appPresenter = __webpack_require__(2);

		var _appPresenter2 = _interopRequireDefault(_appPresenter);

		exports['default'] = function () {
			return _appPresenter2['default'];
		};

		module.exports = exports['default'];

		/***/
	},
	/* 2 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenterRun = __webpack_require__(3);

		var _presenterRun2 = _interopRequireDefault(_presenterRun);

		//import createPreview from './presenter/createPreview'

		var _presenterSetState = __webpack_require__(70);

		var _presenterSetState2 = _interopRequireDefault(_presenterSetState);

		var _presenterGetState = __webpack_require__(71);

		var _presenterGetState2 = _interopRequireDefault(_presenterGetState);

		var _presenterSetBasePath = __webpack_require__(72);

		var _presenterSetBasePath2 = _interopRequireDefault(_presenterSetBasePath);

		var _presenterHandleCallBack = __webpack_require__(73);

		var _presenterHandleCallBack2 = _interopRequireDefault(_presenterHandleCallBack);

		var _presenterInterface = __webpack_require__(74);

		var _presenterInterface2 = _interopRequireDefault(_presenterInterface);

		var _presenterPageChange = __webpack_require__(75);

		var _presenterPageChange2 = _interopRequireDefault(_presenterPageChange);

		var _presenterDestroy = __webpack_require__(76);

		var _presenterDestroy2 = _interopRequireDefault(_presenterDestroy);

		var _presenterSetPlayerController = __webpack_require__(77);

		var _presenterSetPlayerController2 = _interopRequireDefault(_presenterSetPlayerController);

		var _presenterOnEventReceived = __webpack_require__(78);

		var _presenterOnEventReceived2 = _interopRequireDefault(_presenterOnEventReceived);

		var _presenterSetLangType = __webpack_require__(79);

		var _presenterSetLangType2 = _interopRequireDefault(_presenterSetLangType);

		exports['default'] = {
			run: _presenterRun2['default'],
			destroy: _presenterDestroy2['default'],
			//createPreview,
			setState: _presenterSetState2['default'],
			getState: _presenterGetState2['default'],
			handleCallBack: _presenterHandleCallBack2['default'],
			__interface: _presenterInterface2['default'],
			setBasePath: _presenterSetBasePath2['default'],
			pageChange: _presenterPageChange2['default'], //翻页注销
			setPlayerController: _presenterSetPlayerController2['default'],
			onEventReceived: _presenterOnEventReceived2['default'],
			setUrlParams: _presenterSetLangType2['default']
		};
		module.exports = exports['default'];

		/***/
	},
	/* 3 */
	/***/function (module, exports, __webpack_require__) {

		/**
  	* 运行环境下, 初始化Module的方法
  	* @param view 运行视图(DOM对象)
  	* @param model Module的模型, Key-Value结构
  	* @remark 该方法为Module生命周期方法,仅在Module初始化时执行一次
  	*/
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenterLogic = __webpack_require__(4);

		var _presenterLogic2 = _interopRequireDefault(_presenterLogic);

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function (view, model) {
			_presenter2['default'].eventBus.addEventListener("mousemove", _presenter2['default']);
			_presenter2['default'].eventBus.addEventListener("mousedown", _presenter2['default']);
			_presenter2['default'].eventBus.addEventListener("mouseup", _presenter2['default']);
			_presenter2['default'].eventBus.addEventListener("blur", _presenter2['default']);
			_presenter2['default'].eventBus.addEventListener("focus", _presenter2['default']);
			_presenter2['default'].eventBus.addEventListener("click", _presenter2['default']);
			return window.I18nManager.getInstance().loadLanguage('DJ2DTool', _presenter2['default'].langType).done(function (data) {
				_presenter2['default'].i18n = data.lang;
				(0, _presenterLogic2['default'])(view, model, false);
			});
		};

		module.exports = exports['default'];

		/***/
	},
	/* 4 */
	/***/function (module, exports, __webpack_require__) {

		/* global $ paper icCreatePlayer */
		/**
   * Module的逻辑
   * @param view 视图对象, 根据是否为预览状态传入不同的视图对象
   * @param model 模型对象
   * @param isPreview 是否为编辑环境, true=编辑环境, false=运行环境
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _runtime = __webpack_require__(5);

		var _runtime2 = _interopRequireDefault(_runtime);

		var _constants = __webpack_require__(6);

		var _threeManger = __webpack_require__(7);

		var _ShapeShapeFactoryJs = __webpack_require__(24);

		var _ShapeShapeFactoryJs2 = _interopRequireDefault(_ShapeShapeFactoryJs);

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		var _NativeInitNativeToolbar = __webpack_require__(66);

		var _NativeInitNativeToolbar2 = _interopRequireDefault(_NativeInitNativeToolbar);

		var _initI18N = __webpack_require__(68);

		var _initI18N2 = _interopRequireDefault(_initI18N);

		var _loadPlugin = __webpack_require__(69);

		var _loadPlugin2 = _interopRequireDefault(_loadPlugin);

		exports['default'] = function (view, model, isPreview) {
			// 将 model 值赋给 this
			_presenter2['default'].model = model;
			// 将 view 值存入 presenter
			_presenter2['default'].view = view;
			// 使用 basePath 替换 view 中的图片 url
			var $imgs = $(view).find('img');

			$imgs.each(function () {
				$(this).attr('src', _presenter2['default'].path + $(this).attr('data-src'));
				//禁止拖拽
				this.ondragstart = function () {
					return false;
				};
			});

			(0, _loadPlugin2['default'])();

			_constants.shapesOrder.length = 0;

			_UtilsToolbarHelper2['default'].init();
			(0, _initI18N2['default'])();
			//presenter.handleCallBack({value: model.type});
		};

		module.exports = exports['default'];

		/***/
	},
	/* 5 */
	/***/function (module, exports) {

		/* global player */
		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		var runtime = null;
		if (window.icCreatePlayer) {
			runtime = window.player.getPlayerServices().getRuntime();
		}
		exports["default"] = runtime;
		module.exports = exports["default"];

		/***/
	},
	/* 6 */
	/***/function (module, exports) {

		/* global $ */
		// 定义 addon 的可活动大小
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		var gSpace = 0;
		exports.gSpace = gSpace;
		var REAL_ESTATE = {
			left: gSpace,
			top: gSpace,
			width: document.body.clientWidth - 2 * gSpace,
			height: document.body.clientHeight - gSpace
		};

		exports.REAL_ESTATE = REAL_ESTATE;
		var shapesOrder = [];

		exports.shapesOrder = shapesOrder;
		var useAnimate = false;

		exports.useAnimate = useAnimate;
		// 定义快捷工具栏的高度
		var TOOLBAR_HEIGHT = 48;

		exports.TOOLBAR_HEIGHT = TOOLBAR_HEIGHT;
		// 定义几何图形的可活动范围
		var CONSTRAINT = {
			xmin: gSpace,
			xmax: REAL_ESTATE.width - 2 * gSpace,
			ymin: gSpace,
			ymax: REAL_ESTATE.height - TOOLBAR_HEIGHT - 2 * gSpace
		};

		exports.CONSTRAINT = CONSTRAINT;
		// 定义长度标识距离图形宽度
		var LENGTH_IDENTIFY_SPACE = 20;
		exports.LENGTH_IDENTIFY_SPACE = LENGTH_IDENTIFY_SPACE;
		// 定义长度标识短边长度
		var LENGTH_IDENTIFY_LENGTH = 18;
		exports.LENGTH_IDENTIFY_LENGTH = LENGTH_IDENTIFY_LENGTH;
		// 定义长度标识字与线段距离
		var LENGTH_IDENTIFY_FONT2 = 30;

		exports.LENGTH_IDENTIFY_FONT2 = LENGTH_IDENTIFY_FONT2;
		/**
   * 定义工具的显示状态
   lineSwitch 是否绘制长度标识
   angleSwitch 是否绘制角度标识
   fillColorSwitch 是否绘制填充色
   strokeColorSwitch 是否绘制搭边色
   *  */
		var defaultToolStatus = {
			lineSwitch: 1,
			angleSwitch: 1,
			fillColorSwitch: 1,
			strokeColorSwitch: 1
		};
		exports.defaultToolStatus = defaultToolStatus;
		/**
   各类图形可定制快捷工具的显示状态
   sides 定制长度标识的绘制信息
   angles 定制角度标识的绘制信息
   */
		var customizeToolStatus = {
			'FourEdges': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //正方体
			'FourEdgesChangFangXing': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //长方体
			'FourEdgesPingXingSiBianXing': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //平行四边形
			'FourEdgesLingXing': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //菱形
			'FivePointedStar': {
				lineSwitch: 0,
				angleSwitch: 0,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //五角星
			'EquilateralTriangle': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //等边三角形
			'FiveEdges': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //正五边形
			'SixEdges': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //正六边形
			'IsoscelesTriangle': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //等腰三角形
			'IsoscelesRightAngleTriangle': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //直角三角形
			'ObtuseAngledTriangle': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //顿角三角形
			'AcuteAngledTriangle': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //锐角三角形
			'Circle': {
				lineSwitch: 0,
				angleSwitch: 0
			}, //圆形
			'Sector': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //扇形
			'Ellipse': {
				lineSwitch: 0,
				angleSwitch: 0
			}, //椭圆
			'FourEdgesTiXing': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			}, //等腰梯形
			'FourEdgesZhiJiaoTiXing': {
				lineSwitch: 1,
				angleSwitch: 1,
				fillColorSwitch: 1,
				strokeColorSwitch: 1
			} //直角梯形
		};

		exports.customizeToolStatus = customizeToolStatus;
		var SHAPE_PART = {
			MESH: 'mesh',
			BOARDER: 'board',
			LENGTH: 'length',
			ANGLE: 'angle'
		};

		exports.SHAPE_PART = SHAPE_PART;
		// TODO shapeConfiguration 要写个测试保证配置项
		var shapeConfiguration = $.extend({}, defaultToolStatus, customizeToolStatus);

		exports.shapeConfiguration = shapeConfiguration;
		var callNativePath = 'com.nd.pad.icr.ui.IcrJsBridge';

		exports.callNativePath = callNativePath;
		var MAX_COUNT = 5;

		exports.MAX_COUNT = MAX_COUNT;
		var MAX_ALL_COUNT = 20;
		exports.MAX_ALL_COUNT = MAX_ALL_COUNT;

		/***/
	},
	/* 7 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports.render = render;
		exports.threeStart = threeStart;
		exports.cloneShape = cloneShape;
		exports.addThreeShape = addThreeShape;
		exports.destroy = destroy;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _constants = __webpack_require__(6);

		var _ShapeBaseThreeShapeJs = __webpack_require__(8);

		var _ShapeBaseThreeShapeJs2 = _interopRequireDefault(_ShapeBaseThreeShapeJs);

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _ControllerTransformControls = __webpack_require__(23);

		var _UtilsAutoDetectRender = __webpack_require__(11);

		var _UtilsAutoDetectRender2 = _interopRequireDefault(_UtilsAutoDetectRender);

		var _UtilsShowHint = __webpack_require__(61);

		var _UtilsShowHint2 = _interopRequireDefault(_UtilsShowHint);

		var _UtilsStringUtil = __webpack_require__(62);

		var _UtilsStringUtil2 = _interopRequireDefault(_UtilsStringUtil);

		var _EventDocumentEvent = __webpack_require__(63);

		var renderer;
		var scene;
		var camera;
		var raycaster;
		var intersectObjs;
		var mouse;
		var helperTool;
		var currentAnimate = undefined;

		function initThree() {
			//创建渲染
			exports.renderer = renderer = (0, _UtilsAutoDetectRender2['default'])({
				canvas: $(_presenter2['default'].view).find('canvas')[0],
				antialias: true, //抗锯齿
				alpha: true // apply transparent attribute
			});
			renderer.setClearColor(0xFFFFFF, 0);
			renderer.setSize(_constants.REAL_ESTATE.width, _constants.REAL_ESTATE.height);
		}

		function initScene() {
			exports.scene = scene = new THREE.Scene();
		}

		function initCamera() {
			//创建Camera
			var RATIO = 2;
			exports.camera = camera = new THREE.OrthographicCamera(_constants.REAL_ESTATE.width / -RATIO, _constants.REAL_ESTATE.width / RATIO, _constants.REAL_ESTATE.height / RATIO, _constants.REAL_ESTATE.height / -RATIO, -20000, 20000);
			camera.position.x = 0;
			camera.position.y = 0;
			camera.position.z = 500;
			camera.lookAt({ x: 0, y: 0, z: 0 });
		}

		function initRaycaster() {
			//添加点击检测
			exports.raycaster = raycaster = new THREE.Raycaster();
			raycaster.linePrecision = 1;
			exports.intersectObjs = intersectObjs = new Array();
			exports.mouse = mouse = new THREE.Vector2();
		}

		function initControllerTool() {
			_ControllerTransformControls.TransformControls2D.basePath = _presenter2['default'].path;
			exports.helperTool = helperTool = new _ControllerTransformControls.TransformControls2D(camera, _presenter2['default'].webglControl.getRendererDom());
			helperTool.name = 'tool';
			scene.add(helperTool);
		}

		function animate() {
			currentAnimate = requestAnimationFrame(animate);
			renderer.render(scene, camera);
		}

		function render() {
			icCreatePlayer.plugin.webglControl.render();
		}

		function threeStart() {
			//initThree();
			initCamera();
			initScene();
			if (!_presenter2['default'].webglControl.addView(scene, camera, true, _EventDocumentEvent.onFocus, _EventDocumentEvent.onBlur)) {
				setTimeout(function () {
					_presenter2['default'].playerController.getCommands().closeTool();
				}, 100);
			}
			initRaycaster();
			initControllerTool();
			if (_constants.useAnimate) {
				animate();
			} else {
				render();
			}
		}

		function getShapeCount(shape) {
			var count = 0;
			scene.children.forEach(function (child) {
				if (child.name === shape) {
					count++;
				}
			});
			return count;
		}

		function getAllShapeCount() {
			var count = 0;
			scene.children.forEach(function (child) {
				if (child.name != 'tool') {
					count++;
				}
			});
			return count;
		}

		function cloneObj(source) {
			var recursive = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

			var object = new THREE.Object3D();
			object.name = source.name;

			object.up.copy(source.up);

			object.position.copy(source.position);
			object.quaternion.copy(source.quaternion);
			object.scale.copy(source.scale);

			object.rotationAutoUpdate = source.rotationAutoUpdate;

			object.matrix.copy(source.matrix);
			object.matrixWorld.copy(source.matrixWorld);

			object.matrixAutoUpdate = source.matrixAutoUpdate;
			object.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;

			object.visible = source.visible;

			object.castShadow = source.castShadow;
			object.receiveShadow = source.receiveShadow;

			object.frustumCulled = source.frustumCulled;
			object.renderOrder = source.renderOrder;

			object.material = source.material ? source.material.clone() : undefined;
			object.geometry = source.geometry ? source.geometry.clone() : undefined;

			object.userData = JSON.parse(JSON.stringify(source.userData));

			if (recursive === true) {

				for (var i = 0; i < source.children.length; i++) {

					var child = source.children[i];
					object.add(cloneObj(child));
				}
			}

			return object;
		}

		function cloneShape(object) {
			var shape = cloneObj(object);
			shape.position.set(0, 0, 0);
			shape.selfScale = object.selfScale.clone();
			shape.data = shape.data || {};
			shape.data.shapeName = shape.name;
			// 在 data 属性中创建一个 dashedItems 容器，用于存放长度标识
			shape.data.dashedItems = [shape.getObjectByName(_constants.SHAPE_PART.LENGTH)];
			// 在 data 属性中创建一个 angleItems 容器，用于存放角度标识
			shape.data.angleItems = [shape.getObjectByName(_constants.SHAPE_PART.ANGLE)];
			shape.data.fillColor = shape.getObjectByName(_constants.SHAPE_PART.MESH).material.color;
			shape.data.strokeColor = shape.getObjectByName(_constants.SHAPE_PART.BOARDER).material.color;
			shape.data.uniqueShapeId = shape.uuid;
			scene.add(shape);
			intersectObjs.push(shape.getObjectByName(_constants.SHAPE_PART.MESH));
			intersectObjs.push(shape.getObjectByName(_constants.SHAPE_PART.BOARDER));
			return shape;
		}

		function addThreeShape(threeShape, typeName, uuid) {
			if (getShapeCount(typeName) >= _constants.MAX_COUNT) {
				(0, _UtilsShowHint2['default'])(_UtilsStringUtil2['default'].format(_presenter2['default'].i18n["same_limit_tip"], _constants.MAX_COUNT));
				return undefined;
			}

			if (getAllShapeCount() >= _constants.MAX_ALL_COUNT) {
				(0, _UtilsShowHint2['default'])(_UtilsStringUtil2['default'].format(_presenter2['default'].i18n["limit_tip"], _constants.MAX_ALL_COUNT));
				return undefined;
			}

			if (threeShape instanceof _ShapeBaseThreeShapeJs2['default']) {
				var group = threeShape.createShapeGroup();
				group.canTransform = threeShape.canTransform;
				group.selfScale = threeShape.selfScale;
				group.position.z = helperTool.getZPostion();
				group.name = typeName ? typeName : '';
				scene.add(group);
				// 设置userData的uuid,以便与投影端相应图形关联
				group.userData.uuid = uuid ? uuid : group.uuid;
				//intersectObjs.push(...group.children);
				intersectObjs.push(group.getObjectByName(_constants.SHAPE_PART.MESH));
				intersectObjs.push(group.getObjectByName(_constants.SHAPE_PART.BOARDER));
				//console.log(group)
				return group;
			} else {
				console.error('threeManger.addThreeShape: object not an instance of BaseThreeShape');
				return undefined;
			}
		}

		function destroy() {
			"use strict";
			//renderer.domElement = null;

			_presenter2['default'].webglControl.removeScene(scene);
			helperTool.dispose();
			window.cancelAnimationFrame(currentAnimate);

			exports.renderer = renderer = null;
			exports.scene = scene = null;
			exports.camera = camera = null;
			exports.raycaster = raycaster = null;
			exports.intersectObjs = intersectObjs = null;
			exports.mouse = mouse = null;
			exports.helperTool = helperTool = null;
		}

		exports.renderer = renderer;
		exports.scene = scene;
		exports.camera = camera;
		exports.raycaster = raycaster;
		exports.intersectObjs = intersectObjs;
		exports.mouse = mouse;
		exports.helperTool = helperTool;

		/***/
	},
	/* 8 */
	/***/function (module, exports, __webpack_require__) {

		// import BaseMaterial from '../Material/BaseMaterial.js'
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		var _UtilsDrawLengthRulerJs = __webpack_require__(9);

		var _UtilsDrawLengthRulerJs2 = _interopRequireDefault(_UtilsDrawLengthRulerJs);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var _UtilsCleanAngleAnotationJs = __webpack_require__(20);

		var _UtilsCleanAngleAnotationJs2 = _interopRequireDefault(_UtilsCleanAngleAnotationJs);

		var _UtilsCleanLengthAnotationJs = __webpack_require__(21);

		var _UtilsCleanLengthAnotationJs2 = _interopRequireDefault(_UtilsCleanLengthAnotationJs);

		var _UtilsCreateBoarderGeometry = __webpack_require__(22);

		var _UtilsCreateBoarderGeometry2 = _interopRequireDefault(_UtilsCreateBoarderGeometry);

		var _UtilsAutoDetectRender = __webpack_require__(11);

		var _constants = __webpack_require__(6);

		var BaseThreeShape = function () {
			function BaseThreeShape(name) {
				_classCallCheck(this, BaseThreeShape);

				this.name = name;
				this.selfScale = new THREE.Vector3(1, 1, 1);
				this.canTransform = true;
			}

			_createClass(BaseThreeShape, [{
				key: 'getBaseFaceMaterial',
				value: function getBaseFaceMaterial() {
					return new THREE.MeshBasicMaterial({
						color: 0xFFA200,
						overdraw: 0.5
					});
				}
			}, {
				key: 'getBaseLineMaterial',
				value: function getBaseLineMaterial() {
					return new THREE.LineBasicMaterial({
						color: 0x000000,
						linewidth: 3
					});
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {}
			}, {
				key: 'getShape',
				value: function getShape() {}
			}, {
				key: 'getCurveSegments',
				value: function getCurveSegments() {
					return 12;
				}
			}, {
				key: 'getSpecificGeometry',
				value: function getSpecificGeometry() {}
			}, {
				key: 'createShapeGroup',
				value: function createShapeGroup() {
					var options = {};
					var shape = this.getShape();
					if (!_UtilsAutoDetectRender.isWebGLRenderer) {
						options.curveSegments = this.getCurveSegments();
					}
					var squareGeometry = this.getSpecificGeometry();
					if (!squareGeometry) {
						squareGeometry = new THREE.ShapeGeometry(shape, options);
					}

					squareGeometry.center();
					var squareMesh = new THREE.Mesh(squareGeometry, new THREE.MeshBasicMaterial({
						color: 'black',
						overdraw: 0.5
					}));
					squareMesh.name = _constants.SHAPE_PART.MESH;

					squareMesh.position.z = -1;

					var group = new THREE.Object3D();
					group.add(squareMesh);

					var boarderGeometry = (0, _UtilsCreateBoarderGeometry2['default'])(squareGeometry.vertices, 2);
					var boarderMesh = new THREE.Mesh(boarderGeometry, new THREE.MeshBasicMaterial({
						color: 0xFFA200,
						overdraw: 0.5
					}));
					boarderMesh.name = _constants.SHAPE_PART.BOARDER;
					boarderMesh.lineWidth = 2;
					group.add(boarderMesh);

					//添加属性到data
					group.data = group.data || {};
					group.data.shapeName = this.name;
					// 在 data 属性中创建一个 dashedItems 容器，用于存放长度标识
					group.data.dashedItems = [];
					// 在 data 属性中创建一个 angleItems 容器，用于存放角度标识
					group.data.angleItems = [];
					group.data.fillColor = squareMesh.material.color;
					group.data.strokeColor = boarderMesh.material.color;
					group.data.uniqueShapeId = group.uuid;

					var meterVertices = squareGeometry.vertices;

					var lengthPoints = this.getLengthVertices();
					if (lengthPoints) {
						var lengthObj = new THREE.Object3D();
						lengthObj.name = _constants.SHAPE_PART.LENGTH;
						for (var i = 0; i < lengthPoints.length; i++) {
							var iLengthObject = new THREE.Object3D();
							var sLength = (0, _UtilsDrawLengthRulerJs2['default'])(meterVertices[lengthPoints[i][1]], meterVertices[lengthPoints[i][0]]);
							for (var item in sLength) {
								iLengthObject.add(sLength[item]);
							}
							lengthObj.add(iLengthObject);
						}
						group.userData.lengthPoints = lengthPoints;
						group.add(lengthObj);
						// 隐藏线的显示
						(0, _UtilsCleanLengthAnotationJs2['default'])(group);
						group.data.dashedItems.push(lengthObj);
					}

					//画角
					var angelPoints = this.getAngleVertices();
					if (angelPoints) {
						var angleObj = new THREE.Object3D();
						angleObj.name = _constants.SHAPE_PART.ANGLE;
						for (var i = 0; i < angelPoints.length; i++) {
							var angle = (0, _UtilsDrawArcJs2['default'])(boarderGeometry.vertices[angelPoints[i][0]], boarderGeometry.vertices[angelPoints[i][1]], boarderGeometry.vertices[angelPoints[i][2]]);
							angle.arc.position.z = 0.1;
							angleObj.add(angle.arc);
							angleObj.add(angle.text);
						}
						group.userData.anglePoints = angelPoints;

						// 隐藏角度的显示
						group.add(angleObj);
						(0, _UtilsCleanAngleAnotationJs2['default'])(group);
						group.data.angleItems.push(angleObj);
					}

					return group;
				}
			}]);

			return BaseThreeShape;
		}();

		exports['default'] = BaseThreeShape;
		module.exports = exports['default'];

		/***/
	},
	/* 9 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports['default'] = drawLengthIdentify;
		exports.arrowVector = arrowVector;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _DrawContextJs = __webpack_require__(10);

		var _DrawContextJs2 = _interopRequireDefault(_DrawContextJs);

		var _constants = __webpack_require__(6);

		/**
   * Created by yuxiang on 15/11/19.
   */
		/**
   * @param point1 起始点
   * @param point2 结束点
   * @returns {THREE.Shape}
   * @constructor
   */
		//绘制长度显示 按照point1到point2的方向 加在（顺时针）右边

		function drawLengthIdentify(point1, point2) {
			var offset = arguments.length <= 2 || arguments[2] === undefined ? new THREE.Vector3() : arguments[2];
			var isBlack = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

			var scale = 1;
			var lengthRuler = new THREE.Object3D();
			var isCircle = false;
			var circleCenter = undefined;
			var circleEnd = undefined;
			if (point2 === undefined) {
				point2 = offset ? new THREE.Vector3().sub(offset) : new THREE.Vector3();
				isCircle = true;
				circleCenter = point2;
				var dirVector = circleCenter.clone().sub(point1);
				dirVector.setLength(1);
				circleEnd = point1.clone().add(dirVector);
			}
			if (point1 === undefined) {
				point1 = offset ? new THREE.Vector3().sub(offset) : new THREE.Vector3();
				isCircle = true;
				circleCenter = point1;
				var dirVector = circleCenter.clone().sub(point2);
				dirVector.setLength(1);
				circleEnd = point2.clone().add(dirVector);
			}

			var vector1 = minusVector(point2, point1);
			// 长度
			var length = vector1.length();
			// 中点
			var centerPoint = point1.clone().add(point2).divideScalar(2);
			var space = 0;
			//if (length < 10) {
			//    space = 5;
			//}
			//else if (length < 100) {
			//    space = 16;
			//}
			//else if (length < 1000) {
			//    space = 24;
			//}
			//else {
			//    space = 32;
			//}
			//space = space/scale;

			var numDistance = 0;
			if (length > 1000) {
				numDistance = 15;
			}

			// 垂直线段
			var distance = arrowVector(vector1, 90, true, _constants.LENGTH_IDENTIFY_SPACE / scale);
			// 改后样式，工字型
			var p1 = point1.clone();
			var p2 = point2.clone();
			p1.add(distance);
			p2.add(distance);
			//
			var landscape = arrowVector(vector1, 90, true, _constants.LENGTH_IDENTIFY_LENGTH / scale);
			var landscape0 = landscape.clone();
			var landscape1 = arrowVector(landscape, 180, true, 1);
			distance.sub(landscape.divideScalar(2));
			landscape0.add(distance);
			landscape1.add(distance);
			var p3 = point1.clone().add(landscape0);
			var p4 = point1.clone().add(landscape1);
			var p5 = point2.clone().add(landscape0);
			var p6 = point2.clone().add(landscape1);

			var center1 = p1.clone().add(vector1.clone().setLength(length / 2 - space));
			var center2 = center1.clone().add(vector1.clone().setLength(space * 2));

			if (isCircle) {
				lengthRuler.add(createCircleLength(circleCenter, circleEnd, isBlack));
				lengthRuler.add(createCenter(circleCenter, 5, 'gray', 0.1));
				lengthRuler.add(createCenter(circleCenter, 7, 'white'));
			} else {
				if (space == 0) {
					lengthRuler.add(createLine(p1, p2));
				} else {
					lengthRuler.add(createLine(p1, center1));
					lengthRuler.add(createLine(center2, p2));
				}
				lengthRuler.add(createLine(p3, p4));
				lengthRuler.add(createLine(p5, p6));
				lengthRuler.add(createArrow(p1, p2, 10));
			}

			// 中垂线向量长度16
			var centerVertiVector = arrowVector(point2.clone().sub(centerPoint), 90, true, _constants.LENGTH_IDENTIFY_SPACE / scale);

			// 长度标注点
			var location = centerPoint.add(centerVertiVector.setLength((numDistance + _constants.LENGTH_IDENTIFY_SPACE + _constants.LENGTH_IDENTIFY_FONT2) / scale));

			var lengthNum = isCircle ? (0, _DrawContextJs2['default'])(Math.round(length * scale), { fontSize: 48, bold: true, lineWidth: 4, strokeStyle: '#000000', fillStyle: '#ffffff' }, scale) : (0, _DrawContextJs2['default'])(Math.round(length * scale), { fontSize: 48, bold: true, lineWidth: 4, strokeStyle: '#ffffff', fillStyle: '#000000' }, scale);
			lengthNum.position.set(location.x, location.y, 0);
			lengthRuler.name = 'lengthRuler';
			lengthNum.name = 'lengthNum';
			return { lengthRuler: lengthRuler, lengthNum: lengthNum };
		}

		/**
   * @param vector1 向量1
   * @param vector2 向量2
   * @returns {THREE.Vector2}
   */
		//向量相加
		function addVector(vector1, vector2) {
			var vector = new THREE.Vector2(vector1.x + vector2.x, vector1.y + vector2.y);
			return vector;
		}

		/**
   * @param vector1 向量1
   * @param vector2 向量2
   * @returns {THREE.Vector2}
   */
		//向量相减 向量1减向量2
		function minusVector(vector1, vector2) {
			var vector = new THREE.Vector2(vector1.x - vector2.x, vector1.y - vector2.y);
			return vector;
		}

		/**
   * @param vector 要旋转的向量
   * @param clockwise 顺时针/逆时针
   * @param angle 旋转的角度
   * @param length 格式化的长度
   * @returns {THREE.Shape}
   */
		//按角度旋转并长度化向量

		function arrowVector(vector, angle, clockwise, length) {
			var radian = angle * (Math.PI / 180);
			var x = undefined,
			    y = undefined;
			if (clockwise == true) {
				x = vector.x * Math.cos(radian) + vector.y * Math.sin(radian);
				y = -vector.x * Math.sin(radian) + vector.y * Math.cos(radian);
			} else {
				x = vector.x * Math.cos(radian) - vector.y * Math.sin(radian);
				y = vector.x * Math.sin(radian) + vector.y * Math.cos(radian);
			}
			var targetVector = new THREE.Vector2(x, y).setLength(length);
			return targetVector;
		}

		function createCircleLength(p1, p2, isBlack) {
			var direction = p1.clone().sub(p2);
			var vertical = new THREE.Vector2(direction.y, -direction.x);
			var normal = vertical.clone().normalize();
			normal.setLength(1);
			var lineGeomety = new THREE.Geometry();
			lineGeomety.vertices = [new THREE.Vector3(p1.x + normal.x, p1.y + normal.y, 0), new THREE.Vector3(p2.x + normal.x, p2.y + normal.y, 0), new THREE.Vector3(p2.x - normal.x, p2.y - normal.y, 0), new THREE.Vector3(p1.x - normal.x, p1.y - normal.y, 0), new THREE.Vector3(p1.x + normal.x, p1.y + normal.y, 0)];
			lineGeomety.faces.push(new THREE.Face3(0, 3, 1, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(3, 2, 1, new THREE.Vector3(0, 0, 1), [], 0));
			var line = new THREE.Mesh(lineGeomety, new THREE.MeshBasicMaterial({
				color: isBlack ? 'white' : 'black'
			}));
			return line;
		}

		function createLine(p1, p2, isCircle) {
			var direction = p1.clone().sub(p2);
			var vertical = new THREE.Vector2(direction.y, -direction.x);
			var normal = vertical.clone().normalize();
			var whiteLineGeometry = new THREE.Geometry();
			whiteLineGeometry.vertices = [new THREE.Vector3(p1.x, p1.y, 0), new THREE.Vector3(p2.x, p2.y, 0)];
			var whiteLine = new THREE.Line(whiteLineGeometry, new THREE.LineBasicMaterial({ color: isCircle ? 'white' : 'black' }));

			var blackBorderGeometry = new THREE.Geometry();
			blackBorderGeometry.vertices = [new THREE.Vector3(p1.x + normal.x, p1.y + normal.y, 0), new THREE.Vector3(p2.x + normal.x, p2.y + normal.y, 0), new THREE.Vector3(p2.x - normal.x, p2.y - normal.y, 0), new THREE.Vector3(p1.x - normal.x, p1.y - normal.y, 0), new THREE.Vector3(p1.x + normal.x, p1.y + normal.y, 0)];
			var blackBorder = new THREE.Line(blackBorderGeometry, new THREE.LineBasicMaterial({ color: isCircle ? 'black' : 'white' }));

			var line = new THREE.Object3D();
			line.add(whiteLine);
			line.add(blackBorder);
			return line;
		}

		function createArrow(p1, p2, size) {
			var dirVector = new THREE.Vector2().subVectors(p1, p2);
			dirVector.setLength(size);
			var normal = dirVector.clone().normalize();
			var upVector = dirVector.clone().rotateAround({ x: 0, y: 0 }, 120 / 180);
			var downVector = dirVector.clone().rotateAround({ x: 0, y: 0 }, -120 / 180);

			var upVectorIn = upVector.clone().setLength(size - 2);
			var downVectorIn = downVector.clone().setLength(size - 2);

			var options = {};

			var shapeLeft = new THREE.Shape();
			shapeLeft.moveTo(p1.x, p1.y);
			shapeLeft.lineTo(p1.x - upVector.x, p1.y - upVector.y);
			shapeLeft.lineTo(p1.x - downVector.x, p1.y - downVector.y);
			shapeLeft.lineTo(p1.x, p1.y);
			var leftArrow = new THREE.Mesh(new THREE.ShapeGeometry(shapeLeft, options), new THREE.MeshBasicMaterial({ color: 'white' }));

			var shapeLeftIn = new THREE.Shape();
			shapeLeftIn.moveTo(p1.x - normal.x, p1.y - normal.y);
			shapeLeftIn.lineTo(p1.x - normal.x - upVectorIn.x, p1.y - normal.y - upVectorIn.y);
			shapeLeftIn.lineTo(p1.x - normal.x - downVectorIn.x, p1.y - normal.y - downVectorIn.y);
			shapeLeftIn.lineTo(p1.x - normal.x, p1.y - normal.y);
			var leftArrowIn = new THREE.Mesh(new THREE.ShapeGeometry(shapeLeftIn, options), new THREE.MeshBasicMaterial({ color: 'black' }));

			var shapeRight = new THREE.Shape();
			shapeRight.moveTo(p2.x, p2.y);
			shapeRight.lineTo(p2.x + upVector.x, p2.y + upVector.y);
			shapeRight.lineTo(p2.x + downVector.x, p2.y + downVector.y);
			shapeRight.lineTo(p2.x, p2.y);
			var rightArrow = new THREE.Mesh(new THREE.ShapeGeometry(shapeRight, options), new THREE.MeshBasicMaterial({ color: 'white' }));

			var shapeRightIn = new THREE.Shape();
			shapeRightIn.moveTo(p2.x + normal.x, p2.y + normal.y);
			shapeRightIn.lineTo(p2.x + normal.x + upVectorIn.x, p2.y + normal.y + upVectorIn.y);
			shapeRightIn.lineTo(p2.x + normal.x + downVectorIn.x, p2.y + normal.y + downVectorIn.y);
			shapeRightIn.lineTo(p2.x + normal.x, p2.y + normal.y);
			var rightArrowIn = new THREE.Mesh(new THREE.ShapeGeometry(shapeRightIn, options), new THREE.MeshBasicMaterial({ color: 'black' }));

			var arrow = new THREE.Object3D();
			arrow.add(leftArrow);
			arrow.add(rightArrow);
			arrow.add(leftArrowIn);
			arrow.add(rightArrowIn);
			return arrow;
		}

		function createCenter(center, size, color, zPosition) {
			var CircleShape = new THREE.Shape();

			for (var i = 0; i <= 64; i++) {
				var theta = i / 64 * Math.PI * 2;
				if (i == 0) {
					CircleShape.moveTo(center.x + size * Math.cos(theta), center.y + size * Math.sin(theta));
				} else {
					CircleShape.lineTo(center.x + size * Math.cos(theta), center.y + size * Math.sin(theta));
				}
			}

			var centerPoint = new THREE.Mesh(new THREE.ShapeGeometry(CircleShape, {}), new THREE.MeshBasicMaterial({ color: color }));
			centerPoint.position.z = zPosition != undefined ? zPosition : 0;
			return centerPoint;
		}

		/***/
	},
	/* 10 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by yuxiang on 15/11/21.
   */
		/**
   * @param message  文本内容
   * @param parameters 文本参数
   * @param point 文本内容添加点
   * @param scale 倍数
   * @returns {THREE.Sprite}
   * @constructor
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _UtilsAutoDetectRender = __webpack_require__(11);

		//绘制内容显示

		exports['default'] = function (message, parameters, scale) {
			var canvas = document.createElement('canvas');
			var size = 256; // CHANGED
			canvas.width = size;
			canvas.height = size;
			var context = canvas.getContext('2d');
			context.fillStyle = parameters.fillStyle ? parameters.fillStyle : '#000000'; // CHANGED
			context.strokeStyle = parameters.strokeStyle ? parameters.strokeStyle : '#000000';
			context.textAlign = 'center';
			var fontSize = parameters.fontSize ? parameters.fontSize : 24;
			var font = parameters.fontFamily ? parameters.fontFamily : 'microsoft yahei';
			var bold = parameters.bold ? "bold " : "";
			context.font = bold + fontSize + "px " + font;
			context.lineWidth = parameters.lineWidth ? parameters.lineWidth : 1;

			if (parameters.strokeStyle) {
				context.strokeText(message, size / 2, size / 2 + fontSize / 2);
			}
			context.fillText(message, size / 2, size / 2 + fontSize / 2);

			var amap = new THREE.Texture(canvas);
			amap.needsUpdate = true;
			var plane = new THREE.Mesh(new THREE.PlaneGeometry(size / 2, size / 2), new THREE.MeshBasicMaterial({
				map: amap,
				transparent: true,
				opacity: 1
			}));

			plane.scale.set(2, 2, 1); // CHANGED
			plane.textLength = context.measureText(message).width;
			return plane;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 11 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2016/2/17.
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports['default'] = autoDetectRender;
		__webpack_require__(12);
		__webpack_require__(15);

		var isWebGLRenderer = undefined;

		exports.isWebGLRenderer = isWebGLRenderer;

		function autoDetectRender(options, noWebGL) {
			if (!noWebGL && isWebGLSupported()) {
				exports.isWebGLRenderer = isWebGLRenderer = true;
				return new THREE.WebGLRenderer(options);
			}

			exports.isWebGLRenderer = isWebGLRenderer = false;
			return new THREE.CanvasRenderer(options);
		}

		function isWebGLSupported() {
			var contextOptions = { stencil: true };
			try {
				if (!window.WebGLRenderingContext) {
					return false;
				}

				var canvas = document.createElement('canvas'),
				    gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);

				return !!(gl && gl.getContextAttributes().stencil);
			} catch (e) {
				return false;
			}
		}

		/***/
	},
	/* 12 */
	/***/function (module, exports, __webpack_require__) {

		__webpack_require__(13)(__webpack_require__(14));

		/***/
	},
	/* 13 */
	/***/function (module, exports) {

		/*
  	MIT License http://www.opensource.org/licenses/mit-license.php
  	Author Tobias Koppers @sokra
  */
		module.exports = function (src) {
			if (typeof execScript === "function") execScript(src);else eval.call(null, src);
		};

		/***/
	},
	/* 14 */
	/***/function (module, exports) {

		module.exports = "/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n'use strict';\n\nTHREE.SpriteCanvasMaterial = function (parameters) {\n\n\tTHREE.Material.call(this);\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color(0xffffff);\n\tthis.program = function (context, color) {};\n\n\tthis.setValues(parameters);\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy(this);\n\tmaterial.color.copy(this.color);\n\tmaterial.program = this.program;\n\n\treturn material;\n};\n\n//\n\nTHREE.CanvasRenderer = function (parameters) {\n\n\t//console.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t    _renderData,\n\t    _elements,\n\t    _lights,\n\t    _projector = new THREE.Projector(),\n\t    _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n\t    _canvasWidth = _canvas.width,\n\t    _canvasHeight = _canvas.height,\n\t    _canvasWidthHalf = Math.floor(_canvasWidth / 2),\n\t    _canvasHeightHalf = Math.floor(_canvasHeight / 2),\n\t    _viewportX = 0,\n\t    _viewportY = 0,\n\t    _viewportWidth = _canvasWidth,\n\t    _viewportHeight = _canvasHeight,\n\t    pixelRatio = 1,\n\t    _context = _canvas.getContext('2d', {\n\t\talpha: parameters.alpha === true\n\t}),\n\t    _clearColor = new THREE.Color(0x000000),\n\t    _clearAlpha = parameters.alpha === true ? 0 : 1,\n\t    _contextGlobalAlpha = 1,\n\t    _contextGlobalCompositeOperation = 0,\n\t    _contextStrokeStyle = null,\n\t    _contextFillStyle = null,\n\t    _contextLineWidth = null,\n\t    _contextLineCap = null,\n\t    _contextLineJoin = null,\n\t    _contextLineDash = [],\n\t    _camera,\n\t    _v1,\n\t    _v2,\n\t    _v3,\n\t    _v4,\n\t    _v5 = new THREE.RenderableVertex(),\n\t    _v6 = new THREE.RenderableVertex(),\n\t    _v1x,\n\t    _v1y,\n\t    _v2x,\n\t    _v2y,\n\t    _v3x,\n\t    _v3y,\n\t    _v4x,\n\t    _v4y,\n\t    _v5x,\n\t    _v5y,\n\t    _v6x,\n\t    _v6y,\n\t    _color = new THREE.Color(),\n\t    _color1 = new THREE.Color(),\n\t    _color2 = new THREE.Color(),\n\t    _color3 = new THREE.Color(),\n\t    _color4 = new THREE.Color(),\n\t    _diffuseColor = new THREE.Color(),\n\t    _emissiveColor = new THREE.Color(),\n\t    _lightColor = new THREE.Color(),\n\t    _patterns = {},\n\t    _image,\n\t    _uvs,\n\t    _uv1x,\n\t    _uv1y,\n\t    _uv2x,\n\t    _uv2y,\n\t    _uv3x,\n\t    _uv3y,\n\t    _clipBox = new THREE.Box2(),\n\t    _clearBox = new THREE.Box2(),\n\t    _elemBox = new THREE.Box2(),\n\t    _ambientLight = new THREE.Color(),\n\t    _directionalLights = new THREE.Color(),\n\t    _pointLights = new THREE.Color(),\n\t    _vector3 = new THREE.Vector3(),\n\t    // Needed for PointLight\n\t_centroid = new THREE.Vector3(),\n\t    _normal = new THREE.Vector3(),\n\t    _normalViewMatrix = new THREE.Matrix3();\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif (_context.setLineDash === undefined) {\n\n\t\t_context.setLineDash = function () {};\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn pixelRatio;\n\t};\n\n\tthis.setPixelRatio = function (value) {\n\n\t\tif (value !== undefined) pixelRatio = value;\n\t};\n\n\tthis.setSize = function (width, height, updateStyle) {\n\n\t\t_canvasWidth = width * pixelRatio;\n\t\t_canvasHeight = height * pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor(_canvasWidth / 2);\n\t\t_canvasHeightHalf = Math.floor(_canvasHeight / 2);\n\n\t\tif (updateStyle !== false) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\t\t}\n\n\t\t_clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t\t_clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\n\t\t_clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t\t_clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport(0, 0, width, height);\n\t};\n\n\tthis.setViewport = function (x, y, width, height) {\n\n\t\t_viewportX = x * pixelRatio;\n\t\t_viewportY = y * pixelRatio;\n\n\t\t_viewportWidth = width * pixelRatio;\n\t\t_viewportHeight = height * pixelRatio;\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.enableScissorTest = function () {};\n\n\tthis.setClearColor = function (color, alpha) {\n\n\t\t_clearColor.set(color);\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t\t_clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t};\n\n\tthis.setClearColorHex = function (hex, alpha) {\n\n\t\tconsole.warn('THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.');\n\t\tthis.setClearColor(hex, alpha);\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\t};\n\n\tthis.clear = function () {\n\n\t\tif (_clearBox.empty() === false) {\n\n\t\t\t_clearBox.intersect(_clipBox);\n\t\t\t_clearBox.expandByScalar(2);\n\n\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf; // higher y value !\n\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf; // lower y value !\n\n\t\t\tif (_clearAlpha < 1) {\n\n\t\t\t\t_context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t\t\t}\n\n\t\t\tif (_clearAlpha > 0) {\n\n\t\t\t\tsetBlending(THREE.NormalBlending);\n\t\t\t\tsetOpacity(1);\n\n\t\t\t\tsetFillStyle('rgba(' + Math.floor(_clearColor.r * 255) + ',' + Math.floor(_clearColor.g * 255) + ',' + Math.floor(_clearColor.b * 255) + ',' + _clearAlpha + ')');\n\n\t\t\t\t_context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\t\t}\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function (scene, camera) {\n\n\t\tif (camera instanceof THREE.Camera === false) {\n\n\t\t\tconsole.error('THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.autoClear === true) this.clear();\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n\t\t_context.translate(_canvasWidthHalf, _canvasHeightHalf);\n\n\t\t_renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\t\t_camera = camera;\n\n\t\t_normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\n\t\t/* DEBUG\n  setFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n  _context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n  */\n\n\t\tcalculateLights();\n\n\t\tfor (var e = 0, el = _elements.length; e < el; e++) {\n\n\t\t\tvar element = _elements[e];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif (material === undefined || material.opacity === 0) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif (element instanceof THREE.RenderableSprite) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf;_v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite(_v1, element, material);\n\t\t\t} else if (element instanceof THREE.RenderableLine) {\n\n\t\t\t\t_v1 = element.v1;_v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf;_v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf;_v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen]);\n\n\t\t\t\tif (_clipBox.isIntersectionBox(_elemBox) === true) {\n\n\t\t\t\t\trenderLine(_v1, _v2, element, material);\n\t\t\t\t}\n\t\t\t} else if (element instanceof THREE.RenderableFace) {\n\n\t\t\t\t_v1 = element.v1;_v2 = element.v2;_v3 = element.v3;\n\n\t\t\t\tif (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n\t\t\t\tif (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n\t\t\t\tif (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf;_v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf;_v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf;_v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif (material.overdraw > 0) {\n\n\t\t\t\t\texpand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n\t\t\t\t\texpand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n\t\t\t\t\texpand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen, _v3.positionScreen]);\n\n\t\t\t\tif (_clipBox.isIntersectionBox(_elemBox) === true) {\n\n\t\t\t\t\trenderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* DEBUG\n   setLineWidth( 1 );\n   setStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n   _context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n   */\n\n\t\t\t_clearBox.union(_elemBox);\n\t\t}\n\n\t\t/* DEBUG\n  setLineWidth( 1 );\n  setStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n  _context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n  */\n\n\t\t_context.setTransform(1, 0, 0, 1, 0, 0);\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB(0, 0, 0);\n\t\t_directionalLights.setRGB(0, 0, 0);\n\t\t_pointLights.setRGB(0, 0, 0);\n\n\t\tfor (var l = 0, ll = _lights.length; l < ll; l++) {\n\n\t\t\tvar light = _lights[l];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif (light instanceof THREE.AmbientLight) {\n\n\t\t\t\t_ambientLight.add(lightColor);\n\t\t\t} else if (light instanceof THREE.DirectionalLight) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add(lightColor);\n\t\t\t} else if (light instanceof THREE.PointLight) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add(lightColor);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction calculateLight(position, normal, color) {\n\n\t\tfor (var l = 0, ll = _lights.length; l < ll; l++) {\n\n\t\t\tvar light = _lights[l];\n\n\t\t\t_lightColor.copy(light.color);\n\n\t\t\tif (light instanceof THREE.DirectionalLight) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\n\t\t\t\tvar amount = normal.dot(lightPosition);\n\n\t\t\t\tif (amount <= 0) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add(_lightColor.multiplyScalar(amount));\n\t\t\t} else if (light instanceof THREE.PointLight) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\t\tvar amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n\n\t\t\t\tif (amount <= 0) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n\n\t\t\t\tif (amount == 0) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add(_lightColor.multiplyScalar(amount));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderSprite(v1, element, material) {\n\n\t\tsetOpacity(material.opacity);\n\t\tsetBlending(material.blending);\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = 0.5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY); // allow for rotated sprite\n\t\t_elemBox.min.set(v1.x - dist, v1.y - dist);\n\t\t_elemBox.max.set(v1.x + dist, v1.y + dist);\n\n\t\tif (material instanceof THREE.SpriteMaterial) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif (texture !== null) {\n\n\t\t\t\tvar pattern = _patterns[texture.id];\n\n\t\t\t\tif (pattern === undefined || pattern.version !== texture.version) {\n\n\t\t\t\t\tpattern = textureToPattern(texture);\n\t\t\t\t\t_patterns[texture.id] = pattern;\n\t\t\t\t}\n\n\t\t\t\tif (pattern.canvas !== undefined) {\n\n\t\t\t\t\tsetFillStyle(pattern.canvas);\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate(v1.x, v1.y);\n\t\t\t\t\tif (material.rotation !== 0) _context.rotate(material.rotation);\n\t\t\t\t\t_context.translate(-scaleX / 2, -scaleY / 2);\n\t\t\t\t\t_context.scale(cx, cy);\n\t\t\t\t\t_context.translate(-ox, -oy);\n\t\t\t\t\t_context.fillRect(ox, oy, sx, sy);\n\t\t\t\t\t_context.restore();\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle(material.color.getStyle());\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate(v1.x, v1.y);\n\t\t\t\tif (material.rotation !== 0) _context.rotate(material.rotation);\n\t\t\t\t_context.scale(scaleX, -scaleY);\n\t\t\t\t_context.fillRect(-0.5, -0.5, 1, 1);\n\t\t\t\t_context.restore();\n\t\t\t}\n\t\t} else if (material instanceof THREE.SpriteCanvasMaterial) {\n\n\t\t\tsetStrokeStyle(material.color.getStyle());\n\t\t\tsetFillStyle(material.color.getStyle());\n\n\t\t\t_context.save();\n\t\t\t_context.translate(v1.x, v1.y);\n\t\t\tif (material.rotation !== 0) _context.rotate(material.rotation);\n\t\t\t_context.scale(scaleX, scaleY);\n\n\t\t\tmaterial.program(_context);\n\n\t\t\t_context.restore();\n\t\t}\n\n\t\t/* DEBUG\n  setStrokeStyle( 'rgb(255,255,0)' );\n  _context.beginPath();\n  _context.moveTo( v1.x - 10, v1.y );\n  _context.lineTo( v1.x + 10, v1.y );\n  _context.moveTo( v1.x, v1.y - 10 );\n  _context.lineTo( v1.x, v1.y + 10 );\n  _context.stroke();\n  */\n\t}\n\n\tfunction renderLine(v1, v2, element, material) {\n\n\t\tsetOpacity(material.opacity);\n\t\tsetBlending(material.blending);\n\n\t\t_context.beginPath();\n\t\t_context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n\t\t_context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n\n\t\tif (material instanceof THREE.LineBasicMaterial) {\n\n\t\t\tsetLineWidth(material.linewidth);\n\t\t\tsetLineCap(material.linecap);\n\t\t\tsetLineJoin(material.linejoin);\n\n\t\t\tif (material.vertexColors !== THREE.VertexColors) {\n\n\t\t\t\tsetStrokeStyle(material.color.getStyle());\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[0].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[1].getStyle();\n\n\t\t\t\tif (colorStyle1 === colorStyle2) {\n\n\t\t\t\t\tsetStrokeStyle(colorStyle1);\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n\t\t\t\t\t\tgrad.addColorStop(0, colorStyle1);\n\t\t\t\t\t\tgrad.addColorStop(1, colorStyle2);\n\t\t\t\t\t} catch (exception) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle(grad);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar(material.linewidth * 2);\n\t\t} else if (material instanceof THREE.LineDashedMaterial) {\n\n\t\t\tsetLineWidth(material.linewidth);\n\t\t\tsetLineCap(material.linecap);\n\t\t\tsetLineJoin(material.linejoin);\n\t\t\tsetStrokeStyle(material.color.getStyle());\n\t\t\tsetLineDash([material.dashSize, material.gapSize]);\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar(material.linewidth * 2);\n\n\t\t\tsetLineDash([]);\n\t\t}\n\t}\n\n\tfunction renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces++;\n\n\t\tsetOpacity(material.opacity);\n\t\tsetBlending(material.blending);\n\n\t\t_v1x = v1.positionScreen.x;_v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x;_v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x;_v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n\n\t\tif ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n\n\t\t\t_diffuseColor.copy(material.color);\n\t\t\t_emissiveColor.copy(material.emissive);\n\n\t\t\tif (material.vertexColors === THREE.FaceColors) {\n\n\t\t\t\t_diffuseColor.multiply(element.color);\n\t\t\t}\n\n\t\t\t_color.copy(_ambientLight);\n\n\t\t\t_centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\n\t\t\tcalculateLight(_centroid, element.normalModel, _color);\n\n\t\t\t_color.multiply(_diffuseColor).add(_emissiveColor);\n\n\t\t\tmaterial.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t\t} else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n\n\t\t\tif (material.map !== null) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif (mapping === THREE.UVMapping) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n\t\t\t\t}\n\t\t\t} else if (material.envMap !== null) {\n\n\t\t\t\tif (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n\n\t\t\t\t\t_normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t_color.copy(material.color);\n\n\t\t\t\tif (material.vertexColors === THREE.FaceColors) {\n\n\t\t\t\t\t_color.multiply(element.color);\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t\t\t}\n\t\t} else if (material instanceof THREE.MeshNormalMaterial) {\n\n\t\t\t_normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n\n\t\t\t_color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(0.5).addScalar(0.5);\n\n\t\t\tmaterial.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t\t} else {\n\n\t\t\t_color.setRGB(1, 1, 1);\n\n\t\t\tmaterial.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t\t}\n\t}\n\n\t//\n\n\tfunction drawTriangle(x0, y0, x1, y1, x2, y2) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo(x0, y0);\n\t\t_context.lineTo(x1, y1);\n\t\t_context.lineTo(x2, y2);\n\t\t_context.closePath();\n\t}\n\n\tfunction strokePath(color, linewidth, linecap, linejoin) {\n\n\t\tsetLineWidth(linewidth);\n\t\tsetLineCap(linecap);\n\t\tsetLineJoin(linejoin);\n\t\tsetStrokeStyle(color.getStyle());\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar(linewidth * 2);\n\t}\n\n\tfunction fillPath(color) {\n\n\t\tsetFillStyle(color.getStyle());\n\t\t_context.fill();\n\t}\n\n\tfunction textureToPattern(texture) {\n\n\t\tif (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tvar canvas = document.createElement('canvas');\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\n\t\tvar context = canvas.getContext('2d');\n\t\tcontext.setTransform(1, 0, 0, -1, 0, image.height);\n\t\tcontext.drawImage(image, 0, 0);\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif (repeatX === true && repeatY === true) {\n\n\t\t\trepeat = 'repeat';\n\t\t} else if (repeatX === true) {\n\n\t\t\trepeat = 'repeat-x';\n\t\t} else if (repeatY === true) {\n\n\t\t\trepeat = 'repeat-y';\n\t\t}\n\n\t\treturn {\n\t\t\tcanvas: _context.createPattern(canvas, repeat),\n\t\t\tversion: texture.version\n\t\t};\n\t}\n\n\tfunction patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n\n\t\tvar pattern = _patterns[texture.id];\n\n\t\tif (pattern === undefined || pattern.version !== texture.version) {\n\n\t\t\tpattern = textureToPattern(texture);\n\t\t\t_patterns[texture.id] = pattern;\n\t\t}\n\n\t\tif (pattern.canvas !== undefined) {\n\n\t\t\tsetFillStyle(pattern.canvas);\n\t\t} else {\n\n\t\t\tsetFillStyle('rgba( 0, 0, 0, 1)');\n\t\t\t_context.fill();\n\t\t\treturn;\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a,\n\t\t    b,\n\t\t    c,\n\t\t    d,\n\t\t    e,\n\t\t    f,\n\t\t    det,\n\t\t    idet,\n\t\t    offsetX = texture.offset.x / texture.repeat.x,\n\t\t    offsetY = texture.offset.y / texture.repeat.y,\n\t\t    width = texture.image.width * texture.repeat.x,\n\t\t    height = texture.image.height * texture.repeat.y;\n\n\t\tu0 = (u0 + offsetX) * width;\n\t\tv0 = (v0 + offsetY) * height;\n\n\t\tu1 = (u1 + offsetX) * width;\n\t\tv1 = (v1 + offsetY) * height;\n\n\t\tu2 = (u2 + offsetX) * width;\n\t\tv2 = (v2 + offsetY) * height;\n\n\t\tx1 -= x0;y1 -= y0;\n\t\tx2 -= x0;y2 -= y0;\n\n\t\tu1 -= u0;v1 -= v0;\n\t\tu2 -= u0;v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif (det === 0) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = (v2 * x1 - v1 * x2) * idet;\n\t\tb = (v2 * y1 - v1 * y2) * idet;\n\t\tc = (u1 * x2 - u2 * x1) * idet;\n\t\td = (u1 * y2 - u2 * y1) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform(a, b, c, d, e, f);\n\t\t_context.fill();\n\t\t_context.restore();\n\t}\n\n\tfunction clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a,\n\t\t    b,\n\t\t    c,\n\t\t    d,\n\t\t    e,\n\t\t    f,\n\t\t    det,\n\t\t    idet,\n\t\t    width = image.width - 1,\n\t\t    height = image.height - 1;\n\n\t\tu0 *= width;v0 *= height;\n\t\tu1 *= width;v1 *= height;\n\t\tu2 *= width;v2 *= height;\n\n\t\tx1 -= x0;y1 -= y0;\n\t\tx2 -= x0;y2 -= y0;\n\n\t\tu1 -= u0;v1 -= v0;\n\t\tu2 -= u0;v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = (v2 * x1 - v1 * x2) * idet;\n\t\tb = (v2 * y1 - v1 * y2) * idet;\n\t\tc = (u1 * x2 - u2 * x1) * idet;\n\t\td = (u1 * y2 - u2 * y1) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform(a, b, c, d, e, f);\n\t\t_context.clip();\n\t\t_context.drawImage(image, 0, 0);\n\t\t_context.restore();\n\t}\n\n\t// Hide anti-alias gaps\n\n\tfunction expand(v1, v2, pixels) {\n\n\t\tvar x = v2.x - v1.x,\n\t\t    y = v2.y - v1.y,\n\t\t    det = x * x + y * y,\n\t\t    idet;\n\n\t\tif (det === 0) return;\n\n\t\tidet = pixels / Math.sqrt(det);\n\n\t\tx *= idet;y *= idet;\n\n\t\tv2.x += x;v2.y += y;\n\t\tv1.x -= x;v1.y -= y;\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity(value) {\n\n\t\tif (_contextGlobalAlpha !== value) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\t\t}\n\t}\n\n\tfunction setBlending(value) {\n\n\t\tif (_contextGlobalCompositeOperation !== value) {\n\n\t\t\tif (value === THREE.NormalBlending) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\t\t\t} else if (value === THREE.AdditiveBlending) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\t\t\t} else if (value === THREE.SubtractiveBlending) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\t\t}\n\t}\n\n\tfunction setLineWidth(value) {\n\n\t\tif (_contextLineWidth !== value) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\t\t}\n\t}\n\n\tfunction setLineCap(value) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif (_contextLineCap !== value) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\t\t}\n\t}\n\n\tfunction setLineJoin(value) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif (_contextLineJoin !== value) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\t\t}\n\t}\n\n\tfunction setStrokeStyle(value) {\n\n\t\tif (_contextStrokeStyle !== value) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\t\t}\n\t}\n\n\tfunction setFillStyle(value) {\n\n\t\tif (_contextFillStyle !== value) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\t\t}\n\t}\n\n\tfunction setLineDash(value) {\n\n\t\tif (_contextLineDash.length !== value.length) {\n\n\t\t\t_context.setLineDash(value);\n\t\t\t_contextLineDash = value;\n\t\t}\n\t}\n};";

		/***/
	},
	/* 15 */
	/***/function (module, exports, __webpack_require__) {

		__webpack_require__(13)(__webpack_require__(16));

		/***/
	},
	/* 16 */
	/***/function (module, exports) {

		module.exports = "/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\n'use strict';\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2()];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n};\n\nTHREE.RenderableVertex.prototype.copy = function (vertex) {\n\n\tthis.positionWorld.copy(vertex.positionWorld);\n\tthis.positionScreen.copy(vertex.positionScreen);\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [new THREE.Color(), new THREE.Color()];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object,\n\t    _objectCount,\n\t    _objectPool = [],\n\t    _objectPoolLength = 0,\n\t    _vertex,\n\t    _vertexCount,\n\t    _vertexPool = [],\n\t    _vertexPoolLength = 0,\n\t    _face,\n\t    _faceCount,\n\t    _facePool = [],\n\t    _facePoolLength = 0,\n\t    _line,\n\t    _lineCount,\n\t    _linePool = [],\n\t    _linePoolLength = 0,\n\t    _sprite,\n\t    _spriteCount,\n\t    _spritePool = [],\n\t    _spritePoolLength = 0,\n\t    _renderData = { objects: [], lights: [], elements: [] },\n\t    _vector3 = new THREE.Vector3(),\n\t    _vector4 = new THREE.Vector4(),\n\t    _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),\n\t    _boundingBox = new THREE.Box3(),\n\t    _points3 = new Array(3),\n\t    _points4 = new Array(4),\n\t    _viewMatrix = new THREE.Matrix4(),\n\t    _viewProjectionMatrix = new THREE.Matrix4(),\n\t    _modelMatrix,\n\t    _modelViewProjectionMatrix = new THREE.Matrix4(),\n\t    _normalMatrix = new THREE.Matrix3(),\n\t    _frustum = new THREE.Frustum(),\n\t    _clippedVertex1PositionScreen = new THREE.Vector4(),\n\t    _clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function (vector, camera) {\n\n\t\tconsole.warn('THREE.Projector: .projectVector() is now vector.project().');\n\t\tvector.project(camera);\n\t};\n\n\tthis.unprojectVector = function (vector, camera) {\n\n\t\tconsole.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n\t\tvector.unproject(camera);\n\t};\n\n\tthis.pickingRay = function (vector, camera) {\n\n\t\tconsole.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n\t};\n\n\t//\n\n\tvar RenderList = function RenderList() {\n\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tvar setObject = function setObject(value) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix(object.matrixWorld);\n\n\t\t\tnormals.length = 0;\n\t\t\tuvs.length = 0;\n\t\t};\n\n\t\tvar projectVertex = function projectVertex(vertex) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy(position).applyMatrix4(_modelMatrix);\n\t\t\tpositionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n\t\t};\n\n\t\tvar pushVertex = function pushVertex(x, y, z) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set(x, y, z);\n\n\t\t\tprojectVertex(_vertex);\n\t\t};\n\n\t\tvar pushNormal = function pushNormal(x, y, z) {\n\n\t\t\tnormals.push(x, y, z);\n\t\t};\n\n\t\tvar pushUv = function pushUv(x, y) {\n\n\t\t\tuvs.push(x, y);\n\t\t};\n\n\t\tvar checkTriangleVisibility = function checkTriangleVisibility(v1, v2, v3) {\n\n\t\t\tif (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n\n\t\t\t_points3[0] = v1.positionScreen;\n\t\t\t_points3[1] = v2.positionScreen;\n\t\t\t_points3[2] = v3.positionScreen;\n\n\t\t\treturn _clipBox.isIntersectionBox(_boundingBox.setFromPoints(_points3));\n\t\t};\n\n\t\tvar checkBackfaceCulling = function checkBackfaceCulling(v1, v2, v3) {\n\n\t\t\treturn (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n\t\t};\n\n\t\tvar pushLine = function pushLine(a, b) {\n\n\t\t\tvar v1 = _vertexPool[a];\n\t\t\tvar v2 = _vertexPool[b];\n\n\t\t\t_line = getNextLineInPool();\n\n\t\t\t_line.id = object.id;\n\t\t\t_line.v1.copy(v1);\n\t\t\t_line.v2.copy(v2);\n\t\t\t_line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t_line.material = object.material;\n\n\t\t\t_renderData.elements.push(_line);\n\t\t};\n\n\t\tvar pushTriangle = function pushTriangle(a, b, c) {\n\n\t\t\tvar v1 = _vertexPool[a];\n\t\t\tvar v2 = _vertexPool[b];\n\t\t\tvar v3 = _vertexPool[c];\n\n\t\t\tif (checkTriangleVisibility(v1, v2, v3) === false) return;\n\n\t\t\tif (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy(v1);\n\t\t\t\t_face.v2.copy(v2);\n\t\t\t\t_face.v3.copy(v3);\n\t\t\t\t_face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray(normals, a * 3);\n\t\t\t\t_face.normalModel.applyMatrix3(normalMatrix).normalize();\n\n\t\t\t\tfor (var i = 0; i < 3; i++) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[i];\n\t\t\t\t\tnormal.fromArray(normals, arguments[i] * 3);\n\t\t\t\t\tnormal.applyMatrix3(normalMatrix).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[i];\n\t\t\t\t\tuv.fromArray(uvs, arguments[i] * 2);\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push(_face);\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t};\n\t};\n\n\tvar renderList = new RenderList();\n\n\tthis.projectScene = function (scene, camera, sortObjects, sortElements) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld();\n\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n\t\t_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\n\t\t_frustum.setFromMatrix(_viewProjectionMatrix);\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tscene.traverseVisible(function (object) {\n\n\t\t\tif (object instanceof THREE.Light) {\n\n\t\t\t\t_renderData.lights.push(object);\n\t\t\t} else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif (material.visible === false) return;\n\n\t\t\t\tif (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n\n\t\t\t\t\t_object = getNextObjectInPool();\n\t\t\t\t\t_object.id = object.id;\n\t\t\t\t\t_object.object = object;\n\n\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld);\n\t\t\t\t\t_vector3.applyProjection(_viewProjectionMatrix);\n\t\t\t\t\t_object.z = _vector3.z;\n\t\t\t\t\t_object.renderOrder = object.renderOrder;\n\n\t\t\t\t\t_renderData.objects.push(_object);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (sortObjects === true) {\n\n\t\t\t_renderData.objects.sort(painterSort);\n\t\t}\n\n\t\t//\n\n\t\tfor (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n\n\t\t\tvar object = _renderData.objects[o].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject(object);\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif (object instanceof THREE.Mesh) {\n\n\t\t\t\tif (geometry instanceof THREE.BufferGeometry) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif (attributes.position === undefined) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor (var i = 0, l = positions.length; i < l; i += 3) {\n\n\t\t\t\t\t\trenderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attributes.normal !== undefined) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor (var i = 0, l = normals.length; i < l; i += 3) {\n\n\t\t\t\t\t\t\trenderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attributes.uv !== undefined) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor (var i = 0, l = uvs.length; i < l; i += 2) {\n\n\t\t\t\t\t\t\trenderList.pushUv(uvs[i], uvs[i + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (geometry.index !== null) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif (groups.length > 0) {\n\n\t\t\t\t\t\t\tfor (var o = 0; o < groups.length; o++) {\n\n\t\t\t\t\t\t\t\tvar group = groups[o];\n\n\t\t\t\t\t\t\t\tfor (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor (var i = 0, l = indices.length; i < l; i += 3) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor (var i = 0, l = positions.length / 3; i < l; i += 3) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle(i, i + 1, i + 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (geometry instanceof THREE.Geometry) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[0];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix(_modelMatrix);\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\n\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\n\t\t\t\t\tfor (var v = 0, vl = vertices.length; v < vl; v++) {\n\n\t\t\t\t\t\tvar vertex = vertices[v];\n\n\t\t\t\t\t\t_vector3.copy(vertex);\n\n\t\t\t\t\t\tif (material.morphTargets === true) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor (var t = 0, tl = morphTargets.length; t < tl; t++) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[t];\n\n\t\t\t\t\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[t];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[v];\n\n\t\t\t\t\t\t\t\t_vector3.x += (targetVertex.x - vertex.x) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += (targetVertex.y - vertex.y) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += (targetVertex.z - vertex.z) * influence;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var f = 0, fl = faces.length; f < fl; f++) {\n\n\t\t\t\t\t\tvar face = faces[f];\n\n\t\t\t\t\t\tmaterial = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n\n\t\t\t\t\t\tif (material === undefined) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[face.a];\n\t\t\t\t\t\tvar v2 = _vertexPool[face.b];\n\t\t\t\t\t\tvar v3 = _vertexPool[face.c];\n\n\t\t\t\t\t\tif (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling(v1, v2, v3);\n\n\t\t\t\t\t\tif (side !== THREE.DoubleSide) {\n\n\t\t\t\t\t\t\tif (side === THREE.FrontSide && visible === false) continue;\n\t\t\t\t\t\t\tif (side === THREE.BackSide && visible === true) continue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy(v1);\n\t\t\t\t\t\t_face.v2.copy(v2);\n\t\t\t\t\t\t_face.v3.copy(v3);\n\n\t\t\t\t\t\t_face.normalModel.copy(face.normal);\n\n\t\t\t\t\t\tif (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3(_normalMatrix).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[n];\n\t\t\t\t\t\t\tnormalModel.copy(faceVertexNormals[n]);\n\n\t\t\t\t\t\t\tif (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3(_normalMatrix).normalize();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[f];\n\n\t\t\t\t\t\tif (vertexUvs !== undefined) {\n\n\t\t\t\t\t\t\tfor (var u = 0; u < 3; u++) {\n\n\t\t\t\t\t\t\t\t_face.uvs[u].copy(vertexUvs[u]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push(_face);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (object instanceof THREE.Line) {\n\n\t\t\t\tif (geometry instanceof THREE.BufferGeometry) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif (attributes.position !== undefined) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor (var i = 0, l = positions.length; i < l; i += 3) {\n\n\t\t\t\t\t\t\trenderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (geometry.index !== null) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor (var i = 0, l = indices.length; i < l; i += 2) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine(indices[i], indices[i + 1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine(i, i + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (geometry instanceof THREE.Geometry) {\n\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif (vertices.length === 0) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor (var v = 1, vl = vertices.length; v < vl; v++) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n\n\t\t\t\t\t\tif ((v + 1) % step > 0) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[_vertexCount - 2];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy(v1.positionScreen);\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy(v2.positionScreen);\n\n\t\t\t\t\t\tif (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n\n\t\t\t\t\t\t\t_line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif (object.material.vertexColors === THREE.VertexColors) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[0].copy(object.geometry.colors[v]);\n\t\t\t\t\t\t\t\t_line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push(_line);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (object instanceof THREE.Sprite) {\n\n\t\t\t\t_vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n\t\t\t\t_vector4.applyMatrix4(_viewProjectionMatrix);\n\n\t\t\t\tvar invW = 1 / _vector4.w;\n\n\t\t\t\t_vector4.z *= invW;\n\n\t\t\t\tif (_vector4.z >= -1 && _vector4.z <= 1) {\n\n\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t_sprite.object = object;\n\n\t\t\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n\n\t\t\t\t\t_sprite.material = object.material;\n\n\t\t\t\t\t_renderData.elements.push(_sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sortElements === true) {\n\n\t\t\t_renderData.elements.sort(painterSort);\n\t\t}\n\n\t\treturn _renderData;\n\t};\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif (_objectCount === _objectPoolLength) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push(object);\n\t\t\t_objectPoolLength++;\n\t\t\t_objectCount++;\n\t\t\treturn object;\n\t\t}\n\n\t\treturn _objectPool[_objectCount++];\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif (_vertexCount === _vertexPoolLength) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push(vertex);\n\t\t\t_vertexPoolLength++;\n\t\t\t_vertexCount++;\n\t\t\treturn vertex;\n\t\t}\n\n\t\treturn _vertexPool[_vertexCount++];\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif (_faceCount === _facePoolLength) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push(face);\n\t\t\t_facePoolLength++;\n\t\t\t_faceCount++;\n\t\t\treturn face;\n\t\t}\n\n\t\treturn _facePool[_faceCount++];\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif (_lineCount === _linePoolLength) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push(line);\n\t\t\t_linePoolLength++;\n\t\t\t_lineCount++;\n\t\t\treturn line;\n\t\t}\n\n\t\treturn _linePool[_lineCount++];\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif (_spriteCount === _spritePoolLength) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push(sprite);\n\t\t\t_spritePoolLength++;\n\t\t\t_spriteCount++;\n\t\t\treturn sprite;\n\t\t}\n\n\t\treturn _spritePool[_spriteCount++];\n\t}\n\n\t//\n\n\tfunction painterSort(a, b) {\n\n\t\tif (a.renderOrder !== b.renderOrder) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\n\t\t\treturn b.z - a.z;\n\t\t} else if (a.id !== b.id) {\n\n\t\t\treturn a.id - b.id;\n\t\t} else {\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tfunction clipLine(s1, s2) {\n\n\t\tvar alpha1 = 0,\n\t\t    alpha2 = 1,\n\t\t   \n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\t\tbc1near = s1.z + s1.w,\n\t\t    bc2near = s2.z + s2.w,\n\t\t    bc1far = -s1.z + s1.w,\n\t\t    bc2far = -s2.z + s2.w;\n\n\t\tif (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\t\t} else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif (bc1near < 0) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n\t\t\t} else if (bc2near < 0) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n\t\t\t}\n\n\t\t\tif (bc1far < 0) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n\t\t\t} else if (bc2far < 0) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n\t\t\t}\n\n\t\t\tif (alpha2 < alpha1) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp(s2, alpha1);\n\t\t\t\ts2.lerp(s1, 1 - alpha2);\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n};";

		/***/
	},
	/* 17 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by ChengChangXiong on 2015/11/22.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports['default'] = DrawArc;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _GetAngleJs = __webpack_require__(18);

		var _GetAngleJs2 = _interopRequireDefault(_GetAngleJs);

		var _UtilsDrawContextJs = __webpack_require__(10);

		var _UtilsDrawContextJs2 = _interopRequireDefault(_UtilsDrawContextJs);

		var _UtilsDrawLengthRulerJs = __webpack_require__(9);

		var _drawWideLine = __webpack_require__(19);

		var _drawWideLine2 = _interopRequireDefault(_drawWideLine);

		/*
   point_first：起点 point_center:端点 point_second：末点
   */

		function DrawArc(point_first, point_center, point_second) {
			var scale = arguments.length <= 3 || arguments[3] === undefined ? 1 : arguments[3];

			if (scale > 1) {
				scale = 1;
			}
			var angle = (0, _GetAngleJs2['default'])(point_first, point_center, point_second);
			var geometry = undefined;
			var vec1 = new THREE.Vector2().subVectors(point_first, point_center);
			var vec2 = new THREE.Vector2().subVectors(point_second, point_center);
			if (angle != 90) {
				var ang1 = (0, _GetAngleJs2['default'])(point_first, point_center, new THREE.Vector2().addVectors(point_center, new THREE.Vector2(1, 0)));
				var ang2 = (0, _GetAngleJs2['default'])(point_second, point_center, new THREE.Vector2().addVectors(point_center, new THREE.Vector2(1, 0)));

				if (vec1.y < 0) ang1 = 360 - ang1;
				if (vec2.y < 0) ang2 = 360 - ang2;
				var maxAng = Math.max(ang1, ang2);
				var minAng = Math.min(ang1, ang2);
				var endAng = maxAng;
				var startAng = minAng;

				if (maxAng - minAng > 180) {
					endAng = minAng;
					startAng = maxAng;
				}
				var curve = new THREE.EllipseCurve(point_center.x, point_center.y, // ax, aY
				20 * scale, 20 * scale, // xRadius, yRadius
				Math.PI * startAng / 180, //aStartAngle,
				Math.PI * endAng / 180, // aEndAngle
				false // aClockwise
				);
				var points = curve.getSpacedPoints(50);
				var path = new THREE.Path();
				geometry = path.createGeometry(points);
			} else {
				var point1 = new THREE.Vector2().addVectors(point_center, vec1.clone().setLength(15 * scale));
				var point2 = new THREE.Vector2().addVectors(point_center, vec2.clone().setLength(15 * scale));
				var point3 = new THREE.Vector2().addVectors(point1, vec2.clone().setLength(15 * scale));

				geometry = new THREE.Geometry();
				geometry.vertices.push(new THREE.Vector3(point1.x, point1.y, 0), new THREE.Vector3(point3.x, point3.y, 0), new THREE.Vector3(point2.x, point2.y, 0));
			}
			var material = new THREE.LineBasicMaterial({
				color: 0xffffff
			});
			//var ellipse = new THREE.Line(geometry, material);
			var ellipse = (0, _drawWideLine2['default'])(geometry.vertices, 3, 0XFFFFFF);
			ellipse.name = 'angleArc';

			var angleText = angle + '°';

			var text = (0, _UtilsDrawContextJs2['default'])(angleText, {
				fontSize: 48,
				bold: true,
				fontFamily: 'Microsoft Yahei',
				lineWidth: 4,
				fillStyle: "#ffffff",
				strokeStyle: '#000000'
			}, position, scale);
			text.name = 'angleText';

			vec1.normalize();
			vec2.normalize();

			var clockWise = vec1.x * vec2.y - vec1.y * vec2.x > 0;
			var centereVec = (0, _UtilsDrawLengthRulerJs.arrowVector)(vec2, angle / 2, clockWise, 15 * scale);
			var centereVec2 = centereVec.clone().setLength((text.textLength / 2 + 25) * scale);
			var position = new THREE.Vector2().addVectors(point_center, centereVec2);
			text.position.set(position.x, position.y, 0);
			text.scale.multiplyScalar(scale);
			return { 'arc': ellipse, 'text': text };
		}

		module.exports = exports['default'];

		/***/
	},
	/* 18 */
	/***/function (module, exports) {

		/**
   * Created by ChengChangXiong on 2015/11/19.
   */
		/*
   first_p：起点坐标，center_p：端点坐标，second_p：末点
   */
		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		exports["default"] = GetAngle;

		function GetAngle(first_p, center_p, second_p) {
			var v_ao = new THREE.Vector2.prototype.subVectors(first_p, center_p);
			var v_bo = new THREE.Vector2.prototype.subVectors(second_p, center_p);
			var dx1 = undefined,
			    dx2 = undefined,
			    dy1 = undefined,
			    dy2 = undefined,
			    angle = undefined,
			    abs = undefined;
			dx1 = v_ao.x;
			dy1 = v_ao.y;
			dx2 = v_bo.x;
			dy2 = v_bo.y;
			var c = Math.sqrt(dx1 * dx1 + dy1 * dy1) * Math.sqrt(dx2 * dx2 + dy2 * dy2);
			if (c == 0) return -1;
			abs = (dx1 * dx2 + dy1 * dy2) / c;
			if (abs < 0 && Math.abs(abs) > 1) {
				//当abs>且是负数的时候，向量方向相反重合，为180°
				return 180;
			}
			if (Math.abs(abs) > 1) {
				//当abs>1且是正数数的时候，向量方向一致且重合，为0°
				return 0;
			}
			angle = Math.acos((dx1 * dx2 + dy1 * dy2) / c) * 180 / Math.PI;

			return Math.round(angle * 10) / 10;
		}

		module.exports = exports["default"];

		/***/
	},
	/* 19 */
	/***/function (module, exports) {

		/**
   * Created by liuyuanpeng on 2016/8/26.
   */

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		exports["default"] = function (vertices, width, color) {
			if (vertices.length < 2) return;
			var upVertices = [];
			var downVertices = [];

			for (var i = 0; i < vertices.length; i++) {
				var preVector = i == 0 ? null : vertices[i - 1];
				var afterVector = i == vertices.length - 1 ? null : vertices[i + 1];

				if (preVector == null || afterVector == null) {
					var dirVector;
					if (preVector) {
						dirVector = vertices[i].clone().sub(preVector);
					} else {
						dirVector = vertices[i].clone().sub(afterVector).negate();
					}

					var verticalVector = new THREE.Vector3(dirVector.y, -dirVector.x, 0);
					verticalVector.setLength(width / 2);
					//console.log('vertical:', verticalVector)
					upVertices.push(vertices[i].clone().add(verticalVector));
					downVertices.push(vertices[i].clone().sub(verticalVector));
					continue;
				}
				var preDir = vertices[i].clone().sub(preVector);
				var afterDir = vertices[i].clone().sub(afterVector);

				var verticalVector = new THREE.Vector3(preDir.y, -preDir.x, 0);

				verticalVector.setLength(width / 2);
				var angle = preDir.angleTo(afterDir);
				preDir.setLength(width / Math.tan(angle / 2) / 2);

				if (verticalVector.angleTo(afterDir) > Math.PI / 2) {
					preDir.negate();
				}
				var pointUp = vertices[i].clone().add(verticalVector).add(preDir);
				var pointDown = vertices[i].clone().sub(verticalVector).sub(preDir);
				upVertices.push(pointUp);
				downVertices.push(pointDown);
			}

			//console.log('updaVertices:', upVertices);
			//console.log('downVertices:', downVertices);

			var geometry = new THREE.Geometry();
			geometry.vertices = [];
			for (var i = 0; i < upVertices.length; i++) {
				geometry.vertices.push(upVertices[i].clone());
			}
			for (var i = downVertices.length - 1; i >= 0; i--) {
				geometry.vertices.push(downVertices[i].clone());
			}
			var len = downVertices.length;
			for (var i = 0; i < len - 1; i++) {
				geometry.faces.push(new THREE.Face3(i, 2 * len - 1 - i, 2 * len - i - 2, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(i, 2 * len - i - 2, 1 + i, new THREE.Vector3(0, 0, 1), [], 0));
			}

			geometry.computeFaceNormals();
			geometry.computeBoundingBox();

			return new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({
				side: THREE.DoubleSide,
				color: color,
				overdraw: 0.5
			}));
		};

		module.exports = exports["default"];

		/***/
	},
	/* 20 */
	/***/function (module, exports) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		exports['default'] = function (shape) {
			if (!shape) {
				return;
			}
			shape.getObjectByName('angle').visible = false;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 21 */
	/***/function (module, exports) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		exports['default'] = function (shape) {
			if (!shape) {
				return;
			}
			var lengthObj = shape.getObjectByName('length');
			if (lengthObj) lengthObj.visible = false;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 22 */
	/***/function (module, exports) {

		/**
   * Created by lyp on 2015/12/24.
   */

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		exports["default"] = function (verticesArray, boarderWidth) {
			var scale = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];

			var vertices = [];
			verticesArray.forEach(function (item) {
				vertices.push(item);
			});

			for (var i = vertices.length - 1; i > 0; i--) {
				if (vertices[0].distanceTo(vertices[i]) < 0.00000001) {
					vertices.splice(-1, 1);
				} else {
					break;
				}
			}

			if (!vertices && vertices.length < 3) {
				return;
			}

			var boarderShape = new THREE.Shape();

			var startPoint = null;
			for (var i = 0; i < vertices.length; i++) {
				var preIndex = i === 0 ? vertices.length - 1 : i - 1;
				var afterIndex = i === vertices.length - 1 ? 0 : i + 1;
				var preVector = vertices[i].clone().sub(vertices[preIndex]);
				var afterVector = vertices[i].clone().sub(vertices[afterIndex]);
				if (preVector.clone().negate().equals(afterVector)) {
					continue;
				}

				var verticalVector = new THREE.Vector3(preVector.y, -preVector.x, 0);

				verticalVector.setLength(boarderWidth);
				var angle = preVector.angleTo(afterVector);
				preVector.setLength(boarderWidth / Math.tan(angle / 2));

				if (verticalVector.angleTo(afterVector) > Math.PI / 2) {
					preVector.negate();
				}
				var point = vertices[i].clone().add(verticalVector).add(preVector);
				if (i == 0) {
					startPoint = point.clone();
					boarderShape.moveTo(point.x, point.y);
				} else {
					boarderShape.lineTo(point.x, point.y);
				}
			}
			if (startPoint) {
				boarderShape.lineTo(startPoint.x, startPoint.y);
			}
			return new THREE.ShapeGeometry(boarderShape, {});
		};

		module.exports = exports["default"];

		/***/
	},
	/* 23 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports.TransformControls2D = TransformControls2D;
		exports.updateLength = updateLength;
		exports.updateAngle = updateAngle;
		exports.updateNumRotation = updateNumRotation;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _ShapeShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawLengthRulerJs = __webpack_require__(9);

		var _UtilsDrawLengthRulerJs2 = _interopRequireDefault(_UtilsDrawLengthRulerJs);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var _UtilsDrawContextJs = __webpack_require__(10);

		var _UtilsDrawContextJs2 = _interopRequireDefault(_UtilsDrawContextJs);

		var _UtilsGetPositionJs = __webpack_require__(44);

		var _UtilsGetPositionJs2 = _interopRequireDefault(_UtilsGetPositionJs);

		var _EventUpdateIntersectObjsJs = __webpack_require__(45);

		var _EventUpdateIntersectObjsJs2 = _interopRequireDefault(_EventUpdateIntersectObjsJs);

		var _RotateShapeJs = __webpack_require__(46);

		var _RotateShapeJs2 = _interopRequireDefault(_RotateShapeJs);

		var _runtime = __webpack_require__(5);

		var _runtime2 = _interopRequireDefault(_runtime);

		var _AnchorPointShapeJs = __webpack_require__(47);

		var _AnchorPointShapeJs2 = _interopRequireDefault(_AnchorPointShapeJs);

		var _UtilsDestroyThreeObjectJs = __webpack_require__(48);

		var _UtilsDestroyThreeObjectJs2 = _interopRequireDefault(_UtilsDestroyThreeObjectJs);

		var _UtilsDrawImage = __webpack_require__(49);

		var _UtilsDrawImage2 = _interopRequireDefault(_UtilsDrawImage);

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		var _UtilsCreateBoarderGeometry = __webpack_require__(22);

		var _UtilsCreateBoarderGeometry2 = _interopRequireDefault(_UtilsCreateBoarderGeometry);

		var _UtilsAutoDetectRender = __webpack_require__(11);

		var _listenerManager = __webpack_require__(60);

		var _listenerManager2 = _interopRequireDefault(_listenerManager);

		var _constants = __webpack_require__(6);

		var _threeManger = __webpack_require__(7);

		var Zposition = 0;

		exports.Zposition = Zposition;
		var TransformGizmo2D = function TransformGizmo2D() {

			this.init = function () {

				THREE.Object3D.call(this);

				this.pickers = new THREE.Object3D();
				this.planes = new THREE.Object3D();
				this.parentScale = 1;

				this.add(this.pickers);
				this.add(this.planes);

				//// PLANES
				var planeGeometry = new THREE.PlaneBufferGeometry(50, 50, 2, 2);
				var planeMaterial = new THREE.MeshBasicMaterial({ visible: false, side: THREE.DoubleSide });

				var planes = {
					"XY": new THREE.Mesh(planeGeometry, planeMaterial),
					"YZ": new THREE.Mesh(planeGeometry, planeMaterial),
					"XZ": new THREE.Mesh(planeGeometry, planeMaterial),
					"XYZE": new THREE.Mesh(planeGeometry, planeMaterial)
				};

				this.activePlane = planes["XY"];

				planes["YZ"].rotation.set(0, Math.PI / 2, 0);
				planes["XZ"].rotation.set(-Math.PI / 2, 0, 0);
				planes["XYZE"].rotation.set(0, Math.atan(1), 0); // x/z

				for (var i in planes) {

					planes[i].name = i;
					this.planes.add(planes[i]);
					this.planes[i] = planes[i];
				}

				// reset Transformations

				this.traverse(function (child) {

					if (child instanceof THREE.Mesh) {

						child.updateMatrix();

						var tempGeometry = child.geometry.clone();
						tempGeometry.applyMatrix(child.matrix);
						child.geometry = tempGeometry;

						child.position.set(0, 0, 0);
						child.rotation.set(0, 0, 0);
						child.scale.set(1, 1, 1);
					}
				});
			};
		};

		TransformGizmo2D.prototype = Object.create(THREE.Object3D.prototype);
		TransformGizmo2D.prototype.constructor = TransformGizmo2D;

		var TransformGizmo2DImplement = function TransformGizmo2DImplement() {

			TransformGizmo2D.call(this);

			this.setActivePlane = function (axis, eye) {

				var tempMatrix = new THREE.Matrix4();
				eye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes["XY"].matrixWorld)));

				if (axis === "XYZ") this.activePlane = this.planes["XY"];
			};

			this.init();
		};

		TransformGizmo2DImplement.prototype = Object.create(TransformGizmo2D.prototype);
		TransformGizmo2DImplement.prototype.constructor = TransformGizmo2DImplement;

		function TransformControls2D(camera, domElement) {

			THREE.Object3D.call(this);

			domElement = domElement !== undefined ? domElement : document;

			var scope = this;
			this.basePath;
			this.object = undefined;
			this.visible = false;
			this.space = "world";
			this.size = 1;
			this.axis = null;
			this.controllerObject = new THREE.Object3D();
			this.controller = new THREE.Object3D();
			this.normalController = new THREE.Object3D();
			this.highlightController = new THREE.Object3D();
			this.objectBoxFrame = null;
			this.normalController.position.z = this.highlightController.position.z = 100;
			this.pickerController = new THREE.Object3D();
			this.box3 = null;
			this.verticesBox = null;
			this.loadTextrueOK = false;
			this.controller.visible = false;
			this.controller.add(this.pickerController, this.normalController, this.highlightController);
			this.add(this.controllerObject);
			this.add(this.controller);
			this.maxScale = 10;
			this.minScale = 0.7;

			var _dragging = false;
			// 控制轴
			var _gizmo = new TransformGizmo2DImplement();
			this.add(_gizmo);

			var ray = new THREE.Raycaster();
			var pointerVector = new THREE.Vector2();

			var point = new THREE.Vector3();
			var oldMousePosition = new THREE.Vector3();
			var downOffset = null;

			var eye = new THREE.Vector3();

			var tempMatrix = new THREE.Matrix4();

			var oldPosition = new THREE.Vector3();
			var oldScale = new THREE.Vector3();
			var oldRotationMatrix = new THREE.Matrix4();

			var parentRotationMatrix = new THREE.Matrix4();
			var parentScale = new THREE.Vector3();

			var worldPosition = new THREE.Vector3();
			var worldRotationMatrix = new THREE.Matrix4();
			var camPosition = new THREE.Vector3();

			var oldVector = new THREE.Vector2();
			var originRotateVector = new THREE.Vector3();

			var oldBox = null;
			var oldVertices = [];
			var needOffset = new THREE.Vector3();

			drawIcons();

			if (!window.icCreatePlayer || window.icCreatePlayer && _runtime2['default'] !== icCreatePlayer.RUNTIME.PROJECTION_MOBILE) {

				_listenerManager2['default'].addListener('mousedown', onPointerDown);
				_listenerManager2['default'].addListener('mousemove', onPointerMove);
				_listenerManager2['default'].addListener('mouseup', onPointerUp);

				this.dispose = function () {
					_listenerManager2['default'].removeListener('mousedown', onPointerDown);
					_listenerManager2['default'].removeListener('mousemove', onPointerMove);
					_listenerManager2['default'].removeListener('mouseup', onPointerUp);
				};
			}

			function getArcGeometry(radius, start, end) {
				var curve = new THREE.EllipseCurve(0, 0, // ax, aY
				radius, radius, // xRadius, yRadius
				Math.PI * start / 180, //aStartAngle,
				Math.PI * end / 180, // aEndAngle
				false // aClockwise
				);
				var points = curve.getSpacedPoints(50);
				var path = new THREE.Path();
				return path.createGeometry(points);
			}

			function getCirle(radius) {

				var CircleShape = new THREE.Shape();

				for (var i = 0; i <= 64; i++) {
					var r = radius;
					var theta = i / 64 * Math.PI * 2;
					if (i == 0) {
						CircleShape.moveTo(r * Math.sin(theta), r * Math.cos(theta));
					} else {
						CircleShape.lineTo(r * Math.sin(theta), r * Math.cos(theta));
					}
				}
				return CircleShape;
			}

			function getRectangle(size) {
				var squareShape = new THREE.Shape();
				squareShape.moveTo(-size, size);
				squareShape.lineTo(size, size);
				squareShape.lineTo(size, -size);
				squareShape.lineTo(-size, -size);
				squareShape.moveTo(-size, size);
				return squareShape;
			}

			function drawIcons() {
				var scaleRadius = 0.125;
				var scaleRadiusIn = 0.08;
				var rotateRadius = 0.15;
				var scaleDirRadius = 0.1;
				var scaleDirRadiusIn = 0.06;

				var lineGrayMaterial = new THREE.LineBasicMaterial({
					color: 0xCACACA
				});
				var lineWhiteMaterial = new THREE.LineBasicMaterial({
					color: 0x5E5E5E
				});
				var meshWhiteMaterial = new THREE.MeshBasicMaterial({
					color: 0XEFEFEF,
					overdraw: 0.5
				});
				var meshGrayMaterial = new THREE.MeshBasicMaterial({
					color: 0x5E5E5E,
					overdraw: 0.5
				});
				var meshBlueMaterial = new THREE.MeshBasicMaterial({
					color: 0x37ADff,
					overdraw: 0.5
				});
				var points = getCirle(scaleRadius).createPointsGeometry();
				var rectPoints = getRectangle(scaleDirRadius).createPointsGeometry();

				var rotatePoints = getCirle(rotateRadius).createPointsGeometry();
				var rotateGeometry = new THREE.ShapeGeometry(getCirle(rotateRadius), {});
				var rotateGeometryH = new THREE.ShapeGeometry(getCirle(rotateRadius), {});
				var rotateArrowLineGeometry = getArcGeometry(rotateRadius / 2, 0, 300);
				var arrowHeadShape = new THREE.Shape();
				arrowHeadShape.moveTo(rotateRadius / 2 - 0.025, 0);
				arrowHeadShape.lineTo(rotateRadius / 2 + 0.025, 0);
				arrowHeadShape.lineTo(rotateRadius / 2, -0.05, 0);
				arrowHeadShape.lineTo(rotateRadius / 2 - 0.025, 0);
				var rotateArrowHeadGeometry = new THREE.ShapeGeometry(arrowHeadShape, {});

				//rotateArrowHeadGeometry.vertices.push(
				//    new THREE.Vector3(rotateRadius / 2 - 0.025, 0, 0),
				//    new THREE.Vector3(rotateRadius / 2 + 0.025, 0, 0),
				//    new THREE.Vector3(rotateRadius / 2, -0.05),
				//    new THREE.Vector3(rotateRadius / 2 - 0.025, 0, 0)
				//);
				//rotateArrowHeadGeometry.faces.push(
				//    new THREE.Face3(0,1,2, new THREE.Vector3(0,0,1), [], 0),
				//    new THREE.Face3(1,2,3, new THREE.Vector3(0,0,1), [], 0)
				//);
				var rotateCircleOut = new THREE.Line(rotatePoints.clone(), lineGrayMaterial.clone());
				var rotate = new THREE.Mesh(rotateGeometry, meshWhiteMaterial.clone());
				rotate.position.z = -50;
				var rotateArrowLine = new THREE.Line(rotateArrowLineGeometry, lineWhiteMaterial.clone());
				var rotateArrowHead = new THREE.Mesh(rotateArrowHeadGeometry, meshGrayMaterial.clone());
				var rotateObj = new THREE.Object3D();
				rotateObj.add(rotateCircleOut, rotate, rotateArrowLine, rotateArrowHead);
				rotateObj.traverse(function (node) {
					node.name = 1;
				});
				scope.normalController.add(rotateObj);

				var _loop = function _loop(i) {
					var meshOutGeometry = undefined,
					    meshInGeometry = undefined,
					    outline = undefined;
					if (i % 2 == 0) {
						meshOutGeometry = new THREE.ShapeGeometry(getRectangle(scaleDirRadius), {});
						meshInGeometry = new THREE.ShapeGeometry(getRectangle(scaleDirRadiusIn), {});
						outline = new THREE.Line(rectPoints.clone(), lineGrayMaterial.clone());
					} else {
						meshOutGeometry = new THREE.ShapeGeometry(getCirle(scaleRadius), {});
						meshInGeometry = new THREE.ShapeGeometry(getCirle(scaleRadiusIn), {});
						outline = new THREE.Line(points.clone(), lineGrayMaterial.clone());
					}
					var meshOut = new THREE.Mesh(meshOutGeometry, meshWhiteMaterial.clone());
					meshOut.position.z = -50;
					var meshIn = new THREE.Mesh(meshInGeometry, meshGrayMaterial.clone());
					var obj = new THREE.Object3D();
					obj.add(outline, meshOut, meshIn);
					scope.normalController.add(obj);
					obj.traverse(function (node) {
						node.name = i + 2;
					});
				};

				for (var i = 0; i < 7; i++) {
					_loop(i);
				}
				var rotateCircleOutH = new THREE.Line(rotatePoints.clone(), lineGrayMaterial.clone());
				var rotateH = new THREE.Mesh(rotateGeometryH, meshBlueMaterial.clone());
				rotateH.position.z = -10;
				var rotateArrowLineH = new THREE.Line(rotateArrowLineGeometry, lineWhiteMaterial.clone());
				var rotateArrowHeadH = new THREE.Mesh(rotateArrowHeadGeometry, meshGrayMaterial.clone());
				var rotateObjH = new THREE.Object3D();
				rotateObjH.add(rotateCircleOutH, rotateH, rotateArrowLineH, rotateArrowHeadH);
				scope.highlightController.add(rotateObjH);
				for (var i = 0; i < 7; i++) {
					var meshOutGeometry = undefined,
					    meshInGeometry = undefined,
					    outline = undefined;
					if (i % 2 == 0) {
						meshOutGeometry = new THREE.ShapeGeometry(getRectangle(scaleDirRadius), {});
						meshInGeometry = new THREE.ShapeGeometry(getRectangle(scaleDirRadiusIn), {});
						outline = new THREE.Line(rectPoints.clone(), lineGrayMaterial.clone());
					} else {
						meshOutGeometry = new THREE.ShapeGeometry(getCirle(scaleRadius), {});
						meshInGeometry = new THREE.ShapeGeometry(getCirle(scaleRadiusIn), {});
						outline = new THREE.Line(points.clone(), lineGrayMaterial.clone());
					}
					var meshOut = new THREE.Mesh(meshOutGeometry, meshBlueMaterial.clone());
					meshOut.position.z = -10;
					var meshIn = new THREE.Mesh(meshInGeometry, meshWhiteMaterial.clone());
					meshIn.position.z = -50;
					var obj = new THREE.Object3D();
					obj.add(outline, meshOut, meshIn);
					scope.highlightController.add(obj);
				}
				scope && (scope.loadTextrueOK = true);
				createPickerController();
			}

			function createPickerController() {
				var size = 0.5;
				var plane = new THREE.Mesh(new THREE.PlaneGeometry(size, size), new THREE.MeshBasicMaterial({
					color: 0xffffff,
					transparent: true,
					opacity: 0.004
				}));
				plane.name = 1;
				scope.pickerController.add(plane.clone());
				for (var i = 1; i <= 7; i++) {
					plane.name = i + 1;
					scope.pickerController.add(plane.clone());
				}
			}

			this.setBox = function (box3) {
				scope.verticesBox = box3.clone();
				scope.box3 = box3.clone();
				var objectScale = scope.object.scale.x;
				scope.box3.max.x /= scope.scale.x * objectScale;
				scope.box3.max.y /= scope.scale.y * objectScale;
				scope.box3.min.x /= scope.scale.x * objectScale;
				scope.box3.min.y /= scope.scale.y * objectScale;
			};

			this.updateBox = function () {
				if (scope.object) {
					var objectCopy = scope.object.clone();
					objectCopy.rotation.set(0, 0, 0);
					objectCopy.position.set(0, 0, 0);
					scope.setBox(getBoundingBox3(objectCopy));
				}
			};

			this.updateController = function () {
				if (!scope.loadTextrueOK) return;
				if (scope.box3 instanceof THREE.Box3) {
					this.controller.visible = true;
					var box3 = scope.box3.clone();
					if (scope.object) {
						var objectScale = scope.object.scale.x;
						var gap = 0;
						var controllerScale = scope.scale.x;
						box3.max.x *= objectScale;
						box3.max.y *= objectScale;
						box3.min.x *= objectScale;
						box3.min.y *= objectScale;

						box3.max.x += gap / controllerScale;
						box3.max.y += gap / controllerScale;
						box3.min.x -= gap / controllerScale;
						box3.min.y -= gap / controllerScale;
					}
					if (!scope.objectBoxFrame) {
						scope.objectBoxFrame = new THREE.Object3D();
						var _geometry = new THREE.Geometry();

						var blackLine = new THREE.LineSegments(_geometry.clone(), new THREE.LineBasicMaterial({
							color: 'gray'
						}));

						for (var i = 0; i < 8; i++) {
							_geometry.vertices.push(new THREE.Vector3());
						}

						_geometry.faces.push(new THREE.Face3(0, 4, 5, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(0, 5, 1, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(1, 5, 6, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(1, 6, 2, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(2, 6, 7, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(2, 7, 3, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(3, 7, 4, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(3, 4, 0, new THREE.Vector3(0, 0, 1), [], 0));

						var whiteLine = new THREE.Mesh(_geometry.clone(), new THREE.MeshBasicMaterial({
							color: 0xffffff,
							overdraw: 0.5
						}));
						_geometry = null;
						this.objectBoxFrame.add(whiteLine);
						this.objectBoxFrame.add(blackLine);

						scope.objectBoxFrame.position.z = 0.1;
						scope.controller.add(scope.objectBoxFrame);
					}
					var geometry = scope.objectBoxFrame.children[0].geometry;
					var space = 1 / scope.scale.x;

					geometry.vertices[0].set(box3.max.x + space * 2, box3.max.y + space * 2, 0);
					geometry.vertices[1].set(box3.max.x + space * 2, box3.min.y - space * 2, 0);
					geometry.vertices[2].set(box3.min.x - space * 2, box3.min.y - space * 2, 0);
					geometry.vertices[3].set(box3.min.x - space * 2, box3.max.y + space * 2, 0);
					geometry.vertices[4].set(box3.max.x, box3.max.y, 0);
					geometry.vertices[5].set(box3.max.x, box3.min.y, 0);
					geometry.vertices[6].set(box3.min.x, box3.min.y, 0);
					geometry.vertices[7].set(box3.min.x, box3.max.y, 0);

					this.objectBoxFrame.children[1].geometry.vertices = [new THREE.Vector3(box3.max.x, box3.max.y), new THREE.Vector3(box3.max.x, box3.min.y), new THREE.Vector3(box3.max.x, box3.min.y), new THREE.Vector3(box3.min.x, box3.min.y), new THREE.Vector3(box3.min.x, box3.min.y), new THREE.Vector3(box3.min.x, box3.max.y), new THREE.Vector3(box3.min.x, box3.max.y), new THREE.Vector3(box3.max.x, box3.max.y), new THREE.Vector3(box3.max.x + space * 2, box3.max.y + space * 2), new THREE.Vector3(box3.max.x + space * 2, box3.min.y - space * 2), new THREE.Vector3(box3.max.x + space * 2, box3.min.y - space * 2), new THREE.Vector3(box3.min.x - space * 2, box3.min.y - space * 2), new THREE.Vector3(box3.min.x - space * 2, box3.min.y - space * 2), new THREE.Vector3(box3.min.x - space * 2, box3.max.y + space * 2), new THREE.Vector3(box3.min.x - space * 2, box3.max.y + space * 2), new THREE.Vector3(box3.max.x + space * 2, box3.max.y + space * 2)];

					scope.objectBoxFrame.children[0].geometry.verticesNeedUpdate = true;
					scope.objectBoxFrame.children[1].geometry.verticesNeedUpdate = true;

					var positions = [new THREE.Vector3(box3.max.x + space, box3.max.y + space), new THREE.Vector3(box3.max.x + space, (box3.max.y + box3.min.y) / 2), new THREE.Vector3(box3.max.x + space, box3.min.y - space), new THREE.Vector3((box3.max.x + box3.min.x) / 2, box3.min.y - space), new THREE.Vector3(box3.min.x - space, box3.min.y - space), new THREE.Vector3(box3.min.x - space, (box3.max.y + box3.min.y) / 2), new THREE.Vector3(box3.min.x - space, box3.max.y + space), new THREE.Vector3((box3.max.x + box3.min.x) / 2, box3.max.y + space), new THREE.Vector3(box3.max.x + space, box3.max.y + space)];

					for (var i = 0; i < positions.length - 1; i++) {
						scope.normalController.children[i].position.copy(positions[i]);
						scope.highlightController.children[i].position.copy(positions[i]);
						scope.highlightController.children[i].visible = false;
						scope.pickerController.children[i].position.copy(positions[i]);
					}

					if (scope.axis) {
						var index = parseInt(scope.axis);
						var obj = index >= 1 ? scope.highlightController.children[index - 1] : false;
						obj && (obj.visible = true);
					}

					for (var i = 1; i < positions.length - 1; i += 2) {
						scope.normalController.children[i].visible = scope.object.canTransform;
						if (i + 1 === scope.axis) {
							scope.highlightController.children[i].visible = scope.object.canTransform;
						}
						scope.pickerController.children[i].visible = scope.object.canTransform;
					}
				} else {
					this.controller.visible = false;
				}
			};
			this.getZPostion = function () {
				return exports.Zposition = Zposition += 1;
			};

			this.updateObjectChange = function () {
				if (scope.object) {
					var objectCopy = scope.object.clone();
					objectCopy.rotation.set(0, 0, 0);
					scope.setBox(getBoundingBox3(objectCopy));
				}
				this.update();
			};

			this.attach = function (object) {
				_constants.shapesOrder.forEach(function (item, index) {
					if (item === object && index != _constants.shapesOrder.length - 1) {
						_constants.shapesOrder.splice(index, 1);
						_constants.shapesOrder.push(object);
						return;
					}
					if (index == _constants.shapesOrder.length - 1 && item != object) {
						_constants.shapesOrder.push(object);
					}
				});
				if (_constants.shapesOrder.length == 0) {
					_constants.shapesOrder.push(object);
				}
				exports.Zposition = Zposition += 2;
				this.object = object;
				this.object.position.z = Zposition;
				this.visible = true;
				// 设置控制轴缩放比例
				var origin = new THREE.Vector3();
				var camPos = new THREE.Vector3();
				camPos.setFromMatrixPosition(camera.matrixWorld);
				var scale = origin.distanceTo(camPos) / 6 * scope.size;
				scope.scale.set(scale, scale, scale);
				var objectCopy = scope.object.clone();
				objectCopy.rotation.set(0, 0, 0);
				objectCopy.position.set(0, 0, 0);
				scope.setBox(getBoundingBox3(objectCopy));
				this.update();
			};

			this.detach = function () {
				this.object = undefined;
				this.visible = false;
				this.axis = null;
				(0, _threeManger.render)();
			};

			this.setPath = function (path) {
				scope.basePath = path;
			};

			this.getObjectArea = function () {
				if (scope.object) {
					var _ret2 = function () {

						var box3 = new THREE.Box3();
						var points = [new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.max.y, 0), new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.max.y, 0), new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.min.y, 0), new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.min.y, 0)];
						points.forEach(function (item) {
							rotateVector(item, scope.object.rotation.z);
							item.add(scope.object.position);
							box3.expandByPoint(item);
						});

						var position = scope.object.position;
						var left = new THREE.Vector3(box3.min.x, position.y);
						var right = new THREE.Vector3(box3.max.x, position.y);
						var top = new THREE.Vector3(position.x, box3.max.y);
						var bottom = new THREE.Vector3(position.x, box3.min.y);
						return {
							v: {
								left: getScreenPosition(left),
								right: getScreenPosition(right),
								top: getScreenPosition(top),
								bottom: getScreenPosition(bottom),
								center: getScreenPosition(scope.object.position)
							}
						};
					}();

					if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === 'object') return _ret2.v;
				}
				return null;
			};

			function getBoundingBox3(object, selector) {
				var recursive = selector ? true : false;
				var scope = new THREE.Box3();
				var v1 = new THREE.Vector3();
				object.updateMatrixWorld(true);
				scope.makeEmpty();
				object.traverse(function (node) {
					if (node.name != _constants.SHAPE_PART.MESH && !recursive) {
						return;
					}

					var geometry = node.geometry;

					if (geometry !== undefined) {

						if (geometry instanceof THREE.Geometry) {

							var vertices = geometry.vertices;

							for (var i = 0, il = vertices.length; i < il; i++) {

								v1.copy(vertices[i]);

								v1.applyMatrix4(node.matrixWorld);

								scope.expandByPoint(v1);
							}
						} else if (geometry instanceof THREE.BufferGeometry && geometry.attributes['position'] !== undefined) {

							var positions = geometry.attributes['position'].array;

							for (var i = 0, il = positions.length; i < il; i += 3) {

								v1.set(positions[i], positions[i + 1], positions[i + 2]);

								v1.applyMatrix4(node.matrixWorld);

								scope.expandByPoint(v1);
							}
						}
					}
				});

				return scope;
			}

			this.computeObjectLineWidth = function () {
				if (scope.object) {
					var boarder = scope.object.getObjectByName(_constants.SHAPE_PART.BOARDER);
					var boarderGeometry = (0, _UtilsCreateBoarderGeometry2['default'])(scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices, boarder.lineWidth, scope.object.scale);
					boarder.geometry = boarderGeometry;
					updateAngle(scope.object, Math.min(scope.object.selfScale.x, scope.object.selfScale.y));
				}
			};

			/**
    * 变化更新，重新计算位置
    *
    */

			this.update = function () {

				if (scope.object === undefined) return;
				// 移动位置
				scope.object.updateMatrixWorld(true);
				worldPosition.setFromMatrixPosition(scope.object.matrixWorld);
				var worldRotation = new THREE.Euler();
				worldRotation.setFromRotationMatrix(tempMatrix.extractRotation(scope.object.matrixWorld));
				this.position.copy(worldPosition);

				var quaternion = new THREE.Quaternion();
				quaternion.setFromEuler(worldRotation);
				scope.quaternion.copy(quaternion);
				scope.quaternion.normalize();

				var scale = scope.object.scale.x;

				//当前Attach图形的面的第二个顶点位置
				var vector = scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices[1].clone();
				vector.setLength(vector.length() * scale / scope.scale.x);
				var DISTANCE = 0.5;
				vector.setLength(vector.length() + DISTANCE);

				scope.updateController();
				scope.computeObjectLineWidth();

				(0, _threeManger.render)();
			};

			this.setObjectScale = function (scale) {
				if (scope.object) {
					scope.object.selfScale.copy(scale);
					scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices.forEach(function (item, index) {
						item.multiply(scale);
					});
					scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.verticesNeedUpdate = true;
					scope.updateBox();
					updateLength(scope.object);
					scope.update();
				}
			};

			function onPointerDown(event) {
				if (scope.object === undefined || _dragging === true || event.button !== undefined && event.button !== 0) return;

				var pointer = event.changedTouches ? event.changedTouches[0] : event;

				if (pointer.button === 0 || pointer.button === undefined) {
					// 判断落点
					var intersect = intersectObjects(pointer, [scope.pickerController]);
					var axis = undefined;
					var plane = undefined;
					if (intersect) {
						axis = plane = intersect.object.name;
					} else {
						intersect = intersectObjects(pointer, [scope.object]);
						if (!intersect) {
							return;
						} else {
							axis = "ALL";
							plane = "XYZ";
						}
					}
					//

					scope.axis = axis;

					scope.update();

					eye.copy(camPosition).sub(worldPosition).normalize();

					_gizmo.setActivePlane(plane, eye);

					var planeIntersect = intersectObjects(pointer, [_gizmo.activePlane]);

					if (planeIntersect) {
						oldPosition.copy(scope.object.position);

						oldRotationMatrix.extractRotation(scope.object.matrix);
						worldRotationMatrix.extractRotation(scope.object.matrixWorld);

						parentRotationMatrix.extractRotation(scope.object.parent.matrixWorld);
						parentScale.setFromMatrixScale(tempMatrix.getInverse(scope.object.parent.matrixWorld));

						oldMousePosition.copy(planeIntersect.point);
						downOffset = null;
						oldScale.copy(scope.object.selfScale);
						oldBox = scope.verticesBox.clone();
						copyArray(oldVertices, scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices);

						var originX = (oldMousePosition.x - scope.object.position.x) / scope.object.scale.x;
						var originY = (oldMousePosition.y - scope.object.position.y) / scope.object.scale.y;
						oldVector = new THREE.Vector2(originX, originY);
						originRotateVector.x = oldMousePosition.x - scope.object.position.x;
						originRotateVector.y = oldMousePosition.y - scope.object.position.y;
					}
				}
				_dragging = true;
			}

			function CalOffset(index, point) {
				if (downOffset != null) {
					point.sub(downOffset);
					return;
				}
				var downPoint = undefined;
				switch (index) {
					case 2:
						downPoint = new THREE.Vector3(oldBox.max.x, (oldBox.min.y + oldBox.max.y) / 2, 0);
						break;
					case 4:
						downPoint = new THREE.Vector3((oldBox.min.x + oldBox.max.x) / 2, oldBox.min.y, 0);
						break;
					case 6:
						downPoint = new THREE.Vector3(oldBox.min.x, (oldBox.min.y + oldBox.max.y) / 2, 0);
						break;
					case 8:
						downPoint = new THREE.Vector3((oldBox.min.x + oldBox.max.x) / 2, oldBox.max.y, 0);
						break;
					case 3:
						downPoint = new THREE.Vector3(oldBox.max.x, oldBox.min.y, 0);
						break;
					case 5:
						downPoint = new THREE.Vector3(oldBox.min.x, oldBox.min.y, 0);
						break;
					case 7:
						downPoint = new THREE.Vector3(oldBox.min.x, oldBox.max.y, 0);
						break;
					default:
						return;
				}
				downOffset = new THREE.Vector3();
				downOffset.subVectors(point, downPoint);
				point.copy(downPoint);
			}

			function onPointerMove(event) {
				if (scope.object === undefined || scope.axis === null || _dragging === false || event.button !== undefined && event.button !== 0) return;
				var pointer = event.changedTouches ? event.changedTouches[0] : event;
				var planeIntersect = intersectObjects(pointer, [_gizmo.activePlane]);

				if (planeIntersect === false) return;
				_UtilsToolbarHelper2['default'].hideToolbar();

				point.copy(planeIntersect.point);

				if (scope.axis === "ALL") {
					var offset = point.clone();
					offset.sub(oldMousePosition);
					var targetPoint = getScreenPosition(offset);
					var originalPoint = getScreenPosition(new THREE.Vector3(0, 0, 0));
					var offsetVector = {
						x: targetPoint.x - originalPoint.x,
						y: targetPoint.y - originalPoint.y
					};
					if (judgeMaxRange(offsetVector)) {
						scope.object.position.x += offset.x;
						scope.object.position.y += offset.y;
					}
				}
				// scale
				else if (scope.axis) {
						var index = parseInt(scope.axis);
						if (index) {
							var touchPoint = point.clone();
							touchPoint.sub(scope.object.position);
							rotateVector(touchPoint, -scope.object.rotation.z);
							CalOffset(scope.axis, touchPoint);
							if (index == 1) {
								// rotate
								var offset = point.clone();
								offset.sub(oldMousePosition);
								// Rotate an object around an arbitrary axis in world space
								var FuncRotate = function FuncRotate(object, axis, radians) {
									var quaternion = new THREE.Quaternion();

									quaternion.setFromAxisAngle(axis.normalize(), radians);

									quaternion.multiply(object.quaternion);

									object.rotation.setFromQuaternion(quaternion);
								};

								var currentVector = new THREE.Vector3(point.x - scope.object.position.x, point.y - scope.object.position.y, 0);
								var angleRadians = originRotateVector.angleTo(currentVector);
								originRotateVector = currentVector;

								var direction = point.clone();
								direction.sub(scope.object.position);
								direction.normalize();

								var preDirection = oldMousePosition.clone().sub(scope.object.position);
								preDirection.normalize();

								var clockWise = direction.x * preDirection.y - direction.y * preDirection.x > 0;

								var zAxis = new THREE.Vector3(0, 0, 1);
								FuncRotate(scope.object, zAxis, clockWise ? -angleRadians : angleRadians);
								updateNumRotation(scope.object);
							} else if (index == 2 || index == 4 || index == 6 || index == 8) {
								var _ret3 = function () {
									var pStart = undefined,
									    pEnd = undefined,
									    downPoint = undefined,
									    scale = undefined;
									var isScaleX = false;
									if (index == 2) {
										pStart = new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.min.y, 0);
										pEnd = new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.max.y, 0);
										downPoint = new THREE.Vector3(oldBox.max.x, (oldBox.min.y + oldBox.max.y) / 2, 0);
										scale = Math.abs((touchPoint.x - pStart.x) / (downPoint.x - pStart.x));
										isScaleX = true;
									} else if (index == 4) {
										pStart = new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.max.y, 0);
										pEnd = new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.max.y, 0);
										downPoint = new THREE.Vector3((oldBox.min.x + oldBox.max.x) / 2, oldBox.min.y, 0);
										scale = Math.abs((touchPoint.y - pStart.y) / (downPoint.y - pStart.y));
										isScaleX = false;
									} else if (index == 6) {
										pStart = new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.max.y, 0);
										pEnd = new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.min.y, 0);
										downPoint = new THREE.Vector3(oldBox.min.x, (oldBox.min.y + oldBox.max.y) / 2, 0);
										scale = Math.abs((touchPoint.x - pStart.x) / (downPoint.x - pStart.x));
										isScaleX = true;
									} else {
										pStart = new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.min.y, 0);
										pEnd = new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.min.y, 0);
										downPoint = new THREE.Vector3((oldBox.min.x + oldBox.max.x) / 2, oldBox.max.y, 0);
										scale = Math.abs((touchPoint.y - pStart.y) / (downPoint.y - pStart.y));
										isScaleX = false;
									}
									var objectScale = isScaleX ? oldScale.x : oldScale.y;
									var finalScale = scale * objectScale;
									if (finalScale >= scope.maxScale) {
										scale = scope.maxScale / objectScale;
									} else if (finalScale <= scope.minScale) {
										scale = scope.minScale / objectScale;
									}

									var newVertices = scaleVerticesWithVector(oldVertices, pStart, pEnd, scale);
									if (!canScale(newVertices, scale)) {
										return {
											v: undefined
										};
									}
									if (isScaleX) {
										scope.object.selfScale.x = oldScale.x * scale;
									} else {
										scope.object.selfScale.y = oldScale.y * scale;
									}

									//console.log('scope.object.selfScale.x:', scope.object.selfScale.x)

									scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices.forEach(function (item, index) {
										item.x = newVertices[index].x;
										item.y = newVertices[index].y;
										item.z = newVertices[index].z;
									});
									scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.verticesNeedUpdate = true;
									scope.updateBox();
									updateLength(scope.object, needOffset);
								}();

								if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === 'object') return _ret3.v;
							} else if (index == 3 || index == 5 || index == 7) {
								var _ret4 = function () {
									var scalePivot = undefined,
									    downPoint = undefined;
									if (index == 3) {
										scalePivot = new THREE.Vector3(scope.verticesBox.min.x, scope.verticesBox.max.y, 0);
										downPoint = new THREE.Vector3(oldBox.max.x, oldBox.min.y, 0);
									} else if (index == 5) {
										scalePivot = new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.max.y, 0);
										downPoint = new THREE.Vector3(oldBox.min.x, oldBox.min.y, 0);
									} else {
										scalePivot = new THREE.Vector3(scope.verticesBox.max.x, scope.verticesBox.min.y, 0);
										downPoint = new THREE.Vector3(oldBox.min.x, oldBox.max.y, 0);
									}

									var moveVector = new THREE.Vector3().subVectors(touchPoint, scalePivot);
									var dirVector = new THREE.Vector3().subVectors(downPoint, scalePivot);
									var moveDist = moveVector.length() * Math.cos(moveVector.angleTo(dirVector));
									var originalDist = dirVector.length();
									var scale = moveDist / originalDist;

									// 限制缩放
									var objectScaleX = oldScale.x * scale;
									var objectScaleY = oldScale.y * scale;
									if (objectScaleX >= scope.maxScale || objectScaleY >= scope.maxScale) {
										scale = Math.min(scope.maxScale / oldScale.x, scope.maxScale / oldScale.y);
									} else if (objectScaleX <= scope.minScale || objectScaleY <= scope.minScale) {
										scale = Math.max(scope.minScale / oldScale.x, scope.minScale / oldScale.y);
									}

									var newVertices = scaleVerticesWithPivot(oldVertices, scalePivot, scale);
									if (!canScale(newVertices)) {
										//console.log('can not scale')
										return {
											v: undefined
										};
									}
									scope.object.selfScale.set(oldScale.x * scale, oldScale.y * scale, 1);
									//console.log('scope.object.selfScale.x:', scope.object.selfScale.x)
									scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices.forEach(function (item, index) {
										item.x = newVertices[index].x;
										item.y = newVertices[index].y;
										item.z = newVertices[index].z;
									});
									scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.verticesNeedUpdate = true;
									scope.updateBox();
									updateLength(scope.object, needOffset);
								}();

								if ((typeof _ret4 === 'undefined' ? 'undefined' : _typeof(_ret4)) === 'object') return _ret4.v;
							}
						}
					}
				// 记录当前点
				oldMousePosition.copy(point);
				scope.update();
			}

			function canScale(newVertices) {
				var geometry = new THREE.Geometry();
				newVertices.forEach(function (item) {
					geometry.vertices.push(new THREE.Vector3(item.x, item.y, item.z));
				});
				var positionOffset = geometry.center();

				needOffset.copy(positionOffset);
				rotateVector(positionOffset, scope.object.rotation.z);

				var targetOffset = scope.object.position.clone().sub(positionOffset);
				var targetPoint = getScreenPosition(targetOffset);
				var originalPoint = getScreenPosition(new THREE.Vector3(0, 0, 0));

				var ACCURACY = 10.0;
				var widthHalf = 0.5 * domElement.width;
				var heightHalf = 0.5 * domElement.height;
				if (widthHalf - Math.abs(originalPoint.x - targetPoint.x) > ACCURACY && heightHalf - Math.abs(targetPoint.y - originalPoint.y) > ACCURACY) {
					return true;
				}
				return false;
			}

			function reCenter() {
				if (scope.object) {
					var offset = scope.object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.center();
					rotateVector(offset, scope.object.rotation.z);
					updateLength(scope.object);
					updateAngle(scope.object, Math.min(scope.object.selfScale.x, scope.object.selfScale.y));
					scope.object.position.sub(offset);
					scope.updateBox();
				}
			}

			function onPointerUp(event) {

				if (event.button !== undefined && event.button !== 0) return;
				if (_dragging && scope.axis !== null) {

					downOffset = null;

					//更新geometry
					reCenter();
					scope.axis = null;
					scope.update();
				}
				if (_dragging) _UtilsToolbarHelper2['default'].refreshToolbar();

				_dragging = false;
			}

			function intersectObjects(pointer, objects) {

				var rect = domElement.getBoundingClientRect();
				var x = (pointer.clientX - rect.left) / rect.width;
				var y = (pointer.clientY - rect.top) / rect.height;

				pointerVector.set(x * 2 - 1, -(y * 2) + 1);
				ray.setFromCamera(pointerVector, camera);

				var intersections = ray.intersectObjects(objects, true);
				return intersections[0] ? intersections[0] : false;
			}

			function judgeMaxRange(offset) {
				var widthHalf = 0.5 * domElement.width;
				var heightHalf = 0.5 * domElement.height;
				//var boundingSphereRadius = scope.object.getObjectByName(SHAPE_PART.MESH).geometry.boundingSphere.radius;
				var originalPoint = getScreenPosition(new THREE.Vector3(0, 0, 0));
				var positionPoint = getScreenPosition(scope.object.position);
				positionPoint.x += offset.x;
				positionPoint.y += offset.y;
				var ACCURACY = 10.0;
				if (_constants.REAL_ESTATE.left + widthHalf - Math.abs(originalPoint.x - positionPoint.x) > ACCURACY && _constants.REAL_ESTATE.top + heightHalf - Math.abs(positionPoint.y - originalPoint.y) > ACCURACY) {
					return true;
				}

				return false;
			}

			function getScreenPosition(coordinate) {
				var vector = new THREE.Vector3();
				vector.copy(coordinate);

				var widthHalf = 0.5 * domElement.width;
				var heightHalf = 0.5 * domElement.height;

				vector.project(camera);

				vector.x = vector.x * widthHalf + widthHalf;
				vector.y = -(vector.y * heightHalf) + heightHalf;

				return {
					x: vector.x + _constants.REAL_ESTATE.left,
					y: vector.y + _constants.REAL_ESTATE.top
				};
			}
		}

		TransformControls2D.prototype = Object.create(THREE.Object3D.prototype);
		TransformControls2D.prototype.constructor = TransformControls2D;

		//缩放操作更新长度标识

		function updateLength(object, offset) {
			object.matrixWorldNeedsUpdate = true;
			object.updateMatrixWorld(true);

			var oldObj = object.getObjectByName(_constants.SHAPE_PART.LENGTH);
			var boarder = object.getObjectByName(_constants.SHAPE_PART.BOARDER);
			var color = boarder.material.color;
			var isBlack = color.equals(new THREE.Color('black'));
			var lengthVertices = object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices;
			var lengthPoints = object.userData.lengthPoints;
			if (lengthPoints && lengthPoints.length) {
				var newLength = new THREE.Object3D();
				newLength.name = _constants.SHAPE_PART.LENGTH;
				newLength.visible = oldObj.visible;
				for (var i = 0; i < lengthPoints.length; i++) {
					var iLengthObject = new THREE.Object3D();
					var sLength = (0, _UtilsDrawLengthRulerJs2['default'])(lengthVertices[lengthPoints[i][1]], lengthVertices[lengthPoints[i][0]], offset, isBlack);
					sLength.lengthNum.rotation.z = -object.rotation.z;
					for (var item in sLength) {
						iLengthObject.add(sLength[item]);
					}
					newLength.add(iLengthObject);
				}
				object.remove(oldObj);
				(0, _UtilsDestroyThreeObjectJs2['default'])(oldObj);
				object.add(newLength);
				(0, _threeManger.render)();
			}
		}

		function updateAngle(object, scale) {
			var anglePoints = object.userData.anglePoints;
			if (!anglePoints || anglePoints.length == 0) return;

			var oldAngle = object.getObjectByName(_constants.SHAPE_PART.ANGLE);
			var meterVertices = object.getObjectByName(_constants.SHAPE_PART.BOARDER).geometry.vertices;
			var newAngle = new THREE.Object3D();
			newAngle.name = _constants.SHAPE_PART.ANGLE;
			newAngle.visible = oldAngle.visible;
			newAngle.position.copy(oldAngle.position);
			for (var i = 0; i < anglePoints.length; i++) {
				var angle = (0, _UtilsDrawArcJs2['default'])(meterVertices[anglePoints[i][0]], meterVertices[anglePoints[i][1]], meterVertices[anglePoints[i][2]], scale);
				angle.arc.position.z = 0.1;
				angle.text.rotation.z = -object.rotation.z;
				newAngle.add(angle.arc);
				newAngle.add(angle.text);
			}

			object.remove(oldAngle);
			(0, _UtilsDestroyThreeObjectJs2['default'])(oldAngle);
			object.add(newAngle);
			(0, _threeManger.render)();
		}

		function updateNumRotation(object) {
			var lengthObj = object.getObjectByName(_constants.SHAPE_PART.LENGTH);
			if (lengthObj && lengthObj.children.length) {
				lengthObj.children.forEach(function (item) {
					if (item.children[1].name === 'lengthNum') {
						item.children[1].rotation.z = -object.rotation.z;
					}
				});
			}
		}

		function scaleVerticesWithVector(vertices, pointStart, pointEnd, scale) {
			var verticesArray = [];
			copyArray(verticesArray, vertices);
			var vectorA = new THREE.Vector3();
			var vectorB = new THREE.Vector3();
			var pointC = new THREE.Vector3();
			var vectorE = new THREE.Vector3();
			for (var i = 0, il = verticesArray.length; i < il; i++) {
				vectorA.subVectors(verticesArray[i], pointStart);
				vectorB.subVectors(pointEnd, pointStart);
				pointC.addVectors(pointStart, vectorB.setLength(vectorA.dot(vectorB) / vectorB.length()));
				vectorE.subVectors(verticesArray[i], pointC);
				vectorE.setLength(vectorE.length() * scale);
				verticesArray[i].addVectors(pointC, vectorE);
			}
			return verticesArray;
		}

		function scaleVerticesWithPivot(vertices, pivot, scale) {
			var verticesArray = [];
			copyArray(verticesArray, vertices);
			var vectorT = new THREE.Vector3();
			for (var i = 0, il = verticesArray.length; i < il; i++) {
				vectorT.subVectors(verticesArray[i], pivot);
				verticesArray[i].addVectors(pivot, vectorT.setLength(vectorT.length() * scale));
			}
			return verticesArray;
		}

		function copyArray(toArray, fromArray) {
			toArray.length = 0;
			fromArray.forEach(function (item) {
				if (item instanceof THREE.Vector3) {
					toArray.push(item.clone());
				} else {
					toArray.push(item);
				}
			});
		}

		function rotateVector(vector, angle) {
			var c = Math.cos(angle),
			    s = Math.sin(angle);
			var x = vector.x;
			var y = vector.y;
			vector.x = x * c - y * s;
			vector.y = x * s + y * c;
		}

		exports['default'] = {
			'TransformControls2D': TransformControls2D,
			'updateLength': updateLength,
			'updateAngle': updateAngle,
			'updateNumRotation': updateNumRotation
		};

		/***/
	},
	/* 24 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports['default'] = createShape;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _RectangularCubeJs = __webpack_require__(25);

		var _RectangularCubeJs2 = _interopRequireDefault(_RectangularCubeJs);

		var _SquareShapeJs = __webpack_require__(26);

		var _SquareShapeJs2 = _interopRequireDefault(_SquareShapeJs);

		var _ParallelogramShapeJs = __webpack_require__(27);

		var _ParallelogramShapeJs2 = _interopRequireDefault(_ParallelogramShapeJs);

		var _StarShape = __webpack_require__(28);

		var _StarShape2 = _interopRequireDefault(_StarShape);

		var _QuadrangleShapeJs = __webpack_require__(29);

		var _QuadrangleShapeJs2 = _interopRequireDefault(_QuadrangleShapeJs);

		var _EquilateralTriangleJs = __webpack_require__(30);

		var _EquilateralTriangleJs2 = _interopRequireDefault(_EquilateralTriangleJs);

		var _IsoscelesTriangleJs = __webpack_require__(31);

		var _IsoscelesTriangleJs2 = _interopRequireDefault(_IsoscelesTriangleJs);

		var _RightTriangleJs = __webpack_require__(32);

		var _RightTriangleJs2 = _interopRequireDefault(_RightTriangleJs);

		var _ObtuseTriangleJs = __webpack_require__(33);

		var _ObtuseTriangleJs2 = _interopRequireDefault(_ObtuseTriangleJs);

		var _AcuteTriangleJs = __webpack_require__(34);

		var _AcuteTriangleJs2 = _interopRequireDefault(_AcuteTriangleJs);

		var _FiveEdgesJs = __webpack_require__(35);

		var _FiveEdgesJs2 = _interopRequireDefault(_FiveEdgesJs);

		var _SixEdges = __webpack_require__(36);

		var _SixEdges2 = _interopRequireDefault(_SixEdges);

		var _CircleShape = __webpack_require__(37);

		var _CircleShape2 = _interopRequireDefault(_CircleShape);

		var _SectorShape = __webpack_require__(38);

		var _SectorShape2 = _interopRequireDefault(_SectorShape);

		var _EllipseShape = __webpack_require__(39);

		var _EllipseShape2 = _interopRequireDefault(_EllipseShape);

		var _IsoscelesTrapezoidJs = __webpack_require__(40);

		var _IsoscelesTrapezoidJs2 = _interopRequireDefault(_IsoscelesTrapezoidJs);

		var _RightTrapezoidJs = __webpack_require__(41);

		var _RightTrapezoidJs2 = _interopRequireDefault(_RightTrapezoidJs);

		var _RhombusShapeJs = __webpack_require__(42);

		var _RhombusShapeJs2 = _interopRequireDefault(_RhombusShapeJs);

		var _Sector2ShapeJs = __webpack_require__(43);

		var _Sector2ShapeJs2 = _interopRequireDefault(_Sector2ShapeJs);

		var GEOMETRY_SHAPE = {
			SQUARE: 'FourEdges', //正方体
			RECTANGULARCUBE: 'FourEdgesChangFangXing', //长方体
			PARALLELOGRAM: 'FourEdgesPingXingSiBianXing', //平行四边形
			RHOMBUS: 'FourEdgesLingXing', //菱形
			ISOSCELESTRAPEZOID: 'FourEdgesTiXing', //等腰梯形
			RIGHTTRAPEZOID: 'FourEdgesZhiJiaoTiXing', //直角梯形

			STAR: 'FivePointedStar', //五角星
			FIVEEDGES: 'FiveEdges', //正五边形
			SIXEDGES: 'SixEdges', //正六边形

			EQUILATERALTRIANGLE: 'EquilateralTriangle', //等边三角形
			ISOSCELESTRIANGLE: 'IsoscelesTriangle', //等腰三角形
			RIGHTTRIANGLE: 'IsoscelesRightAngleTriangle', //直角三角形
			OBTUSETRIANGLE: 'ObtuseAngledTriangle', //顿角三角形
			ACUTETRIANGLE: 'AcuteAngledTriangle', //锐角三角形

			CIRCLE: 'Circle', //圆形
			SECTOR: 'Sector', //扇形
			ELLIPSE: 'Ellipse', //椭圆

			SECTOR2: 'Sector2'

		};

		exports.GEOMETRY_SHAPE = GEOMETRY_SHAPE;

		function createShape(type, params) {
			var solidGeometry = undefined;
			//console.log('ShapeFactory createShape',type);
			switch (type) {
				//直角梯形
				case GEOMETRY_SHAPE.RIGHTTRAPEZOID:
					solidGeometry = new _RightTrapezoidJs2['default'](210, 210, 420);
					break;

				//等腰梯形
				case GEOMETRY_SHAPE.ISOSCELESTRAPEZOID:
					var topLeng = 250 * Math.cos(45 * Math.PI / 180);
					solidGeometry = new _IsoscelesTrapezoidJs2['default'](topLeng, topLeng, 3 * topLeng);
					break;

				//六边形
				case GEOMETRY_SHAPE.SIXEDGES:
					solidGeometry = new _SixEdges2['default'](200);
					break;
				//五边形
				case GEOMETRY_SHAPE.FIVEEDGES:
					solidGeometry = new _FiveEdgesJs2['default'](102);
					break;
				// 五角星
				case GEOMETRY_SHAPE.STAR:
					solidGeometry = new _StarShape2['default'](213);
					break;
				/**
     * 正方形
     */
				case GEOMETRY_SHAPE.SQUARE:
					{

						solidGeometry = new _SquareShapeJs2['default'](200);
					}
					break;
				/**
     * 长方形
     */
				case GEOMETRY_SHAPE.RECTANGULARCUBE:
					{
						solidGeometry = new _RectangularCubeJs2['default'](250, 200);
					}
					break;

				/**
     * 等边三角形
     */
				case GEOMETRY_SHAPE.EQUILATERALTRIANGLE:
					{
						solidGeometry = new _EquilateralTriangleJs2['default'](250);
					}
					break;
				/**
     * 等腰三角形
     */
				case GEOMETRY_SHAPE.ISOSCELESTRIANGLE:
					{
						solidGeometry = new _IsoscelesTriangleJs2['default'](430, 294);
					}
					break;
				/**
     * 直角三角形
     */
				case GEOMETRY_SHAPE.RIGHTTRIANGLE:
					{
						solidGeometry = new _RightTriangleJs2['default'](450 * Math.tan(Math.PI / 6), 450);
					}
					break;
				/**
     * 平行四边形
     */
				case GEOMETRY_SHAPE.PARALLELOGRAM:
					{
						solidGeometry = new _ParallelogramShapeJs2['default'](280);
					}
					break;
				/**
     * 菱形
     */
				case GEOMETRY_SHAPE.RHOMBUS:
					{
						solidGeometry = new _RhombusShapeJs2['default'](280);
					}

					break;

				/**
     * 顿角三角形
     */
				case GEOMETRY_SHAPE.OBTUSETRIANGLE:
					{
						solidGeometry = new _ObtuseTriangleJs2['default'](500);
					}
					break;

				/**
     * 锐角三角形
     */
				case GEOMETRY_SHAPE.ACUTETRIANGLE:
					{
						solidGeometry = new _AcuteTriangleJs2['default'](300);
					}
					break;

				/**
     * 圆形
     */
				case GEOMETRY_SHAPE.CIRCLE:
					{
						solidGeometry = new _CircleShape2['default'](120);
					}
					break;

				/**
     * 扇形
     */
				case GEOMETRY_SHAPE.SECTOR:
					{
						solidGeometry = new _SectorShape2['default'](120, Math.PI * 2 / 3);
					}
					break;
				/**
     * 椭圆
     */
				case GEOMETRY_SHAPE.ELLIPSE:
					{
						solidGeometry = new _EllipseShape2['default'](200, 120);
					}
					break;
				/**
     * 扇形2
     */
				case GEOMETRY_SHAPE.SECTOR2:
					{
						solidGeometry = new _Sector2ShapeJs2['default'](80, 160, Math.PI * 2 / 3);
					}

					break;
				default:
					break;
			}

			return solidGeometry;
		}

		/***/
	},
	/* 25 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var RectangularCube = function (_BaseThreeShape) {
			_inherits(RectangularCube, _BaseThreeShape);

			function RectangularCube(x, y) {
				var name = arguments.length <= 2 || arguments[2] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.RECTANGULARCUBE : arguments[2];

				_classCallCheck(this, RectangularCube);

				_get(Object.getPrototypeOf(RectangularCube.prototype), 'constructor', this).call(this, name);
				this.x = x;
				this.y = y;
			}

			_createClass(RectangularCube, [{
				key: 'getShape',
				value: function getShape() {
					var squareShape = new THREE.Shape();
					var pWidth = this.x / 2;
					var pheight = this.y / 2;
					squareShape.moveTo(-pWidth, -pheight);
					squareShape.lineTo(this.x - pWidth, -pheight);
					squareShape.lineTo(this.x - pWidth, this.y - pheight);
					squareShape.lineTo(-pWidth, this.y - pheight);
					squareShape.moveTo(-pWidth, -pheight);
					return squareShape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1], [1, 2]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[2, 3, 0]];
				}
			}]);

			return RectangularCube;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = RectangularCube;
		module.exports = exports['default'];

		/***/
	},
	/* 26 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _get = function get(_x, _x2, _x3) {
			var _again = true;_function: while (_again) {
				var object = _x,
				    property = _x2,
				    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _RectangularCubeJs = __webpack_require__(25);

		var _RectangularCubeJs2 = _interopRequireDefault(_RectangularCubeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var SquareShape = function (_RectangularCube) {
			_inherits(SquareShape, _RectangularCube);

			function SquareShape(size) {
				_classCallCheck(this, SquareShape);

				_get(Object.getPrototypeOf(SquareShape.prototype), 'constructor', this).call(this, size, size, _ShapeFactoryJs.GEOMETRY_SHAPE.SQUARE);
				this.canTransform = false;
			}

			return SquareShape;
		}(_RectangularCubeJs2['default']);

		exports['default'] = SquareShape;
		module.exports = exports['default'];

		/***/
	},
	/* 27 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		/*
   * 平行四边形，默认角度45
   */

		var ParallelogramShape = function (_BaseThreeShape) {
			_inherits(ParallelogramShape, _BaseThreeShape);

			function ParallelogramShape(length) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.PARALLELOGRAM : arguments[1];

				_classCallCheck(this, ParallelogramShape);

				_get(Object.getPrototypeOf(ParallelogramShape.prototype), 'constructor', this).call(this, name);
				this.length = length;
			}

			_createClass(ParallelogramShape, [{
				key: 'getShape',
				value: function getShape() {
					var x = 0;
					var y = 0;
					var width = this.length * Math.sin(Math.PI / 4);
					var height = this.length * Math.sin(Math.PI / 4);
					//角度45
					var pWidth = this.length * Math.sin(Math.PI / 4) * 3 / 2;
					var pHeight = this.length * Math.sin(Math.PI / 4) / 2;
					var triangleShape = new THREE.Shape();
					triangleShape.moveTo(x - pWidth, y - pHeight);
					triangleShape.lineTo(x + width * 2 - pWidth, y - pHeight);
					triangleShape.lineTo(x + width * 3 - pWidth, y + height - pHeight);
					triangleShape.lineTo(x + width - pWidth, y + height - pHeight);
					triangleShape.lineTo(x - pWidth, y - pHeight);
					return triangleShape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1], [1, 2]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 3]];
				}
			}]);

			return ParallelogramShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = ParallelogramShape;
		module.exports = exports['default'];

		/***/
	},
	/* 28 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var StarShape = function (_BaseThreeShape) {
			_inherits(StarShape, _BaseThreeShape);

			function StarShape(radius) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.STAR : arguments[1];

				_classCallCheck(this, StarShape);

				_get(Object.getPrototypeOf(StarShape.prototype), 'constructor', this).call(this, name);
				this.radius = radius;
				this.canTransform = false;
			}

			_createClass(StarShape, [{
				key: 'getShape',
				value: function getShape() {
					var shape = new THREE.Shape();
					var alpha = 2 * Math.PI / 10;
					for (var i = 10; i >= 0; i--) {
						var r = this.radius * (i % 2 + 0.6181) / 2;
						var omega = alpha * i + Math.PI / 5;
						if (i == 10) {
							shape.moveTo(r * Math.sin(omega), r * Math.cos(omega));
						} else {
							shape.lineTo(r * Math.sin(omega), r * Math.cos(omega));
						}
					}
					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[9, 0]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2]];
				}
			}]);

			return StarShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = StarShape;
		module.exports = exports['default'];

		/***/
	},
	/* 29 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x3, _x4, _x5) {
			var _again = true;_function: while (_again) {
				var object = _x3,
				    property = _x4,
				    receiver = _x5;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x3 = parent;_x4 = property;_x5 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		//正则四边形

		var QuadrangleShape = function (_BaseThreeShape) {
			_inherits(QuadrangleShape, _BaseThreeShape);

			function QuadrangleShape(length) {
				var typeName = arguments.length <= 1 || arguments[1] === undefined ? 'LX' : arguments[1];
				var name = arguments.length <= 2 || arguments[2] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.QUADRANGLE : arguments[2];

				_classCallCheck(this, QuadrangleShape);

				_get(Object.getPrototypeOf(QuadrangleShape.prototype), 'constructor', this).call(this, name);
				this.length = length;
				this.typeName = typeName;
			}

			_createClass(QuadrangleShape, [{
				key: 'getShape',
				value: function getShape() {

					var triangleShape = new THREE.Shape();

					switch (this.typeName) {
						case 'ZFX':
							{
								//偏移点x
								var pWidth = this.length / 2;
								//偏移点y
								var pHeight = this.length / 2;
								//有四个点组成的正方形，默认点为（0,0）
								var x = 0;
								var y = 0;
								triangleShape.moveTo(x - pWidth, y - pHeight);
								triangleShape.lineTo(this.length - pWidth, y - pHeight);
								triangleShape.lineTo(this.length - pWidth, this.length - pHeight);
								triangleShape.lineTo(x - pWidth, this.length - pHeight);
								triangleShape.lineTo(x - pWidth, y - pHeight);
							}
							break;
						case 'CFX':
							{
								//长方形的长度宽度为200，长度为宽度的5/4

								var width = this.length * 5.0 / 4;
								var _height = this.length;
								//偏移点x
								var pWidth = width / 2;
								//偏移点y
								var pHeight = _height / 2;
								//有四个点组成的长方形，默认点为（0,0）
								var x = 0;
								var y = 0;
								triangleShape.moveTo(x - pWidth, y - pHeight);
								triangleShape.lineTo(x + width - pWidth, y - pHeight);
								triangleShape.lineTo(x + width - pWidth, y + _height - pHeight);
								triangleShape.lineTo(x - pWidth, y + _height - pHeight);
								triangleShape.lineTo(x - pWidth, y - pHeight);
							}

							break;
						case 'PXSBX':
							{
								var x = 0;
								var y = 0;
								var width = this.length * Math.sin(Math.PI / 4);
								var _height2 = this.length * Math.sin(Math.PI / 4);
								//角度为45度
								var pWidth = this.length * Math.sin(Math.PI / 4);
								var pHeight = this.length * Math.sin(Math.PI / 4) / 2;
								triangleShape.moveTo(x - pWidth, y - pHeight);
								triangleShape.lineTo(x + width - pWidth, y - pHeight);
								triangleShape.lineTo(x + width * 2 - pWidth, y + _height2 - pHeight);
								triangleShape.lineTo(x + width - pWidth, y + _height2 - pHeight);
								triangleShape.lineTo(x - pWidth, y - pHeight);
							}
							break;
						case 'LX':
							{
								var x = 0;
								var y = 0;
								var width = this.length / 2.0;
								var heigth = this.length * Math.sin(Math.PI / 3);
								var pHeight = 0;
								var pWidth = this.length / 2.0;
								triangleShape.moveTo(x - pWidth, y - pHeight);
								triangleShape.lineTo(x + width - pWidth, y - pHeight);
								triangleShape.lineTo(x + width * 2 - pWidth, y + height - pHeight);
								triangleShape.lineTo(x + width - pWidth, y + height - pHeight);
								triangleShape.lineTo(x - pWidth, y - pHeight);
							}
							break;
						default:
							break;
					}

					return triangleShape;
				}
			}]);

			return QuadrangleShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = QuadrangleShape;
		module.exports = exports['default'];

		/***/
	},
	/* 30 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var EquilateralTriangle = function (_BaseThreeShape) {
			_inherits(EquilateralTriangle, _BaseThreeShape);

			//length 等边三角形边长

			function EquilateralTriangle(length) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.EQUILATERALTRIANGLE : arguments[1];

				_classCallCheck(this, EquilateralTriangle);

				_get(Object.getPrototypeOf(EquilateralTriangle.prototype), 'constructor', this).call(this, name);
				this.length = length;
				this.canTransform = false;
			}

			_createClass(EquilateralTriangle, [{
				key: 'getShape',
				value: function getShape() {
					var shape = new THREE.Shape();

					//radius 外接圆半径
					var radius = this.length / 2 / Math.cos(Math.PI / 6);
					shape.moveTo(-this.length / 2, -radius / 2);
					shape.lineTo(this.length / 2, -radius / 2);
					shape.lineTo(0, radius);

					shape.lineTo(-this.length / 2, -radius / 2);

					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 0], [2, 0, 1]];
				}
			}]);

			return EquilateralTriangle;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = EquilateralTriangle;
		module.exports = exports['default'];

		/***/
	},
	/* 31 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var IsoscelesTriangle = function (_BaseThreeShape) {
			_inherits(IsoscelesTriangle, _BaseThreeShape);

			//waistLength 等腰三角形腰长 bottomLength 等腰三角形底边长

			function IsoscelesTriangle(waistLength, bottomLength) {
				var name = arguments.length <= 2 || arguments[2] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.ISOSCELESTRIANGLE : arguments[2];

				_classCallCheck(this, IsoscelesTriangle);

				_get(Object.getPrototypeOf(IsoscelesTriangle.prototype), 'constructor', this).call(this, name);
				this.waistLength = waistLength;
				this.bottomLength = bottomLength;
			}

			_createClass(IsoscelesTriangle, [{
				key: 'getShape',
				value: function getShape() {
					var shape = new THREE.Shape();

					//底边上的高
					var height = Math.sqrt(Math.pow(this.waistLength, 2) - Math.pow(this.bottomLength / 2, 2));
					//重心
					var centerX = this.bottomLength / 2;
					var centerY = height / 3;

					shape.moveTo(centerX, -centerY);
					shape.lineTo(0, height - centerY);
					shape.lineTo(-centerX, -centerY);
					shape.lineTo(centerX, -centerY);

					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[2, 0], [1, 2]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 0], [2, 0, 1]];
				}
			}]);

			return IsoscelesTriangle;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = IsoscelesTriangle;
		module.exports = exports['default'];

		/***/
	},
	/* 32 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var RightTriangle = function (_BaseThreeShape) {
			_inherits(RightTriangle, _BaseThreeShape);

			//lenghth1 直角三角形直角边1 lenghth2 直角三角形直角边2

			function RightTriangle(lenghth1, lenghth2) {
				var name = arguments.length <= 2 || arguments[2] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.RIGHTTRIANGLE : arguments[2];

				_classCallCheck(this, RightTriangle);

				_get(Object.getPrototypeOf(RightTriangle.prototype), 'constructor', this).call(this, name);
				this.lenghth1 = lenghth1;
				this.lenghth2 = lenghth2;
			}

			_createClass(RightTriangle, [{
				key: 'getShape',
				value: function getShape() {
					var shape = new THREE.Shape();

					//底边上的高
					var height = Math.sqrt(Math.pow(this.waistLength, 2) - Math.pow(this.bottomLength / 2, 2));
					//重心
					var centerX = this.lenghth1 / 3;
					var centerY = this.lenghth2 / 3;

					shape.moveTo(this.lenghth1 - centerX, -centerY);
					shape.lineTo(-centerX, this.lenghth2 - centerY);
					shape.lineTo(-centerX, -centerY);
					shape.lineTo(this.lenghth1 - centerX, -centerY);

					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[2, 0], [1, 2], [0, 1]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 0], [2, 0, 1]];
				}
			}]);

			return RightTriangle;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = RightTriangle;
		module.exports = exports['default'];

		/***/
	},
	/* 33 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by chengchangxiong on 2015/11/18.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var _UtilsDrawContextJs = __webpack_require__(10);

		var _UtilsDrawContextJs2 = _interopRequireDefault(_UtilsDrawContextJs);

		/*
   钝角三角形，最大角为120度，length为对应边长
   */

		var ObtuseTriangle = function (_BaseThreeShape) {
			_inherits(ObtuseTriangle, _BaseThreeShape);

			function ObtuseTriangle(length) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.OBTUSETRIANGLE : arguments[1];

				_classCallCheck(this, ObtuseTriangle);

				_get(Object.getPrototypeOf(ObtuseTriangle.prototype), 'constructor', this).call(this, name);
				this.length = length;
				this.canTransform = false;
			}

			_createClass(ObtuseTriangle, [{
				key: 'getShape',
				value: function getShape() {
					var theMinLine = this.length;
					var p_a = new THREE.Vector2(0, 0);
					var p_o = new THREE.Vector2(theMinLine * Math.cos(30 / 180 * Math.PI), theMinLine / 2);
					var p_b = new THREE.Vector2(theMinLine / 2 - 26.8, 0);
					var shape = new THREE.Shape();
					shape.moveTo(p_a.x, p_a.y);
					shape.lineTo(p_o.x, p_o.y);
					shape.lineTo(p_b.x, p_b.y);
					shape.lineTo(p_a.x, p_a.y);
					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[2, 0], [1, 2], [0, 1]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 0], [2, 0, 1]];
				}
			}]);

			return ObtuseTriangle;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = ObtuseTriangle;
		module.exports = exports['default'];

		/***/
	},
	/* 34 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by chengchangxiong on 2015/11/18.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsGetAngleJs = __webpack_require__(18);

		var _UtilsGetAngleJs2 = _interopRequireDefault(_UtilsGetAngleJs);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		/*
   锐角三角形
   */

		var AcuteTriangle = function (_BaseThreeShape) {
			_inherits(AcuteTriangle, _BaseThreeShape);

			function AcuteTriangle(length) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.ACUTETRIANGLE : arguments[1];

				_classCallCheck(this, AcuteTriangle);

				_get(Object.getPrototypeOf(AcuteTriangle.prototype), 'constructor', this).call(this, name);
				this.length = length;
				this.canTransform = false;
			}

			_createClass(AcuteTriangle, [{
				key: 'getShape',
				value: function getShape() {
					var shape = new THREE.Shape();
					var theMaxLine = this.length; //最大边长度
					var p_a = new THREE.Vector2(0, 0);
					var p_o = new THREE.Vector2(theMaxLine * Math.cos(40 / 180 * Math.PI), theMaxLine * Math.sin(40 / 180 * Math.PI));
					var p_b = new THREE.Vector2(theMaxLine + 41, 0);
					shape.moveTo(p_a.x, p_a.y);
					shape.lineTo(p_o.x, p_o.y);
					shape.lineTo(p_b.x, p_b.y);
					shape.lineTo(p_a.x, p_a.y);
					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[2, 0], [1, 2], [0, 1]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 0], [2, 0, 1]];
				}
			}]);

			return AcuteTriangle;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = AcuteTriangle;
		module.exports = exports['default'];

		/***/
	},
	/* 35 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsGetAngleJs = __webpack_require__(18);

		var _UtilsGetAngleJs2 = _interopRequireDefault(_UtilsGetAngleJs);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var FiveEdges = function (_BaseThreeShape) {
			_inherits(FiveEdges, _BaseThreeShape);

			function FiveEdges(radius) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.FIVEEDGES : arguments[1];

				_classCallCheck(this, FiveEdges);

				_get(Object.getPrototypeOf(FiveEdges.prototype), 'constructor', this).call(this, name);
				this.radius = radius;
				this.canTransform = false;
			}

			_createClass(FiveEdges, [{
				key: 'getShape',
				value: function getShape() {
					var circle = new THREE.Shape();
					var segments = 5;
					var theta = undefined,
					    x = undefined,
					    y = undefined;
					for (var i = 0; i < segments; i++) {
						theta = (i + 1) / segments * Math.PI * 2.0 + Math.PI / 2;
						x = this.radius * Math.cos(theta);
						y = this.radius * Math.sin(theta);
						if (i == 0) {
							circle.moveTo(x, y);
						} else {
							circle.lineTo(x, y);
						}
					}
					return circle;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2]];
				}
			}]);

			return FiveEdges;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = FiveEdges;
		module.exports = exports['default'];

		/***/
	},
	/* 36 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsGetAngleJs = __webpack_require__(18);

		var _UtilsGetAngleJs2 = _interopRequireDefault(_UtilsGetAngleJs);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var SixEdges = function (_BaseThreeShape) {
			_inherits(SixEdges, _BaseThreeShape);

			function SixEdges(radius) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.SIXEDGES : arguments[1];

				_classCallCheck(this, SixEdges);

				_get(Object.getPrototypeOf(SixEdges.prototype), 'constructor', this).call(this, name);
				this.radius = radius;
				this.canTransform = false;
			}

			_createClass(SixEdges, [{
				key: 'getShape',
				value: function getShape() {
					var circle = new THREE.Shape();
					var segments = 6;
					var theta = undefined,
					    x = undefined,
					    y = undefined;
					for (var i = 0; i < segments; i++) {
						theta = (i + 1) / segments * Math.PI * 2.0;
						x = this.radius * Math.cos(theta);
						y = this.radius * Math.sin(theta);
						if (i == 0) {
							circle.moveTo(x, y);
						} else {
							circle.lineTo(x, y);
						}
					}
					return circle;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2]];
				}
			}]);

			return SixEdges;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = SixEdges;
		module.exports = exports['default'];

		/***/
	},
	/* 37 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var CircleShape = function (_BaseThreeShape) {
			_inherits(CircleShape, _BaseThreeShape);

			function CircleShape(radius) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.CIRCLE : arguments[1];

				_classCallCheck(this, CircleShape);

				_get(Object.getPrototypeOf(CircleShape.prototype), 'constructor', this).call(this, name);
				this.radius = radius;
				this.canTransform = false;
			}

			_createClass(CircleShape, [{
				key: 'getCurveSegments',
				value: function getCurveSegments() {
					return 300;
				}
			}, {
				key: 'getShape',
				value: function getShape() {

					var CircleShape = new THREE.Shape();

					for (var i = 0; i <= 64; i++) {
						var rx = this.radius;
						var ry = this.radius;
						var theta = i / 64 * Math.PI * 2;
						if (i == 0) {
							CircleShape.moveTo(rx * Math.cos(theta), ry * Math.sin(theta));
						} else {
							CircleShape.lineTo(rx * Math.cos(theta), ry * Math.sin(theta));
						}
					}
					return CircleShape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[-1, 0]];
				}
			}]);

			return CircleShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = CircleShape;
		module.exports = exports['default'];

		/***/
	},
	/* 38 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var SectorShape = function (_BaseThreeShape) {
			_inherits(SectorShape, _BaseThreeShape);

			function SectorShape(radius, angle) {
				var name = arguments.length <= 2 || arguments[2] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.SECTOR : arguments[2];

				_classCallCheck(this, SectorShape);

				_get(Object.getPrototypeOf(SectorShape.prototype), 'constructor', this).call(this, name);
				this.radius = radius;
				this.angle = angle;
				this.canTransform = false;
			}

			_createClass(SectorShape, [{
				key: 'getCurveSegments',
				value: function getCurveSegments() {
					return 64;
				}
			}, {
				key: 'getShape',
				value: function getShape() {
					var SectorShape = new THREE.Shape();
					SectorShape.moveTo(0, 0);
					for (var i = 0; i <= 64; i++) {
						var r = this.radius;
						var theta = i / 64 * this.angle;
						SectorShape.lineTo(r * Math.cos(theta), r * Math.sin(theta));
					}
					return SectorShape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[64, 65]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[64, 65, 0]];
				}
			}]);

			return SectorShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = SectorShape;
		module.exports = exports['default'];

		/***/
	},
	/* 39 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var EllipseShape = function (_BaseThreeShape) {
			_inherits(EllipseShape, _BaseThreeShape);

			function EllipseShape(radiusX, radiusY) {
				var name = arguments.length <= 2 || arguments[2] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.ELLIPSE : arguments[2];

				_classCallCheck(this, EllipseShape);

				_get(Object.getPrototypeOf(EllipseShape.prototype), 'constructor', this).call(this, name);
				this.radiusX = radiusX;
				this.radiusY = radiusY;
			}

			_createClass(EllipseShape, [{
				key: 'getCurveSegments',
				value: function getCurveSegments() {
					return 300;
				}
			}, {
				key: 'getShape',
				value: function getShape() {

					var EllipseShape = new THREE.Shape();
					for (var i = 0; i <= 128; i++) {
						var rx = this.radiusX;
						var ry = this.radiusY;
						var theta = i / 128 * Math.PI * 2;
						if (i == 0) {
							EllipseShape.moveTo(rx * Math.cos(theta), ry * Math.sin(theta));
						} else {
							EllipseShape.lineTo(rx * Math.cos(theta), ry * Math.sin(theta));
						}
					}
					return EllipseShape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[-1, 96], [0, -1]];
				}
			}]);

			return EllipseShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = EllipseShape;
		module.exports = exports['default'];

		/***/
	},
	/* 40 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var IsoscelesTrapezoid = function (_BaseThreeShape) {
			_inherits(IsoscelesTrapezoid, _BaseThreeShape);

			function IsoscelesTrapezoid(upLength, heightLength, bottomLength) {
				var name = arguments.length <= 3 || arguments[3] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.ISOSCELESTRAPEZOID : arguments[3];

				_classCallCheck(this, IsoscelesTrapezoid);

				_get(Object.getPrototypeOf(IsoscelesTrapezoid.prototype), 'constructor', this).call(this, name);
				this.upLength = upLength;
				this.heightLength = heightLength;
				this.bottomLength = bottomLength;
			}

			_createClass(IsoscelesTrapezoid, [{
				key: 'getShape',
				value: function getShape() {

					var shape = new THREE.Shape();

					var halfBottomLength = this.bottomLength / 2;
					var halfHeight = this.heightLength / 2;
					var halfUpLength = this.upLength / 2;

					shape.moveTo(-halfBottomLength, -halfHeight);
					shape.lineTo(halfBottomLength, -halfHeight);
					shape.lineTo(halfUpLength, halfHeight);
					shape.lineTo(-halfUpLength, halfHeight);
					shape.lineTo(-halfBottomLength, -halfHeight);

					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1], [1, 2], [2, 3]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[3, 0, 1], [1, 2, 3]];
				}
			}]);

			return IsoscelesTrapezoid;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = IsoscelesTrapezoid;
		module.exports = exports['default'];

		/***/
	},
	/* 41 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var RightTrapezoid = function (_BaseThreeShape) {
			_inherits(RightTrapezoid, _BaseThreeShape);

			function RightTrapezoid(upLength, heightLength, bottomLength) {
				var name = arguments.length <= 3 || arguments[3] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.RIGHTTRAPEZOID : arguments[3];

				_classCallCheck(this, RightTrapezoid);

				_get(Object.getPrototypeOf(RightTrapezoid.prototype), 'constructor', this).call(this, name);
				this.upLength = upLength; //上边
				this.heightLength = heightLength; //高
				this.bottomLength = bottomLength; //底边
			}

			_createClass(RightTrapezoid, [{
				key: 'getShape',
				value: function getShape() {

					var shape = new THREE.Shape();

					var halfUpLength = this.upLength / 2;
					var halfHeight = this.heightLength / 2;
					var bottomRight = halfUpLength;
					var bottomLeft = this.bottomLength - halfUpLength;

					//shape.moveTo(-halfUpLength, halfHeight);
					shape.moveTo(-bottomLeft, -halfHeight);
					shape.lineTo(bottomRight, -halfHeight);
					shape.lineTo(halfHeight, halfUpLength);
					shape.lineTo(-halfUpLength, halfUpLength);
					shape.lineTo(-bottomLeft, -halfHeight);
					return shape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1], [1, 2], [2, 3], [3, 0]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[3, 0, 1], [1, 2, 3], [2, 3, 0]];
				}
			}]);

			return RightTrapezoid;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = RightTrapezoid;
		module.exports = exports['default'];

		/***/
	},
	/* 42 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		/*
   * 菱形
   */

		var RhombusShape = function (_BaseThreeShape) {
			_inherits(RhombusShape, _BaseThreeShape);

			function RhombusShape(length) {
				var name = arguments.length <= 1 || arguments[1] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.RHOMBUS : arguments[1];

				_classCallCheck(this, RhombusShape);

				_get(Object.getPrototypeOf(RhombusShape.prototype), 'constructor', this).call(this, name);
				this.length = length;
			}

			_createClass(RhombusShape, [{
				key: 'getShape',
				value: function getShape() {
					var x = 0;
					var y = 0;
					var width = this.length / 2.0;
					var heigth = this.length * Math.sin(Math.PI / 3);
					var pHeight = 0;
					var pWidth = this.length / 2.0;
					var triangleShape = new THREE.Shape();
					triangleShape.moveTo(x - pWidth, y - pHeight);
					triangleShape.lineTo(x + width - pWidth, y - heigth - pHeight);
					triangleShape.lineTo(x + width * 2 - pWidth, y - pHeight);
					triangleShape.lineTo(x + width - pWidth, y + heigth - pHeight);
					triangleShape.lineTo(x - pWidth, y - pHeight);
					return triangleShape;
				}
			}, {
				key: 'getLengthVertices',
				value: function getLengthVertices() {
					return [[0, 1], [1, 2]];
				}
			}, {
				key: 'getAngleVertices',
				value: function getAngleVertices() {
					return [[0, 1, 2], [1, 2, 3]];
				}
			}]);

			return RhombusShape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = RhombusShape;
		module.exports = exports['default'];

		/***/
	},
	/* 43 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		var _get = function get(_x2, _x3, _x4) {
			var _again = true;_function: while (_again) {
				var object = _x2,
				    property = _x3,
				    receiver = _x4;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
					var parent = Object.getPrototypeOf(object);if (parent === null) {
						return undefined;
					} else {
						_x2 = parent;_x3 = property;_x4 = receiver;_again = true;desc = parent = undefined;continue _function;
					}
				} else if ('value' in desc) {
					return desc.value;
				} else {
					var getter = desc.get;if (getter === undefined) {
						return undefined;
					}return getter.call(receiver);
				}
			}
		};

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== 'function' && superClass !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
			}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		}

		var _BaseThreeShapeJs = __webpack_require__(8);

		var _BaseThreeShapeJs2 = _interopRequireDefault(_BaseThreeShapeJs);

		var _ShapeFactoryJs = __webpack_require__(24);

		var _UtilsDrawArcJs = __webpack_require__(17);

		var _UtilsDrawArcJs2 = _interopRequireDefault(_UtilsDrawArcJs);

		var Sector2Shape = function (_BaseThreeShape) {
			_inherits(Sector2Shape, _BaseThreeShape);

			function Sector2Shape(radius1, radius2, angle) {
				var name = arguments.length <= 3 || arguments[3] === undefined ? _ShapeFactoryJs.GEOMETRY_SHAPE.SECTOR : arguments[3];

				_classCallCheck(this, Sector2Shape);

				_get(Object.getPrototypeOf(Sector2Shape.prototype), 'constructor', this).call(this, name);
				this.radius1 = radius1;
				this.radius2 = radius2;
				this.angle = angle;
				this.shapePointsGeometry = null;
				this.canTransform = false;
			}

			_createClass(Sector2Shape, [{
				key: 'getShapePointsGeometry',
				value: function getShapePointsGeometry() {
					return this.shapePointsGeometry;
				}
			}, {
				key: 'getShape',
				value: function getShape() {
					var Sector2Shape = new THREE.Shape();
					var r2 = this.radius1;
					var r1 = this.radius2;
					var thetaStart = Math.PI / 4;
					var thetaEnd = Math.PI / 4 * 3;
					Sector2Shape.absarc(0, 0, r1, thetaStart, thetaEnd, true);
					Sector2Shape.lineTo(r2 * Math.cos(thetaEnd), r2 * Math.sin(thetaEnd));
					Sector2Shape.absarc(0, 0, r2, thetaEnd, thetaStart, true);
					Sector2Shape.lineTo(r1 * Math.cos(thetaStart), r1 * Math.sin(thetaStart));

					return Sector2Shape;
				}
			}, {
				key: 'getSpecificGeometry',
				value: function getSpecificGeometry() {
					var geometry = new THREE.Geometry();
					var division = 10;
					var r1 = this.radius1;
					var r2 = this.radius2;
					var thetaStart = Math.PI / 4;
					var thetaEnd = Math.PI / 4 * 3;
					var outerPath = new THREE.Shape();
					outerPath.absarc(0, -(r1 + r2) / 2, r2, thetaEnd, thetaStart, true);
					var outerPoints = outerPath.getPoints(division);
					outerPoints.splice(-1, 1);

					var innerPath = new THREE.Shape();
					innerPath.absarc(0, -(r1 + r2) / 2, r1, thetaEnd, thetaStart, true);
					var innerPoints = innerPath.getPoints(division);
					innerPoints.splice(-1, 1);

					for (var i = 0; i < outerPoints.length; i++) {
						geometry.vertices.push(new THREE.Vector3(outerPoints[i].x, outerPoints[i].y, 0));
					}
					for (var i = innerPoints.length - 1; i >= 0; i--) {
						geometry.vertices.push(new THREE.Vector3(innerPoints[i].x, innerPoints[i].y, 0));
					}
					var len = outerPoints.length;
					for (var i = 0; i < outerPoints.length - 1; i++) {
						geometry.faces.push(new THREE.Face3(i, 2 * len - 1 - i, 2 * len - i - 2, new THREE.Vector3(0, 0, 1), [], 0), new THREE.Face3(i, 2 * len - i - 2, 1 + i, new THREE.Vector3(0, 0, 1), [], 0));
					}

					geometry.computeFaceNormals();
					geometry.computeBoundingBox();

					return geometry;
				}
			}]);

			return Sector2Shape;
		}(_BaseThreeShapeJs2['default']);

		exports['default'] = Sector2Shape;
		module.exports = exports['default'];

		/***/
	},
	/* 44 */
	/***/function (module, exports) {

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		exports["default"] = function (dots) {
			var pointXGroup = [],
			    pointYGroup = [];

			var _iteratorNormalCompletion = true;
			var _didIteratorError = false;
			var _iteratorError = undefined;

			try {
				for (var _iterator = dots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
					var dot = _step.value;

					pointXGroup.push(dot.x);
					pointYGroup.push(dot.y);
				}
			} catch (err) {
				_didIteratorError = true;
				_iteratorError = err;
			} finally {
				try {
					if (!_iteratorNormalCompletion && _iterator["return"]) {
						_iterator["return"]();
					}
				} finally {
					if (_didIteratorError) {
						throw _iteratorError;
					}
				}
			}

			var minX = Math.min.apply(Math, pointXGroup),
			    maxX = Math.max.apply(Math, pointXGroup),
			    minY = Math.min.apply(Math, pointYGroup);

			return new THREE.Vector3((minX + maxX) / 2, minY, 0);
		};

		module.exports = exports["default"];

		/***/
	},
	/* 45 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _threeMangerJs = __webpack_require__(7);

		exports['default'] = function (oldObj, newObj) {
			if (!newObj) return;
			var parent = oldObj.parent;
			if (_threeMangerJs.intersectObjs.indexOf(oldObj) > -1) {
				var pos = _threeMangerJs.intersectObjs.indexOf(oldObj);
				_threeMangerJs.intersectObjs[pos] = newObj;
			}
			if (parent.data.dashedItems.indexOf(oldObj) > -1) {
				var pos = parent.data.dashedItems.indexOf(oldObj);
				parent.data.dashedItems.splice(pos, 1, newObj);
			}
			if (parent.data.angleItems.indexOf(oldObj) > -1) {
				var pos = parent.data.angleItems.indexOf(oldObj);
				parent.data.angleItems.splice(pos, 1, newObj);
			}
		};

		module.exports = exports['default'];

		/***/
	},
	/* 46 */
	/***/function (module, exports) {

		/**
   * Created by zhoujunzhou on 2015/11/25.
   */
		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		function createRotateShape() {
			var group = new THREE.Object3D();
			var line1 = createLine();
			line1.rotateZ(-Math.PI * 1 / 18);
			var line2 = createLine();
			line2.rotateZ(-Math.PI * 1 / 18 + Math.PI);
			group.add(line1);
			group.add(line2);

			return group;
		}

		function createLine() {
			var group = new THREE.Object3D();
			var curve = new THREE.EllipseCurve(0, 0, // ax, aY
			15, 15, // xRadius, yRadius
			0, Math.PI * 3 / 4, // aStartAngle, aEndAngle
			false // aClockwise
			);

			var points = curve.getSpacedPoints(20);
			var path = new THREE.Path();
			var arcgeometry = path.createGeometry(points);
			var material = new THREE.LineBasicMaterial({ color: 0xff0000 });
			var arcline = new THREE.Line(arcgeometry, material);
			group.add(arcline);

			var geometry = new THREE.Geometry();
			geometry.vertices.push(new THREE.Vector3(points[0].x - 4, points[0].y + 4, 0));
			geometry.vertices.push(new THREE.Vector3(points[0].x, points[0].y, 0));
			geometry.vertices.push(new THREE.Vector3(points[0].x + 4, points[0].y + 4, 0));
			var aline = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: 0xff0000 }));

			group.add(aline);

			return group;
		}

		exports["default"] = {
			createRotateShape: createRotateShape
		};
		module.exports = exports["default"];

		/***/
	},
	/* 47 */
	/***/function (module, exports) {

		/**
   * Created by zhoujunzhou on 2015/11/25.
   */

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		var GizmoMaterial2D = function GizmoMaterial2D(parameters) {

			THREE.MeshBasicMaterial.call(this);

			this.depthTest = false;
			this.depthWrite = false;
			this.side = THREE.FrontSide;
			this.transparent = true;

			this.setValues(parameters);

			this.oldColor = this.color.clone();
			this.oldOpacity = this.opacity;

			this.highlight = function (highlighted) {

				if (highlighted) {

					this.color.setRGB(1, 1, 0);
					this.opacity = 1;
				} else {

					this.color.copy(this.oldColor);
					this.opacity = this.oldOpacity;
				}
			};
		};

		GizmoMaterial2D.prototype = Object.create(THREE.MeshBasicMaterial.prototype);
		GizmoMaterial2D.prototype.constructor = GizmoMaterial2D;

		function createDotShape() {
			var dot = new THREE.Object3D();
			var geometry = new THREE.PlaneGeometry(0.35, 0.35);
			var tempShape = new THREE.Mesh(geometry, new GizmoMaterial2D({ depthTest: true, opacity: 0 }));

			var squareShape = new THREE.Shape();
			var halfLenght = 0.08 / 2.0;
			squareShape.moveTo(-halfLenght, -halfLenght);
			squareShape.lineTo(-halfLenght, halfLenght);
			squareShape.lineTo(halfLenght, halfLenght);
			squareShape.lineTo(halfLenght, -halfLenght);
			squareShape.lineTo(-halfLenght, -halfLenght);

			var points = squareShape.createPointsGeometry();
			var squareGeometry = new THREE.ShapeGeometry(squareShape);

			var squareMesh = new THREE.Mesh(squareGeometry, new GizmoMaterial2D({ color: 0xEBffff }));
			var line = new THREE.Line(points, new GizmoMaterial2D({ color: 0x76B5BF, depthTest: false }));
			dot.add(tempShape);
			dot.add(squareMesh);
			dot.add(line);
			return dot;
		}

		exports["default"] = {
			createDotShape: createDotShape
		};
		module.exports = exports["default"];

		/***/
	},
	/* 48 */
	/***/function (module, exports) {

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		exports["default"] = destroyThreeObject;

		function destroyThreeObject(object) {
			"use strict";

			if (!object) return;
			if (object.children && object.children.length > 0) {
				for (var i = 0; i < object.children.length; i++) {
					destroyThreeObject(object.children[i]);
				}
			}
			if (object.geometry) object.geometry.dispose();
			if (object.material) {
				object.material.dispose();
				if (object.material.map && object.material.map.dispose) object.material.map.dispose();
			}
			object = null;
		}

		module.exports = exports["default"];

		/***/
	},
	/* 49 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2015/12/17.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function (width, height, src, callback) {
			var image = null;
			var loader = new THREE.TextureLoader();
			loader.load(_presenter2['default'].path + '/resources/images/' + src, function (texture) {
				image = new THREE.MeshBasicMaterial({
					map: texture,
					depthTest: true
				});

				var plane = new THREE.Mesh(new THREE.PlaneGeometry(width, height), image);
				plane.overdraw = true;
				callback(plane);
			}, function (xhr) {
				//console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
			}, function (xhr) {
				//console.log( 'An error happened' );
			});
		};

		module.exports = exports['default'];

		/***/
	},
	/* 50 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by wuyukun on 2015/12/19.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports.setCopyData = setCopyData;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _threeManger = __webpack_require__(7);

		var _setLineColor = __webpack_require__(51);

		var _setLineColor2 = _interopRequireDefault(_setLineColor);

		var _setLinewidth = __webpack_require__(52);

		var _setLinewidth2 = _interopRequireDefault(_setLinewidth);

		var _setMeshColor = __webpack_require__(53);

		var _setMeshColor2 = _interopRequireDefault(_setMeshColor);

		var _lengthAnotation = __webpack_require__(54);

		var _lengthAnotation2 = _interopRequireDefault(_lengthAnotation);

		var _angleAnotation = __webpack_require__(55);

		var _angleAnotation2 = _interopRequireDefault(_angleAnotation);

		var _constants = __webpack_require__(6);

		var _EventRemoveShapeJs = __webpack_require__(56);

		var _EventRemoveShapeJs2 = _interopRequireDefault(_EventRemoveShapeJs);

		var _EventSelectNextShapeJs = __webpack_require__(57);

		var _EventSelectNextShapeJs2 = _interopRequireDefault(_EventSelectNextShapeJs);

		var _hasAngle = __webpack_require__(58);

		var _hasAngle2 = _interopRequireDefault(_hasAngle);

		var _hasLength = __webpack_require__(59);

		var _hasLength2 = _interopRequireDefault(_hasLength);

		var toolbarHeight = 179;
		var toolbarWidth = 414;
		var horizonGap = 15;
		var verticalGap = 15;
		var popoverWidth = 660;
		var ColorMap = {
			black: 0x000000,
			white: 0xffffff,
			red: 0xfc5300,
			orange: 0xffa200,
			yellow: 0xffde00,
			green: 0x5ea700,
			blue: 0x37ADff,
			purple: 0xa41fd0
		};
		exports['default'] = {
			init: init,
			setToolbarPosition: setToolbarPosition,
			refreshToolbar: refreshToolbar,
			showToolbar: showToolbar,
			hideToolbar: hideToolbar
		};

		function init() {
			var $toolBar = $(_presenter2['default'].view).find('.js-toolbar');
			if (!/AppleWebKit.*Mobile/i.test(navigator.userAgent)) {
				$(_presenter2['default'].view).prepend($('<style type="text/css">.addon_DJ2DTool .toolbar-item:hover {background: #11B0B6; } .addon_DJ2DTool .toolbar-item:hover img {margin-top: 1px;width: 32px;height: 32px; }</style>'));
			}
			$toolBar.children('.popover-color').webuiPopover({
				url: $(_presenter2['default'].view).find('.color-area'),
				style: 'inverse',
				padding: false,
				onShow: function onShow() {
					var curMeshColor = _threeManger.intersectObjs.current.data.ToolBar_MeshColor;
					var $popoverColorSelect = $('#' + $(_presenter2['default'].view).find('.popover-color').attr('data-target')).find('.popover-area').find('.btn-color');
					if (curMeshColor) {
						$popoverColorSelect.each(function () {
							if ($(this).attr('data-color') == curMeshColor) $(this).addClass('on');else $(this).removeClass('on');
						});
					} else {
						//默认黄色yellow
						$popoverColorSelect.removeClass('on');
						$popoverColorSelect.eq(3).addClass('on');
					}
					$popoverColorSelect.click(function () {
						_threeManger.intersectObjs.current.data.ToolBar_MeshColor = $(this).attr('data-color');
						$(_presenter2['default'].view).find('.js-toolbar').find('.popover-color').find('img').attr('src', _presenter2['default'].path + 'resources/images/fill_' + $(this).attr('data-color') + '.png');
						$(this).siblings().removeClass('on');
						$(this).addClass('on');
						(0, _setMeshColor2['default'])({
							group: _threeManger.intersectObjs.current,
							color: new THREE.Color(ColorMap[$(this).attr('data-color')])
						});
					});
				},
				onHide: function onHide() {
					$('#' + $(_presenter2['default'].view).find('.popover-color').attr('data-target')).find('.popover-area').find('.btn-color').off('click');
				}
			});
			$toolBar.children('.popover-border').webuiPopover({
				url: $(_presenter2['default'].view).find('.border-area'),
				style: 'inverse',
				padding: false,
				onShow: function onShow() {
					var $popoverBorderSelect = $('#' + $(_presenter2['default'].view).find('.popover-border').attr('data-target')).find('.border-area');
					var curLineColor = _threeManger.intersectObjs.current.data.ToolBar_LineColor,
					    curBorderWidth = _threeManger.intersectObjs.current.data.ToolBar_BorderWidth;
					if (curLineColor) {
						$popoverBorderSelect.find('.btn-color').each(function () {
							if ($(this).attr('data-color') == curLineColor) $(this).addClass('on');else $(this).removeClass('on');
						});
					} else {
						//默认黑色black
						$popoverBorderSelect.find('.btn-color').removeClass('on');
						$popoverBorderSelect.find('.btn-color').eq(0).addClass('on');
					}
					if (curBorderWidth) {
						$popoverBorderSelect.find('.image-line').each(function () {
							if ($(this).attr('data-border-width') == curBorderWidth) $(this).addClass('on');else $(this).removeClass('on');
						});
					} else {
						$popoverBorderSelect.find('.image-line').removeClass('on');
						//默认线形1
						$popoverBorderSelect.find('.image-line').eq(0).addClass('on');
					}

					$popoverBorderSelect.find('.btn-color,.image-line').click(function () {
						if ($(this).hasClass('btn-color')) {
							_threeManger.intersectObjs.current.data.ToolBar_LineColor = $(this).attr('data-color');
							$(_presenter2['default'].view).find('.js-toolbar').find('.popover-border').find('img').attr('src', _presenter2['default'].path + 'resources/images/border_' + $(this).attr('data-color') + '.png');
							(0, _setLineColor2['default'])({
								group: _threeManger.intersectObjs.current,
								color: ColorMap[$(this).attr('data-color')]
							});
						} else {
							_threeManger.intersectObjs.current.data.ToolBar_BorderWidth = $(this).attr('data-border-width');
							(0, _setLinewidth2['default'])({
								group: _threeManger.intersectObjs.current,
								lineWidth: new Number($(this).attr('data-border-width'))
							});
						}
						$(this).siblings().removeClass('on');
						$(this).addClass('on');
					});
				},
				onHide: function onHide() {
					$('#' + $(_presenter2['default'].view).find('.popover-border').attr('data-target')).find('.border-area').find('.btn-color,.image-line').off('click');
				}
			});
			$toolBar.children('.toogle-len').click(function (e) {
				e.stopPropagation();
				hidePopover();
				if ((0, _lengthAnotation2['default'])(_threeManger.intersectObjs.current, !_threeManger.intersectObjs.current.data.ToolBar_LenVisiability)) {
					_threeManger.intersectObjs.current.data.ToolBar_LenVisiability = !_threeManger.intersectObjs.current.data.ToolBar_LenVisiability;
					$(this).find('span').text(_threeManger.intersectObjs.current.data.ToolBar_LenVisiability ? _presenter2['default'].i18n['hide_length'] : _presenter2['default'].i18n['show_length']);
				}
			});
			$toolBar.children('.toogle-angle').click(function (e) {
				e.stopPropagation();
				hidePopover();
				if ((0, _angleAnotation2['default'])(_threeManger.intersectObjs.current, !_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability)) {
					_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability = !_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability;
					$(this).find('span').text(_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability ? _presenter2['default'].i18n['hide_angle'] : _presenter2['default'].i18n['show_angle']);
				}
			});
			// 复制图形
			$toolBar.children('.copy').click(function () {
				var selfScale = _threeManger.intersectObjs.current.selfScale.clone();
				var lineWidth = _threeManger.intersectObjs.current.getObjectByName(_constants.SHAPE_PART.BOARDER).lineWidth;
				var meshColor = _threeManger.intersectObjs.current.getObjectByName(_constants.SHAPE_PART.MESH).material.color.clone();
				var boarderColor = _threeManger.intersectObjs.current.getObjectByName(_constants.SHAPE_PART.BOARDER).material.color.clone();
				var lengthMesh = _threeManger.intersectObjs.current.getObjectByName(_constants.SHAPE_PART.LENGTH);
				var angleMesh = _threeManger.intersectObjs.current.getObjectByName(_constants.SHAPE_PART.ANGLE);
				var showLength = lengthMesh ? lengthMesh.visible : false;
				var showAngle = angleMesh ? angleMesh.visible : false;
				var rotate = _threeManger.intersectObjs.current.rotation.clone();
				var meshColorData = _threeManger.intersectObjs.current.data.ToolBar_LineColor;
				var boarderColorData = _threeManger.intersectObjs.current.data.ToolBar_MeshColor;

				if (window.player) {
					window.player.addTool('PlaneGeometry', {
						type: _threeManger.intersectObjs.current.name,
						data: {
							selfScale: selfScale,
							lineWidth: lineWidth,
							meshColor: meshColor,
							boarderColor: boarderColor,
							lengthMesh: lengthMesh,
							angleMesh: angleMesh,
							showLength: showLength,
							showAngle: showAngle,
							rotate: rotate,
							meshColorData: meshColorData,
							boarderColorData: boarderColorData
						}
					});
				} else {
					if (_presenter2['default'].handleCallBack({ value: _threeManger.intersectObjs.current.name }) === null) {
						return;
					}
					(0, _setLineColor2['default'])({ group: _threeManger.intersectObjs.current, color: meshColor });
					(0, _setMeshColor2['default'])({ group: _threeManger.intersectObjs.current, color: boarderColor });
					(0, _setLinewidth2['default'])({ group: _threeManger.intersectObjs.current, lineWidth: lineWidth });
					_threeManger.intersectObjs.current.data.ToolBar_LineColor = meshColorData;
					_threeManger.intersectObjs.current.data.ToolBar_MeshColor = boarderColorData;
					_threeManger.intersectObjs.current.data.ToolBar_BorderWidth = lineWidth;
					if (showLength) {
						if ((0, _lengthAnotation2['default'])(_threeManger.intersectObjs.current, !_threeManger.intersectObjs.current.data.ToolBar_LenVisiability)) {
							_threeManger.intersectObjs.current.data.ToolBar_LenVisiability = !_threeManger.intersectObjs.current.data.ToolBar_LenVisiability;
							$(_presenter2['default'].view).find('.toogle-len').find('span').text(_threeManger.intersectObjs.current.data.ToolBar_LenVisiability ? _presenter2['default'].i18n['hide_length'] : _presenter2['default'].i18n['show_length']);
						}
					}
					if (showAngle) {
						if ((0, _angleAnotation2['default'])(_threeManger.intersectObjs.current, !_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability)) {
							_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability = !_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability;
							$(_presenter2['default'].view).find('.toogle-angle').find('span').text(_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability ? _presenter2['default'].i18n['hide_angle'] : _presenter2['default'].i18n['show_angle']);
						}
					}
					_threeManger.intersectObjs.current.rotation.copy(rotate);
					_threeManger.helperTool.setObjectScale(selfScale);
					refreshToolbar();
				}
			});
			//TODO 关闭当前图形
			$toolBar.children('.delete').click(function () {
				hidePopover();
				if (!_threeManger.intersectObjs.current) return;
				// 销毁当前选中的图形及相关附件
				(0, _EventRemoveShapeJs2['default'])(_threeManger.intersectObjs.current);
				(0, _EventSelectNextShapeJs2['default'])();
				//
				refreshToolbar();
			});
			$toolBar.children('.close').click(function () {
				_threeManger.helperTool.detach();
				hideToolbar();
			});
			hideToolbar();
		}

		function setCopyData(data) {
			(0, _setLineColor2['default'])({ group: _threeManger.intersectObjs.current, color: data.meshColor });
			(0, _setMeshColor2['default'])({ group: _threeManger.intersectObjs.current, color: data.boarderColor });
			(0, _setLinewidth2['default'])({ group: _threeManger.intersectObjs.current, lineWidth: data.lineWidth });
			_threeManger.intersectObjs.current.data.ToolBar_LineColor = data.meshColorData;
			_threeManger.intersectObjs.current.data.ToolBar_MeshColor = data.boarderColorData;
			_threeManger.intersectObjs.current.data.ToolBar_BorderWidth = data.lineWidth;
			if (data.showLength) {
				if ((0, _lengthAnotation2['default'])(_threeManger.intersectObjs.current, !_threeManger.intersectObjs.current.data.ToolBar_LenVisiability)) {
					_threeManger.intersectObjs.current.data.ToolBar_LenVisiability = !_threeManger.intersectObjs.current.data.ToolBar_LenVisiability;
					$(_presenter2['default'].view).find('.toogle-len').find('span').text(_threeManger.intersectObjs.current.data.ToolBar_LenVisiability ? _presenter2['default'].i18n['hide_length'] : _presenter2['default'].i18n['show_length']);
				}
			}
			if (data.showAngle) {
				if ((0, _angleAnotation2['default'])(_threeManger.intersectObjs.current, !_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability)) {
					_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability = !_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability;
					$(_presenter2['default'].view).find('.toogle-angle').find('span').text(_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability ? _presenter2['default'].i18n['hide_angle'] : _presenter2['default'].i18n['show_angle']);
				}
			}

			_threeManger.intersectObjs.current.rotation.copy(data.rotate);
			_threeManger.helperTool.setObjectScale(data.selfScale);
			refreshToolbar();
		}

		function setToolbarPosition(position) {
			$(_presenter2['default'].view).find('.js-toolbar').removeClass('toolbar-hide');

			if (_threeManger.intersectObjs && _threeManger.intersectObjs.current) {
				if (!(0, _hasLength2['default'])(_threeManger.intersectObjs.current)) {
					$(_presenter2['default'].view).find('.js-toolbar').children('.toogle-len').hide();
				} else {
					$(_presenter2['default'].view).find('.js-toolbar').children('.toogle-len').show();
				}
				if (!(0, _hasAngle2['default'])(_threeManger.intersectObjs.current)) {
					$(_presenter2['default'].view).find('.js-toolbar').children('.toogle-angle').hide();
				} else {
					$(_presenter2['default'].view).find('.js-toolbar').children('.toogle-angle').show();
				}
			}

			var currentWidth = $(_presenter2['default'].view).find('.js-toolbar').width();
			var currentHeight = $(_presenter2['default'].view).find('.js-toolbar').height();
			var popoverPlacement = 'bottom';
			if (_constants.REAL_ESTATE.top + _constants.REAL_ESTATE.height - position.bottom.y - verticalGap > toolbarHeight) {
				$(_presenter2['default'].view).find('.js-toolbar').css('top', position.bottom.y + verticalGap);
				var left = position.top.x - currentWidth / 2;
				if (left < horizonGap) {
					left = horizonGap;
				}
				if (left > _constants.REAL_ESTATE.left + _constants.REAL_ESTATE.width - currentWidth - horizonGap) {
					left = _constants.REAL_ESTATE.left + _constants.REAL_ESTATE.width - currentWidth - horizonGap;
				}

				$(_presenter2['default'].view).find('.js-toolbar').css('left', left);
			} else if (position.top.y > toolbarHeight + verticalGap) {
				popoverPlacement = 'top';
				$(_presenter2['default'].view).find('.js-toolbar').css('top', position.top.y - verticalGap - currentHeight);

				var left = position.top.x - currentWidth / 2;
				if (left < horizonGap) {
					left = horizonGap;
				}
				if (left > _constants.REAL_ESTATE.left + _constants.REAL_ESTATE.width - currentWidth - horizonGap) {
					left = _constants.REAL_ESTATE.left + _constants.REAL_ESTATE.width - currentWidth - horizonGap;
				}

				$(_presenter2['default'].view).find('.js-toolbar').css('left', left);
			} else if (_constants.REAL_ESTATE.left + _constants.REAL_ESTATE.width - position.right.x > currentWidth + horizonGap) {
				$(_presenter2['default'].view).find('.js-toolbar').css('top', position.right.y - currentHeight / 2);
				$(_presenter2['default'].view).find('.js-toolbar').css('left', position.right.x + horizonGap);
			} else if (position.left.x > currentWidth + horizonGap) {
				$(_presenter2['default'].view).find('.js-toolbar').css('top', position.left.y - currentHeight / 2);
				$(_presenter2['default'].view).find('.js-toolbar').css('left', position.left.x - currentWidth - horizonGap);
			} else {
				$(_presenter2['default'].view).find('.js-toolbar').css('top', position.center.y);
				$(_presenter2['default'].view).find('.js-toolbar').css('left', position.center.x - currentWidth / 2);
			}

			$(_presenter2['default'].view).find('.popover-color').data().placement = popoverPlacement;
			$(_presenter2['default'].view).find('.popover-border').data().placement = popoverPlacement;
		}
		function refreshToolbar() {
			hidePopover();
			if (!_threeManger.intersectObjs || !_threeManger.intersectObjs.current) return;
			var $toolBar = $(_presenter2['default'].view).find('.js-toolbar');
			var meshColor = _threeManger.intersectObjs.current.data.ToolBar_MeshColor;
			$toolBar.find('.popover-color').find('img').attr('src', _presenter2['default'].path + 'resources/images/fill_' + (meshColor ? meshColor : 'orange') + '.png');

			var lineColor = _threeManger.intersectObjs.current.data.ToolBar_LineColor;
			$toolBar.find('.popover-border').find('img').attr('src', _presenter2['default'].path + 'resources/images/border_' + (lineColor ? lineColor : 'black') + '.png');

			$toolBar.find('.toogle-len').find('span').text(_threeManger.intersectObjs.current.data.ToolBar_LenVisiability ? _presenter2['default'].i18n['hide_length'] : _presenter2['default'].i18n['show_length']);
			$toolBar.find('.toogle-angle').find('span').text(_threeManger.intersectObjs.current.data.ToolBar_AngleVisiability ? _presenter2['default'].i18n['hide_angle'] : _presenter2['default'].i18n['show_angle']);

			var positions = _threeManger.helperTool.getObjectArea();
			if (positions != null) {
				setToolbarPosition(positions);
			}
		}

		function showToolbar() {
			refreshToolbar();
		}
		function hideToolbar() {
			hidePopover();
			$(_presenter2['default'].view).find('.js-toolbar').addClass('toolbar-hide');
		}
		function hidePopover() {
			$(_presenter2['default'].view).find('.js-toolbar').children('.popover-border,.popover-color').webuiPopover('hide');
		}

		/***/
	},
	/* 51 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _constants = __webpack_require__(6);

		var _threeManger = __webpack_require__(7);

		exports['default'] = function (options) {
			var group = options.group;
			var color = options.color;

			var boarder = group.getObjectByName(_constants.SHAPE_PART.MESH);
			boarder.material.color.set(color);
			group.data.strokeColor = color;
			(0, _threeManger.render)();
		};

		module.exports = exports['default'];

		/***/
	},
	/* 52 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2015/12/20.
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _createBoarderGeometry = __webpack_require__(22);

		var _createBoarderGeometry2 = _interopRequireDefault(_createBoarderGeometry);

		var _constants = __webpack_require__(6);

		var _ControllerTransformControls = __webpack_require__(23);

		var _threeManger = __webpack_require__(7);

		exports['default'] = function (options) {
			var mesh = undefined;
			var object = options.group;
			var lineWidth = options.lineWidth;
			var boarderGeometry = (0, _createBoarderGeometry2['default'])(object.getObjectByName(_constants.SHAPE_PART.MESH).geometry.vertices, lineWidth, object.scale);
			mesh = object.getObjectByName(_constants.SHAPE_PART.BOARDER);
			mesh.geometry = boarderGeometry;
			mesh.lineWidth = lineWidth;
			(0, _ControllerTransformControls.updateAngle)(object, Math.min(object.selfScale.x, object.selfScale.y));
			(0, _threeManger.render)();
		};

		module.exports = exports['default'];

		/***/
	},
	/* 53 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _constants = __webpack_require__(6);

		var _threeManger = __webpack_require__(7);

		var _ControllerTransformControls = __webpack_require__(23);

		exports['default'] = function (options) {
			options.group.getObjectByName(_constants.SHAPE_PART.BOARDER).material.color.copy(options.color);
			if (options.group.name == 'Ellipse' || options.group.name == 'Circle') {
				(0, _ControllerTransformControls.updateLength)(options.group);
			} else {
				(0, _threeManger.render)();
			}
		};

		module.exports = exports['default'];

		/***/
	},
	/* 54 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _threeManger = __webpack_require__(7);

		exports['default'] = function (shape, visiability) {
			if (!shape) {
				return false;
			}
			var lengthObj = shape.getObjectByName('length');
			if (lengthObj) {
				lengthObj.visible = visiability;
				(0, _threeManger.render)();
				return true;
			}
			return false;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 55 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _threeManger = __webpack_require__(7);

		exports['default'] = function (shape, visiability) {
			if (!shape || !shape.getObjectByName('angle')) {
				return false;
			}
			shape.getObjectByName('angle').visible = visiability;
			(0, _threeManger.render)();
			return true;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 56 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _threeMangerJs = __webpack_require__(7);

		var _UtilsDestroyThreeObjectJs = __webpack_require__(48);

		var _UtilsDestroyThreeObjectJs2 = _interopRequireDefault(_UtilsDestroyThreeObjectJs);

		var _constants = __webpack_require__(6);

		exports['default'] = function (shape) {
			if (!shape) {
				return;
			}
			var length = shape.children.length;
			for (var i = 0; i < length; i++) {
				if (_threeMangerJs.intersectObjs.indexOf(shape.children[i]) > -1) {
					var pos = _threeMangerJs.intersectObjs.indexOf(shape.children[i]);
					_threeMangerJs.intersectObjs.splice(pos, 1);
				}
			}

			_constants.shapesOrder.forEach(function (item, index) {
				if (shape === item) {
					_constants.shapesOrder.splice(index, 1);
				}
			});

			_threeMangerJs.scene.remove(shape);
			(0, _UtilsDestroyThreeObjectJs2['default'])(shape);
		};

		module.exports = exports['default'];

		/***/
	},
	/* 57 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _threeMangerJs = __webpack_require__(7);

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		var _constants = __webpack_require__(6);

		exports['default'] = function () {

			if (_threeMangerJs.intersectObjs.current) {
				_threeMangerJs.helperTool.detach(_threeMangerJs.intersectObjs.current);
				_threeMangerJs.intersectObjs.current = null;
			}

			// 已经没有图形可激活了
			if (_threeMangerJs.intersectObjs.length === 0) {
				_threeMangerJs.helperTool.dispose();
				_threeMangerJs.helperTool.detach();
				(0, _threeMangerJs.destroy)();
				_UtilsToolbarHelper2['default'].hideToolbar();
				$(_presenter2['default'].view).find('.three2D-canvas').css('display', 'none');
				setTimeout(function () {
					_presenter2['default'].playerController.getCommands().closeTool();
				}, 100);
				return;
			}

			_threeMangerJs.intersectObjs.current = _constants.shapesOrder[_constants.shapesOrder.length - 1];
			_threeMangerJs.helperTool.attach(_threeMangerJs.intersectObjs.current);
		};

		module.exports = exports['default'];

		/***/
	},
	/* 58 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2016/1/6.
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _constants = __webpack_require__(6);

		exports['default'] = function (obj) {
			var angle = obj.getObjectByName(_constants.SHAPE_PART.ANGLE);
			if (angle) {
				return true;
			} else {
				return false;
			}
		};

		module.exports = exports['default'];

		/***/
	},
	/* 59 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2016/1/6.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _constants = __webpack_require__(6);

		exports['default'] = function (obj) {
			var lengthObj = obj.getObjectByName(_constants.SHAPE_PART.LENGTH);
			if (lengthObj) {
				return true;
			}
			return false;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 60 */
	/***/function (module, exports) {

		/**
   * Created by lyp on 2016/1/11.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _createClass = function () {
			function defineProperties(target, props) {
				for (var i = 0; i < props.length; i++) {
					var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
				}
			}return function (Constructor, protoProps, staticProps) {
				if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
			};
		}();

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}

		var Listener = function Listener() {
			_classCallCheck(this, Listener);

			this.name = undefined;
			this.fn = null;
		};

		var ListenerManager = function () {
			function ListenerManager() {
				_classCallCheck(this, ListenerManager);

				this.listenArray = [];
			}

			_createClass(ListenerManager, [{
				key: 'addListener',
				value: function addListener(name, fn) {
					var listener = new Listener();
					listener.name = name;
					listener.fn = fn;
					this.listenArray.push(listener);
				}
			}, {
				key: 'dispose',
				value: function dispose() {
					this.listenArray = [];
				}
			}, {
				key: 'removeListener',
				value: function removeListener(name, fn) {
					for (var i = 0; i < this.listenArray.length; i++) {
						var listener = this.listenArray[i];
						if (listener.name === name && listener.fn === fn) {
							this.listenArray.splice(i, 1);
							break;
						}
					}
				}
			}, {
				key: 'run',
				value: function run(name, event) {
					if (event.type == 'mousedown' || event.type == 'click') {
						if ($(event.target).closest('.toolbar:visible').length != 0) {
							return;
						}
						event.stopPropagation();
					}

					for (var i = 0; i < this.listenArray.length; i++) {
						var listener = this.listenArray[i];
						if (listener.name === name) {
							listener.fn(event);
						}
					}
				}
			}]);

			return ListenerManager;
		}();

		var listenerManager = new ListenerManager();

		exports['default'] = listenerManager;
		module.exports = exports['default'];

		/***/
	},
	/* 61 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by liuyuanpeng on 2016/7/25.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function (msg) {
			var node = $(_presenter2['default'].view).find('.bg_pop');
			node.find('.text').html(msg);
			node.show();
			setTimeout(function () {
				node.find('.text').html('');
				node.hide();
			}, 2000);
		};

		module.exports = exports['default'];

		/***/
	},
	/* 62 */
	/***/function (module, exports) {

		/**
   * arg0 模板字符串 如a{0}b{1}c
   * arg1...n 需替换到模板中的字符串
   * @returns 替换后的字符串
   */
		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		exports["default"] = {
			format: function format() {
				var args = arguments;
				if (!args[0] || Object.prototype.toString.call(args[0]).slice(8, -1) !== "String") return args[0];
				return args[0].replace(/\{(\d+)\}/g, function (m, i) {
					return args[i * 1 + 1];
				});
			}
		};
		module.exports = exports["default"];

		/***/
	},
	/* 63 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports.onBlur = onBlur;
		exports.onFocus = onFocus;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _threeMangerJs = __webpack_require__(7);

		//import refreshQuickToolbar  from '../view/refreshQuickToolbar'

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		var _EventUnselectShape = __webpack_require__(64);

		var _EventUnselectShape2 = _interopRequireDefault(_EventUnselectShape);

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _runtime = __webpack_require__(5);

		var _runtime2 = _interopRequireDefault(_runtime);

		var _UtilsIntersectObjects = __webpack_require__(65);

		var _UtilsIntersectObjects2 = _interopRequireDefault(_UtilsIntersectObjects);

		var _listenerManager = __webpack_require__(60);

		var _listenerManager2 = _interopRequireDefault(_listenerManager);

		exports['default'] = function () {
			_listenerManager2['default'].addListener('mousedown', onDocumentMouseDown);
			_listenerManager2['default'].addListener('blur', onBlur);
			_listenerManager2['default'].addListener('focus', onFocus);
		};

		function onBlur() {
			if (_threeMangerJs.helperTool.visible) {
				_threeMangerJs.helperTool.detach();
				_UtilsToolbarHelper2['default'].hideToolbar();
			}
		}

		function onFocus(event) {
			if (_threeMangerJs.intersectObjs.current && _threeMangerJs.helperTool.object != _threeMangerJs.intersectObjs.current) {
				_threeMangerJs.helperTool.attach(_threeMangerJs.intersectObjs.current);
				_UtilsToolbarHelper2['default'].showToolbar();
				_presenter2['default'].webglControl.reIndexScene(_threeMangerJs.scene);
				event && _listenerManager2['default'].run('mousedown', event);
			}
		}

		function onDocumentMouseDown(event) {
			var pointer = undefined;
			if (event.touches) {
				if (event.touches.length === 1) {
					pointer = event.changedTouches[0];
				} else {
					return;
				}
			} else {
				pointer = event;
			}

			var intersect = (0, _UtilsIntersectObjects2['default'])(pointer, _threeMangerJs.helperTool.pickerController.children);
			if (intersect) {
				return;
			}

			var intersects = _threeMangerJs.raycaster.intersectObjects(_threeMangerJs.intersectObjs, true);
			if (intersects.length > 0) {
				for (var i = 0; i < intersects.length; i++) {
					var obj = intersects[i];
					if (obj.face) {
						var sel = obj.object.parent;
						if (sel != _threeMangerJs.intersectObjs.current) {
							_threeMangerJs.intersectObjs.current = sel;
							_threeMangerJs.helperTool.attach(_threeMangerJs.intersectObjs.current);
							//refreshQuickToolbar();
							_UtilsToolbarHelper2['default'].refreshToolbar();
						}
						break;
					}
				}
			} else {
				if (_threeMangerJs.intersectObjs.current) {
					_threeMangerJs.helperTool.detach(_threeMangerJs.intersectObjs.current);
				}
				_threeMangerJs.intersectObjs.current = null;
				(0, _EventUnselectShape2['default'])();
			}
		}

		/***/
	},
	/* 64 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		exports['default'] = function () {
			// 隐藏快速工具栏
			_UtilsToolbarHelper2['default'].hideToolbar();
		};

		module.exports = exports['default'];

		/***/
	},
	/* 65 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2015/12/29.
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports['default'] = intersectObjects;

		var _constants = __webpack_require__(6);

		var _threeManger = __webpack_require__(7);

		function intersectObjects(pointer, objects) {
			var x = (pointer.clientX - _constants.REAL_ESTATE.left) / _constants.REAL_ESTATE.width;
			var y = (pointer.clientY - _constants.REAL_ESTATE.top) / _constants.REAL_ESTATE.height;

			var pointerVector = new THREE.Vector2(x * 2 - 1, -(y * 2) + 1);
			_threeManger.raycaster.setFromCamera(pointerVector, _threeManger.camera);

			var intersections = _threeManger.raycaster.intersectObjects(objects, true);
			return intersections[0] ? intersections[0] : false;
		}

		module.exports = exports['default'];

		/***/
	},
	/* 66 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _projectionCallNative = __webpack_require__(67);

		var _projectionCallNative2 = _interopRequireDefault(_projectionCallNative);

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _runtime = __webpack_require__(5);

		var _runtime2 = _interopRequireDefault(_runtime);

		var _ShapeShapeFactory = __webpack_require__(24);

		exports['default'] = function () {
			if (_runtime2['default'] != icCreatePlayer.RUNTIME.TEACHER_MOBILE) return;

			var eventName = 'DJ2DTool';

			(0, _projectionCallNative2['default'])('addSubjectToolButtons', {
				buttons: [{
					sort: 8, // 按钮的顺序，按项目排序
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.CIRCLE, // 唯一性，与需生成的图形名字一样就好
					isPressed: false, // 默认是否选中
					text: '圆', // 按钮名
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/circle.png', // 未选中时显示的图标
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/circle_pressed.png', // 选中时显示的图标
					eventName: eventName, // 触发事件
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.CIRCLE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.ELLIPSE,
					isPressed: false,
					text: '椭圆',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/ellipse.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/ellipse_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.ELLIPSE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.SECTOR,
					isPressed: false,
					text: '扇形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/sector.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/sector_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.SECTOR2
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.EQUILATERALTRIANGLE,
					isPressed: false,
					text: '等边三角形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/equilateralTraigle.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/equilateralTraigle_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.EQUILATERALTRIANGLE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.ISOSCELESTRIANGLE,
					isPressed: false,
					text: '等腰三角形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/isoscelestriangle.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/isoscelesTriangle_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.ISOSCELESTRIANGLE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.RIGHTTRIANGLE,
					isPressed: false,
					text: '等腰直角三角形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/isoscelesrightangletriangle.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/isoscelesrightangletriangle_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.RIGHTTRIANGLE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.ACUTETRIANGLE,
					isPressed: false,
					text: '锐角三角形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/acuteangledtriangle_normal.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/acuteangledtriangle_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.ACUTETRIANGLE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.OBTUSETRIANGLE,
					isPressed: false,
					text: '钝角三角形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/obtuseangledtriangle.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/obtuseangledtriangle_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.OBTUSETRIANGLE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.FIVEEDGES,
					isPressed: false,
					text: '五边形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fIveEdges.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fIveEdges_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.FIVEEDGES
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.SIXEDGES,
					isPressed: false,
					text: '六边形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/sixEdges.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/sixEdges_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.SIXEDGES
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.STAR,
					isPressed: false,
					text: '五角星',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fivePointedStar.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fivePointedStar_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.STAR
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.RECTANGULARCUBE,
					isPressed: false,
					text: '长方形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesChangFangXing.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesChangFangXing_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.RECTANGULARCUBE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.SQUARE,
					isPressed: false,
					text: '正方形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdges.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdges_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.SQUARE
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.RHOMBUS,
					isPressed: false,
					text: '菱形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesLingXing.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesLingXing_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.RHOMBUS
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.PARALLELOGRAM,
					isPressed: false,
					text: '平行四边形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesPingXingSiBianXing.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesPingXingSiBianXing_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.PARALLELOGRAM
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.ISOSCELESTRAPEZOID,
					isPressed: false,
					text: '梯形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesTiXing.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesTiXing_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.ISOSCELESTRAPEZOID
					}
				}, {
					sort: 8,
					buttonId: _ShapeShapeFactory.GEOMETRY_SHAPE.RIGHTTRAPEZOID,
					isPressed: false,
					text: '直角梯形',
					normalIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesZhiJiaoTiXing.png',
					pressedIcon: _presenter2['default'].path + 'resources/images/nativeicon/fourEdgesZhiJiaoTiXing_pressed.png',
					eventName: eventName,
					eventData: {
						item: 'click',
						value: _ShapeShapeFactory.GEOMETRY_SHAPE.RIGHTTRAPEZOID
					}
				}]
			});
		};

		module.exports = exports['default'];

		/***/
	},
	/* 67 */
	/***/function (module, exports, __webpack_require__) {

		/* global isApp Bridge */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		var _constants = __webpack_require__(6);

		exports['default'] = function (eventName, data) {
			if (isApp && Bridge && Bridge.callNative) {
				return Bridge.callNative(_constants.callNativePath, eventName, data);
			}
			return false;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 68 */
	/***/function (module, exports, __webpack_require__) {

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { "default": obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports["default"] = function () {
			var toolbar = $(_presenter2["default"].view).find(".js-toolbar");
			toolbar.find(".toogle-len .tool-item-text").text(_presenter2["default"].i18n['show_length']);
			toolbar.find(".toogle-angle .tool-item-text").text(_presenter2["default"].i18n['show_angle']);
			toolbar.find(".popover-color .tool-item-text").text(_presenter2["default"].i18n['fill']);
			toolbar.find(".popover-border .tool-item-text").text(_presenter2["default"].i18n['border']);
			toolbar.find(".copy .tool-item-text").text(_presenter2["default"].i18n['copy']);
			toolbar.find(".delete .tool-item-text").text(_presenter2["default"].i18n['delete']);
		};

		module.exports = exports["default"];

		/***/
	},
	/* 69 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by liuyuanpeng on 2017/2/24.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function () {
			_presenter2['default'].webglControl = icCreatePlayer.plugin.webglControl;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 70 */
	/***/function (module, exports) {

		"use strict";

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		exports["default"] = function (state) {
			var currentState;
			if (state) {
				currentState = JSON.parse(state);
				// ToDo:处理Module的状态恢复
			}
		};

		module.exports = exports["default"];

		/***/
	},
	/* 71 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * 获得当前Module的状态信息
   * 可用于Module的状态恢复和保存
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function () {
			// TODO: 添加符合Module需求的状态对象
			var moduleState = JSON.stringify({
				module_id: _presenter2['default'].model.ID
			});
			return moduleState;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 72 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function (path) {
			_presenter2['default'].path = path;
		};

		module.exports = exports['default'];

		/***/
	},
	/* 73 */
	/***/function (module, exports, __webpack_require__) {

		/* global $ */
		/**
   接收到 native 端的消息并处理
   * @param eventData {object} {item: 'click', value: 'FourEdges'}
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports.cloneShape = cloneShape;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _threeManger = __webpack_require__(7);

		var _ShapeShapeFactoryJs = __webpack_require__(24);

		var _ShapeShapeFactoryJs2 = _interopRequireDefault(_ShapeShapeFactoryJs);

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		var _runtime = __webpack_require__(5);

		var _runtime2 = _interopRequireDefault(_runtime);

		var _EventDocumentEventJs = __webpack_require__(63);

		var _EventDocumentEventJs2 = _interopRequireDefault(_EventDocumentEventJs);

		var _constants = __webpack_require__(6);

		exports['default'] = function (eventData, data) {
			if (typeof eventData.value === 'undefined') {
				return null;
			}
			//// 显示3D图形的形状
			if ($(_presenter2['default'].view).find('.three2D-canvas').css('display') === 'none') {
				var canvas = $(_presenter2['default'].view).find('canvas');
				canvas.css('position', 'fixed');
				canvas.css('left', _constants.REAL_ESTATE.left);
				canvas.css('top', _constants.REAL_ESTATE.top);
				canvas.css('width', _constants.REAL_ESTATE.width);
				canvas.css('height', _constants.REAL_ESTATE.height);
				$(_presenter2['default'].view).find('.three2D-canvas').show();
				(0, _EventDocumentEventJs2['default'])();
				(0, _threeManger.threeStart)();
			}
			var group = (0, _threeManger.addThreeShape)((0, _ShapeShapeFactoryJs2['default'])(eventData.value), eventData.value);
			if (!group) {
				return null;
			}
			_threeManger.intersectObjs.current = group;
			_threeManger.helperTool.attach(group);
			if (data) {
				(0, _UtilsToolbarHelper.setCopyData)(data);
			} else {
				(0, _threeManger.render)();
				_UtilsToolbarHelper2['default'].refreshToolbar();
			}
			return group;
		};

		function cloneShape(shape) {}

		/***/
	},
	/* 74 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2015/12/29.
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _UtilsIntersectObjects = __webpack_require__(65);

		var _UtilsIntersectObjects2 = _interopRequireDefault(_UtilsIntersectObjects);

		var _threeManger = __webpack_require__(7);

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _UtilsToolbarHelper = __webpack_require__(50);

		var _UtilsToolbarHelper2 = _interopRequireDefault(_UtilsToolbarHelper);

		exports['default'] = {
			isPointInPath: function isPointInPath(event) {
				if ($(event.target).closest('.toolbar:visible').length != 0) {
					return true;
				}
				var pointer = undefined;
				if (event.touches) {
					if (event.touches.length === 1) {
						pointer = event.changedTouches[0];
					} else {
						return false;
					}
				} else {
					pointer = event;
				}
				var intersect = null;
				if (_threeManger.helperTool && _threeManger.helperTool.visible) {
					intersect = (0, _UtilsIntersectObjects2['default'])(pointer, _threeManger.helperTool.pickerController.children);
					if (intersect) {
						//console.log('true');
						return true;
					}
				}
				intersect = (0, _UtilsIntersectObjects2['default'])(pointer, _threeManger.intersectObjs);
				if (intersect) {
					//console.log('true')
					return true;
				}
				if (_threeManger.helperTool && _threeManger.helperTool.visible) {
					_threeManger.helperTool.detach();
					_UtilsToolbarHelper2['default'].hideToolbar();
				}
				return false;
			},
			execute: function execute(params) {
				var type = params.type ? params.type : params.toolOptions ? params.toolOptions.type : "";
				if (type) {
					_presenter2['default'].handleCallBack({ value: type }, params.data);
				}
			}
		};
		module.exports = exports['default'];

		/***/
	},
	/* 75 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		var _threeManger = __webpack_require__(7);

		/**
   * 翻页注销工具
   */

		exports['default'] = function () {
			//隐藏
			var container = $(_presenter2['default'].view).find('.three2D-canvas');
			if (container.css('display') != 'none') {
				container.hide();
				//删除所有图形
				for (var index = _threeManger.scene.children.length - 1; index >= 0; index--) {
					var sceneItem = _threeManger.scene.children[index];
					if (sceneItem.name === 'tool') continue;
					_threeManger.scene.remove(sceneItem);
					sceneItem = null;
				}

				//container.find("canvas").remove();

				//隐藏helperTool和工具栏,删除撞击测试集合
				_threeManger.helperTool.detach();
				_threeManger.intersectObjs.splice(0, _threeManger.intersectObjs.length);
				$(_presenter2['default'].view).trigger('hide.quickToolbar');
				(0, _threeManger.destroy)();
			}
		};

		module.exports = exports['default'];

		/***/
	},
	/* 76 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * 运行环境下, 销毁Module时执行的方法
   * @remark 该方法为Module生命周期方法, 仅在ICPlayer切换页面时执行
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function () {
			//解除绑定的Module事件
			// unBindEvent();
			//ToDo:释放Module占用的内存对象
			// 实例销毁
			//presenter.unbindNativeListener();
			_presenter2['default'].callbacks = {};
		};

		module.exports = exports['default'];

		/***/
	},
	/* 77 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2016/1/11.
   */
		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});
		exports['default'] = setPlayerController;

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		function setPlayerController(controller) {
			//console.log('setplayercontroller')
			_presenter2['default'].playerController = controller;
			_presenter2['default'].eventBus = _presenter2['default'].playerController.getEventBus();
		}

		module.exports = exports['default'];

		/***/
	},
	/* 78 */
	/***/function (module, exports, __webpack_require__) {

		/**
   * Created by lyp on 2016/1/11.
   */

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _listenerManager = __webpack_require__(60);

		var _listenerManager2 = _interopRequireDefault(_listenerManager);

		exports['default'] = function (eventName, event) {
			_listenerManager2['default'].run(eventName, event);
			//switch (eventName) {
			//    case "mousemove":
			//        //SetSquareA.mouseMove(event);
			//        onPointerHover(event);
			//        onPointerMove(event);
			//        break;
			//    case "mousedown":
			//        if ($(event.target).closest('.toolbar:visible').length == 0) {
			//            onDocumentMouseDown(event);
			//        }
			//        onPointerDown(event);
			//        break;
			//    case "mouseup":
			//        onPointerUp(event);
			//        break;
			//    default:
			//        //SetSquareA.mouseUp(event);
			//        break;
			//}
		};

		module.exports = exports['default'];

		/***/
	},
	/* 79 */
	/***/function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) {
			return obj && obj.__esModule ? obj : { 'default': obj };
		}

		var _presenter = __webpack_require__(2);

		var _presenter2 = _interopRequireDefault(_presenter);

		exports['default'] = function (obj) {
			_presenter2['default'].langType = obj._lang_;
		};

		module.exports = exports['default'];

		/***/
	}]);
	return presenter();
};]]></presenter><resources><file src="./resources/images/action-angle.png"/><file src="./resources/images/action-border.png"/><file src="./resources/images/action-close-p.png"/><file src="./resources/images/action-close.png"/><file src="./resources/images/action-color-fill.png"/><file src="./resources/images/action-copy.png"/><file src="./resources/images/action-delete.png"/><file src="./resources/images/action-ruler.png"/><file src="./resources/images/border_black.png"/><file src="./resources/images/border_blue.png"/><file src="./resources/images/border_green.png"/><file src="./resources/images/border_orange.png"/><file src="./resources/images/border_purple.png"/><file src="./resources/images/border_red.png"/><file src="./resources/images/border_white.png"/><file src="./resources/images/border_yellow.png"/><file src="./resources/images/choose-p.png"/><file src="./resources/images/choose.png"/><file src="./resources/images/color-1-p.png"/><file src="./resources/images/color-1.png"/><file src="./resources/images/color-2-p.png"/><file src="./resources/images/color-2.png"/><file src="./resources/images/color-3-p.png"/><file src="./resources/images/color-3.png"/><file src="./resources/images/color-4-p.png"/><file src="./resources/images/color-4.png"/><file src="./resources/images/color-5-p.png"/><file src="./resources/images/color-5.png"/><file src="./resources/images/color-6-p.png"/><file src="./resources/images/color-6.png"/><file src="./resources/images/color-7-p.png"/><file src="./resources/images/color-7.png"/><file src="./resources/images/color-8-p.png"/><file src="./resources/images/color-8.png"/><file src="./resources/images/divider-c.png"/><file src="./resources/images/divider-r.png"/><file src="./resources/images/fill_black.png"/><file src="./resources/images/fill_blue.png"/><file src="./resources/images/fill_green.png"/><file src="./resources/images/fill_orange.png"/><file src="./resources/images/fill_purple.png"/><file src="./resources/images/fill_red.png"/><file src="./resources/images/fill_white.png"/><file src="./resources/images/fill_yellow.png"/><file src="./resources/images/line-1.png"/><file src="./resources/images/line-2.png"/><file src="./resources/images/line-3.png"/><file src="./resources/images/line-4.png"/><file src="./resources/images/line-select.png"/><file src="./resources/images/rotate-p.png"/><file src="./resources/images/rotate.png"/><file src="./resources/locations/en_US/lang.json"/><file src="./resources/locations/en/lang.json"/><file src="./resources/locations/ja_JP/lang.json"/><file src="./resources/locations/ja/lang.json"/><file src="./resources/locations/zh_CN/lang.json"/><file src="./resources/locations/zh_HK/lang.json"/><file src="./resources/locations/zh_TW/lang.json"/><file src="./resources/locations/zh/lang.json"/></resources></addon>