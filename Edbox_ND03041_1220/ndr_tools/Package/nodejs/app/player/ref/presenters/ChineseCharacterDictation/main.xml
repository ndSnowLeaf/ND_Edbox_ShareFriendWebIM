<?xml version='1.0' encoding='UTF-8' ?>
<addon id='ChineseCharacterDictation'>
<properties>

                <property name="QuestionId" displayName="题目ID" type="string" isLocalized="false" />
                <property name="MainStem" displayName="主题干" type="html" isLocalized="false" />
                <property name="TimerType" displayName="计时类型" type="string" isLocalized="false" />
                <property name="TimeLimit" displayName="作答时长" type="integer" isLocalized="false" />
                <property name="Questions" displayName="小题列表" type="json" isLocalized="false" />

</properties>

<dependencies>

</dependencies>

<css>



</css>


<view>


</view>


<presenter>

<![CDATA[/*!   version: 1.5.0   -   updated: 2017-10-10 16:39:47   */
window["AddonChineseCharacterDictation_create"]=function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)}([function(module,exports,__webpack_require__){/*! presenter */
var Presenter=function(_super){__extends(Presenter,_super);function Presenter(presenterName){var _this=_super.call(this,presenterName)||this;_this.metaInfo=Object.assign(_this.metaInfo||{},{name:"ChineseCharacterDictation",type:ConstVariable.PresenterType.LAUNCHER});return _this}Presenter.prototype.$launch=function(options){return __awaiter(this,void 0,void 0,function(){var Scene;return __generator(this,function(_a){switch(_a.label){case 0:Scene=function(sceneName){switch(sceneName.toLowerCase()){case"exercise":return __webpack_require__(1).Scene;case"classroom":default:return __webpack_require__(3).Scene}}(this.QueryString["sys"]||this.QueryString["app"]||"");this.View.style.display="none";this.$scene=new Scene(this);return[4,this.$scene.load()];case 1:_a.sent();this.requireComponent("ComponentLoader",this.$scene.getComponents(),this.View,{top:0,left:0,width:0,height:0});return[2]}})})};Presenter.prototype.$release=function(){this.$scene.destroy();delete this.$scene};return Presenter}(CommonClass);module.exports=function(){return new Presenter("ChineseCharacterDictation")}},function(module,exports,__webpack_require__){/*! exercise */
Object.defineProperty(exports,"__esModule",{value:true});var logger_1=__webpack_require__(2);var Scene=function(){function Scene(context){this.context=context;this.bindEvent()}Scene.prototype.destroy=function(){delete this.$model;delete this.context};Scene.prototype.load=function(){return __awaiter(this,void 0,void 0,function(){var _this=this;return __generator(this,function(_a){switch(_a.label){case 0:return[4,new Promise(function(resolve,reject){return _this.requestData(resolve)}).then(function(res){return _this.$model=res}).catch(function(e){return logger_1.default.error(e)})];case 1:_a.sent();return[2]}})})};Scene.prototype.getComponents=function(){var _this=this;var modules={layout:"ObjectiveInteractionLayout",controllers:[{presenter:"I18nFilter"},{presenter:"AnswerFlowController",depends:[{property:"TimerService",presenter:"TimerController"}]}],components:[{presenter:"SwitchToolbar",renderTo:"CompoundSwitchPanel"},{presenter:"CompoundQuestionLoader",renderTo:"CenterPanel"}]};var settings=[{name:"CompoundQuestionLoader",type:"string",value:JSON.stringify([{name:"questionId",type:"string",value:this.$model.questionId},{name:"questionStem",type:"html",text:""},{name:"questionList",type:"json",value:{questions:(this.$model.questionData||[]).map(function(item,index){return{index:index+1,id:item.SubQuestionId,type:item.SubQuestionType||"ChineseCharacterDictation",data:{question_data:Object.assign({},item.SubQuestionData,{examId:_this.$model.questionId,questionType:item.SubQuestionType||"ChineseCharacterDictation"})}}})}},{name:"questionType",type:"string",value:"ChineseCharacterDictation"}])},{name:"SwitchToolbar",type:"string",value:JSON.stringify([{name:"itemList",type:"json",value:{items:(this.$model.questionData||[]).map(function(item,index){return{index:index,id:index+1,text:{normal:item.SubQuestionData.pinyin[0],statis:"."+item.SubQuestionData.word[0]},value:item.SubQuestionId,state:""}})}}])},{name:"ObjectiveInteractionLayout",type:"string",value:JSON.stringify([{name:"questionType",type:"string",value:"ChineseCharacterDictation"},{name:"specialTemplate",type:"string",value:"true"}])},{name:"AnswerFlowController",type:"string",value:JSON.stringify([{name:"linkQuestionId",type:"string",value:this.$model.questionId}])}];settings.push({name:"Components",type:"json",text:JSON.stringify(modules)});return settings};Scene.prototype.bindEvent=function(){var _this=this;this.context.addEventListener("requestQuestionDataCallback",ConstVariable.PresenterEventType.NATIVE_EVENT,function(data){logger_1.default.info("request question data: "+JSON.stringify(data));_this.requestResolver(data)})};Scene.prototype.requestData=function(resolve){this.requestResolver=resolve;this.context.dispatchEvent("requestQuestionData",ConstVariable.PresenterEventType.NATIVE_EVENT,{})};return Scene}();exports.Scene=Scene},function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var logger;if(Logger){(logger=Logger.get("ChineseCharacterDictation")).appendHandler(function(message){return window.console.log(message)},{level:Logger.DEBUG})}else{logger=window.console}exports.default=logger},function(module,exports,__webpack_require__){/*! classroom */
Object.defineProperty(exports,"__esModule",{value:true});var Scene=function(){function Scene(context){this.context=context;this.bindEvent()}Scene.prototype.destroy=function(){delete this.context};Scene.prototype.load=function(){};Scene.prototype.getComponents=function(){var _this=this;var model=this.context["Model"];var modules={layout:"ObjectiveInteractionLayout",controllers:[{presenter:"I18nFilter"},{presenter:"InteractionStateRecoverFilter"},{presenter:"AnswerFlowController",depends:[{property:"TimerService",presenter:"TimerController"}]}],components:[{presenter:"SwitchToolbar",renderTo:"CompoundSwitchPanel"},{presenter:"CompoundQuestionLoader",renderTo:"CenterPanel"},{presenter:"InteractionTimer",renderTo:"TopLeftPanel"}]};var settings=[{name:"CompoundQuestionLoader",type:"string",value:JSON.stringify([{name:"questionId",type:"string",value:model.QuestionId},{name:"questionStem",type:"html",text:model.MainStem},{name:"questionList",type:"json",value:{questions:(model.Questions||[]).map(function(item,index){return{index:index+1,id:item.SubQuestionId,type:item.SubQuestionType||"ChineseCharacterDictation",data:{question_data:Object.assign({},item.SubQuestionData,{examId:_this.examId,questionType:item.SubQuestionType||"ChineseCharacterDictation"})}}})}},{name:"questionType",type:"string",value:"ChineseCharacterDictation"}])},{name:"SwitchToolbar",type:"string",value:JSON.stringify([{name:"itemList",type:"json",value:{items:(model.Questions||[]).map(function(item,index){return{index:index,id:index+1,text:{normal:item.SubQuestionData.pinyin[0],statis:"."+item.SubQuestionData.word[0]},value:item.SubQuestionId,state:""}})}}])},{name:"ObjectiveInteractionLayout",type:"string",value:JSON.stringify([{name:"questionType",type:"string",value:"ChineseCharacterDictation"},{name:"specialTemplate",type:"string",value:"true"}])},{name:"InteractionTimer",type:"string",value:JSON.stringify([{name:"view_type",type:"string",value:"new_timer"}])},{name:"TimerController",type:"string",value:JSON.stringify([{name:"timer_type",type:"string",value:model.TimerType},{name:"time_limit",type:"integer",value:model.TimeLimit}])},{name:"InteractionSubmitButton",type:"string",value:JSON.stringify([{name:"can_modify",type:"string",value:true},{name:"linkQuestionType",type:"string",value:"compound"},{name:"linkQuestionId",type:"string",value:model.QuestionId},{name:"view_type",type:"string",value:"new_em_button"}])},{name:"AnswerFlowController",type:"string",value:JSON.stringify([{name:"linkQuestionId",type:"string",value:model.QuestionId}])}];var env=this.context["Environment"];switch(true){case env.isApp:case env.isStudent:modules.components.push({presenter:"InteractionSubmitButton",renderTo:"TopRightPanel"});break;case env.isPC:case env.isTeacher:case env.isWeb:default:[].push.apply(modules.components,[{presenter:"InteractionSubmitButton",renderTo:"BottomPanel"},{presenter:"ObjectiveStatisticsRemake",renderTo:"StatisticsPanel"}]);[].push.apply(modules.controllers,[{presenter:"ObjectiveStatController"},{presenter:"ClassroomStatusController"}]);settings.push({name:"ClassroomStatusController",type:"string",value:JSON.stringify([{name:"questionId",type:"string",value:model.QuestionId}])});break}settings.push({name:"Components",type:"json",text:JSON.stringify(modules)});return settings};Scene.prototype.bindEvent=function(){var _this=this;this.context.addEventListener("TaskInfoCallback",ConstVariable.PresenterEventType.IC_PLAYER_EVENT,function(data){if(data&&data.value){_this.examId=data.value.examId}});this.context.dispatchEvent("TaskInfo",ConstVariable.PresenterEventType.IC_PLAYER_EVENT,{item:"exam",type:"query"});this.context.addEventListener("ChineseDictation/QuestionModel",ConstVariable.PresenterEventType.IC_PLAYER_EVENT,function(){_this.context.dispatchEvent("ChineseDictation/QuestionModel/Callback",ConstVariable.PresenterEventType.IC_PLAYER_EVENT,{data:_this.context["Model"].Questions})})};return Scene}();exports.Scene=Scene}]);]]>

</presenter>


<resources>


</resources>

</addon>