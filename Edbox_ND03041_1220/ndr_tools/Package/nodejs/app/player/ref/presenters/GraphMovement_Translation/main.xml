<?xml version='1.0' encoding='UTF-8'?>
<addon id="templateid"><properties/><dependencies><jsDependency><javaScript name="tools_common" version="1.1.0"/></jsDependency></dependencies><css><![CDATA[.exam_skin_wood .undis{display:none!important}.exam_skin_wood .ui_btn_handle{display:inline-block;margin:0 .75em;padding:0 1.41667em;height:3.16667em;line-height:3.16667em;border:1px solid #397274;background:-webkit-linear-gradient(bottom,#e9e9e9,#fff);background:linear-gradient(0deg,#e9e9e9 0,#fff);text-align:center;vertical-align:middle;border-radius:.41667em}.exam_skin_wood .ui_btn_handle .ui_btn_handle_text{font-size:1.5em;color:#384650}.exam_skin_wood .ui_btn_handle.active,.exam_skin_wood .ui_btn_handle:active{background:-webkit-linear-gradient(bottom,#76b8ba,#89c5c7);background:linear-gradient(0deg,#76b8ba 0,#89c5c7)}.exam_skin_wood .ui_btn_handle.active .ui_btn_handle_text,.exam_skin_wood .ui_btn_handle:active .ui_btn_handle_text{color:#fff}.exam_skin_wood .ui_btn_handle.disabled{background:-webkit-linear-gradient(top,#e9e9e9,#fff);background:linear-gradient(180deg,#e9e9e9 0,#fff);cursor:default}.exam_skin_wood .ui_btn_handle.disabled .ui_btn_handle_text{color:#9da7ae}.exam_skin_wood .graphtranslation_wrapper{padding:4.79167em 7.5em 0;background:#bfd3e2;width:100%;height:100%;position:relative;visibility:hidden}.exam_skin_wood .graphtranslation_middle{position:absolute;left:50%;height:31.25em;bottom:8.08333em;-webkit-transform:translate(-50%);transform:translate(-50%);width:62.70833em;padding-right:10em}.exam_skin_wood .graphtranslation_main{width:52.08333em;height:100%;position:absolute;left:0;top:0;z-index:13}.exam_skin_wood .graphtranslation_main_body{width:100%;height:31.25em;background:url(resources/wood/images/main_line_bg.png) no-repeat 0 0 #b8cbd9;background-size:100% 100%;position:relative}.exam_skin_wood .graphtranslation_main_body.no_bg{background-image:none!important;border-radius:.625em}.exam_skin_wood .graphtranslation_main_body .spot{width:1.5em;height:1.5em;border-width:.25em;border-style:solid;border-radius:100%;position:absolute;z-index:11;background:#fff;display:none}.exam_skin_wood .graphtranslation_main_body .spot.clr68b900{border-color:#68b900}.exam_skin_wood .graphtranslation_main_body .spot.clrff6b2a{border-color:#ff6b2a}.exam_skin_wood .graphtranslation_main_body .spot.clrfb2543{border-color:#fb2543}.exam_skin_wood .graphtranslation_main_body .spot.clrf5d000{border-color:#f5d000}.exam_skin_wood .graphtranslation_main_body .spot.clr0074f6{border-color:#0074f6}.exam_skin_wood .graphtranslation_main_body .spot.clr834bfb{border-color:#834bfb}.exam_skin_wood .graphtranslation_main_body .spot.clr00740e{border-color:#00740e}.exam_skin_wood .graphtranslation_main_body .spot.blur{opacity:.5}.exam_skin_wood .graphtranslation_main_body .horizontal_txt,.exam_skin_wood .graphtranslation_main_body .vertical_txt{display:none;position:absolute;font-size:2.08333em;color:#000;z-index:1}.exam_skin_wood .graphtranslation_main_body .horizontal_txt b,.exam_skin_wood .graphtranslation_main_body .vertical_txt b{color:#00898e;font-weight:400}.exam_skin_wood .graphtranslation_main_body .horizontal_txt{width:7.75em;margin-top:-1.16667em}.exam_skin_wood .graphtranslation_main_body .vertical_txt{width:1.25em;text-align:center;right:0;word-break:break-word}.exam_skin_wood .graphtranslation_aside{width:5.83333em;height:100%;position:absolute;right:0;top:0}.exam_skin_wood .graphtranslation_aside .list{position:relative;z-index:10;background:#b1c9dc;border-radius:.625em}.exam_skin_wood .graphtranslation_aside .list li:first-child a{border-radius:.625em .625em 0 0}.exam_skin_wood .graphtranslation_aside .list li:last-child{background:0 0}.exam_skin_wood .graphtranslation_aside .list li:last-child a{border-radius:0 0 .625em .625em}.exam_skin_wood .graphtranslation_aside .list li.current a{background:#97b8d2}.exam_skin_wood .graphtranslation_aside .list li a{width:5.83333em;height:5.83333em;overflow:hidden;display:block;position:relative}.exam_skin_wood .graphtranslation_aside .list li a.active,.exam_skin_wood .graphtranslation_aside .list li a:active{background:#97b8d2}.exam_skin_wood .graphtranslation_aside .list li .line{border-bottom:1px solid #98adbd;width:80%;margin:0 auto;display:block}.exam_skin_wood .graphtranslation_aside .list li .icon{position:absolute;top:0;bottom:0;left:0;right:0;margin:auto;background-size:100% 100%;background-repeat:no-repeat}.exam_skin_wood .graphtranslation_aside .list li.pxsbx .icon{width:2.66667em;height:3.91667em;background-image:url(resources/wood/images/icon_lingxing.png);-webkit-user-select:none;-webkit-touch-callout:none}.exam_skin_wood .graphtranslation_aside .list li.pxsbx a:active .icon,.exam_skin_wood .graphtranslation_aside .list li.pxsbx.current .icon{background-image:url(resources/wood/images/icon_lingxing_active.png)}.exam_skin_wood .graphtranslation_aside .list li.sjx_lr .icon{width:3.91667em;height:2.375em;background-image:url(resources/wood/images/icon_arrow_zy.png);-webkit-user-select:none;-webkit-touch-callout:none}.exam_skin_wood .graphtranslation_aside .list li.sjx_lr a:active .icon,.exam_skin_wood .graphtranslation_aside .list li.sjx_lr.current .icon{background-image:url(resources/wood/images/icon_arrow_zy_active.png)}.exam_skin_wood .graphtranslation_aside .list li.sjx_tb .icon{width:2.375em;height:4em;background-image:url(resources/wood/images/icon_arrow_sx.png);-webkit-user-select:none;-webkit-touch-callout:none}.exam_skin_wood .graphtranslation_aside .list li.sjx_tb a:active .icon,.exam_skin_wood .graphtranslation_aside .list li.sjx_tb.current .icon{background-image:url(resources/wood/images/icon_arrow_sx_active.png)}.exam_skin_wood .graphtranslation_aside .list li.sjx_lt_rb .icon{width:3.45833em;height:3.66667em;background-image:url(resources/wood/images/icon_arrow_zsyx.png);-webkit-user-select:none;-webkit-touch-callout:none}.exam_skin_wood .graphtranslation_aside .list li.sjx_lt_rb a:active .icon,.exam_skin_wood .graphtranslation_aside .list li.sjx_lt_rb.current .icon{background-image:url(resources/wood/images/icon_arrow_zsyx_active.png)}.exam_skin_wood .graphtranslation_aside .pos_hand{z-index:9;position:relative;top:.41667em;width:6.2em;height:6.2em;border-radius:100%;overflow:hidden;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.exam_skin_wood .graphtranslation_aside .pos_hand.lianxu .bottom:after,.exam_skin_wood .graphtranslation_aside .pos_hand.lianxu .left:after,.exam_skin_wood .graphtranslation_aside .pos_hand.lianxu .right:after,.exam_skin_wood .graphtranslation_aside .pos_hand.lianxu .top:after{background-image:url(resources/wood/images/lianxu_step.png)}.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom,.exam_skin_wood .graphtranslation_aside .pos_hand li.left,.exam_skin_wood .graphtranslation_aside .pos_hand li.right,.exam_skin_wood .graphtranslation_aside .pos_hand li.top{position:relative;float:left;margin:-.04167em;width:3.16667em;height:3.16667em;overflow:hidden;background:url(resources/wood/images/pos_t.png) no-repeat;background-size:100% 100%}.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom:active,.exam_skin_wood .graphtranslation_aside .pos_hand li.left.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.left.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.left:active,.exam_skin_wood .graphtranslation_aside .pos_hand li.right.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.right.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.right:active,.exam_skin_wood .graphtranslation_aside .pos_hand li.top.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.top.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.top:active{background-image:url(resources/wood/images/pos_t_act.png)!important}.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom:after,.exam_skin_wood .graphtranslation_aside .pos_hand li.left:after,.exam_skin_wood .graphtranslation_aside .pos_hand li.right:after,.exam_skin_wood .graphtranslation_aside .pos_hand li.top:after{content:"";display:inline-block;position:absolute;width:1.16667em;height:1.16667em;background:url(resources/wood/images/one_step.png) no-repeat 50%;background-size:100% 100%}.exam_skin_wood .graphtranslation_aside .pos_hand li.top{background-image:url(resources/wood/images/pos_t.png)}.exam_skin_wood .graphtranslation_aside .pos_hand li.top.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.top.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.top:active{background-image:url(resources/wood/images/pos_t_act.png)!important}.exam_skin_wood .graphtranslation_aside .pos_hand li.top:after{left:.91667em;bottom:.91667em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.exam_skin_wood .graphtranslation_aside .pos_hand li.right{background-image:url(resources/wood/images/pos_r.png)}.exam_skin_wood .graphtranslation_aside .pos_hand li.right.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.right.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.right:active{background-image:url(resources/wood/images/pos_r_act.png)!important}.exam_skin_wood .graphtranslation_aside .pos_hand li.right:after{left:.91667em;top:.91667em;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom{background-image:url(resources/wood/images/pos_b.png)}.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom:active{background-image:url(resources/wood/images/pos_b_act.png)!important}.exam_skin_wood .graphtranslation_aside .pos_hand li.bottom:after{right:1em;top:.91667em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.exam_skin_wood .graphtranslation_aside .pos_hand li.left{background-image:url(resources/wood/images/pos_l.png)}.exam_skin_wood .graphtranslation_aside .pos_hand li.left.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.left.ui_btn_active,.exam_skin_wood .graphtranslation_aside .pos_hand li.left:active{background-image:url(resources/wood/images/pos_l_act.png)!important}.exam_skin_wood .graphtranslation_aside .pos_hand li.left:after{right:.91667em;bottom:.91667em;-webkit-transform:rotate(225deg);transform:rotate(225deg)}.exam_skin_wood .graphtranslation_aside .pos_hand li.mask{position:absolute;left:50%;bottom:50%;-webkit-transform-origin:center;transform-origin:center;background:#bfd3e2;z-index:100;width:2.125em;height:2.125em;border-radius:100%;top:50%;bottom:auto;margin-left:-1.0625em;margin-top:-1.125em}.exam_skin_wood .graphtranslation_aside .pos_hand li.mask.active,.exam_skin_wood .graphtranslation_aside .pos_hand li.mask:active{background:#bfd3e2!important}.exam_skin_wood .graphtranslation_parallel{position:absolute;height:12.5em;width:8.33333em;z-index:3}.exam_skin_wood .graphtranslation_parallel .parallel{width:100%;height:100%;background:url(resources/wood/images/parallel_normal.png) no-repeat 0 0;background-size:100% 100%}.exam_skin_wood .graphtranslation_parallel .fictitious_line{position:absolute;left:0;top:0;width:100%;height:100%;overflow:hidden;background:url(resources/wood/images/parallel_shadow.png) no-repeat 0 0;background-size:100% 100%;display:none}.exam_skin_wood .graphtranslation_parallel .spot.spot_t{top:0;left:50%;margin-left:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_parallel .spot.spot_lm{top:50%;left:0;margin-left:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_parallel .spot.spot_rm{top:50%;right:0;margin-right:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_parallel .spot.spot_b{bottom:0;left:50%;margin-left:-.75em;margin-bottom:-.75em}.exam_skin_wood .graphtranslation_parallel.reflection{z-index:2}.exam_skin_wood .graphtranslation_parallel.reflection .fictitious_line{display:block}.exam_skin_wood .graphtranslation_parallel.reflection .parallel{display:none}.exam_skin_wood .graphtranslation_arrowhead{position:absolute;width:8.33333em;height:8.33333em;z-index:2}.exam_skin_wood .graphtranslation_arrowhead .fictitious_line{position:absolute;left:0;top:0;width:100%;height:100%;background:url(resources/wood/images/arrowhead_normal.png) no-repeat 0 0;background-size:100% 100%}.exam_skin_wood .graphtranslation_arrowhead.dashed{left:19.91667em;top:11.08333em}.exam_skin_wood .graphtranslation_arrowhead.dashed .fictitious_line{background:url(resources/wood/images/arrowhead_dashed.png) no-repeat 0 0;background-size:100% 100%}.exam_skin_wood .graphtranslation_arrowhead.reflection .fictitious_line{background:url(resources/wood/images/arrowhead_shadow.png) no-repeat 0 0;background-size:100% 100%}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_t{top:0;left:50%;margin-left:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_lm{top:50%;left:0;margin-left:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_lmc{top:50%;left:25%;margin-left:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_rmc{top:50%;right:25%;margin-right:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_rm{top:50%;right:0;margin-right:-.75em;margin-top:-.75em}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_lb{bottom:0;left:25%;margin-left:-.75em;margin-bottom:-.75em}.exam_skin_wood .graphtranslation_arrowhead .spot.spot_rb{bottom:0;right:25%;margin-right:-.75em;margin-bottom:-.75em}.exam_skin_wood .graphtranslation_range{pointer-events:none;position:absolute;z-index:5}.exam_skin_wood .graphtranslation_range.blur .item_inner>span{background-color:rgba(238,241,131,.3)!important}.exam_skin_wood .graphtranslation_range.blur .txt{display:none}.exam_skin_wood .graphtranslation_range .item_wrap{border:1px solid #9faaae;overflow:hidden;z-index:10;width:100%}.exam_skin_wood .graphtranslation_range .item_wrap .item_inner>span{position:relative;background-color:rgba(238,241,131,.8)}.exam_skin_wood .graphtranslation_range .txt{color:#fff;font-size:2.08333em;position:absolute}.exam_skin_wood .graphtranslation_range.horizontal .item_wrap{height:2.08333em;height:100%}.exam_skin_wood .graphtranslation_range.horizontal .item_wrap .item_inner{width:999999999px}.exam_skin_wood .graphtranslation_range.horizontal .item_wrap .item_inner>span{width:2.08333em;height:2.08333em;border-right:1px solid #9faaae;float:left}.exam_skin_wood .graphtranslation_range.horizontal .txt{white-space:nowrap;margin-top:.20833em;left:50%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);-moz-transform:translate(-50%);text-shadow:1px 1px 2px #000}.exam_skin_wood .graphtranslation_range.vertical .item_wrap{width:2.08333em;height:100%;margin-top:-1px}.exam_skin_wood .graphtranslation_range.vertical .item_wrap .item_inner{height:999999999px;width:2.08333em;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.exam_skin_wood .graphtranslation_range.vertical .item_wrap .item_inner>span{width:2.08333em;height:2.08333em;border-bottom:1px solid #9faaae;float:left}.exam_skin_wood .graphtranslation_range.vertical .txt{text-align:center;right:0;margin-right:1.25em;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);-moz-transform:translateY(-50%);text-shadow:#000 1px 0 0,#000 0 1px 0,#000 -1px 0 0,#000 0 -1px 0}.exam_skin_wood .graphtranslation_refercnceline{display:none;position:absolute;background-color:rgba(110,165,206,.2);z-index:0}.exam_skin_wood .graphtranslation_refercnceline.horizontal{left:0;width:100%}.exam_skin_wood .graphtranslation_refercnceline.vertical{height:100%;top:0}.exam_skin_wood .graphtranslation_refercnceline.parallel_refercnceline.horizontal{height:12.5em}.exam_skin_wood .graphtranslation_refercnceline.parallel_refercnceline.vertical{width:8.33333em}.exam_skin_wood .graphtranslation_refercnceline.arrow_refercnceline.horizontal{height:8.33333em}.exam_skin_wood .graphtranslation_refercnceline.arrow_refercnceline.vertical{width:8.33333em}.exam_skin_wood .shape1,.exam_skin_wood .shape2,.exam_skin_wood .shape3,.exam_skin_wood .shape4{width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}.exam_skin_wood .shape1 .css_shape,.exam_skin_wood .shape2 .css_shape,.exam_skin_wood .shape3 .css_shape,.exam_skin_wood .shape4 .css_shape{position:absolute;width:100%;height:100%;z-index:3}.exam_skin_wood .shape1 .css_shape{-webkit-clip-path:polygon(50% 0,100% 50%,50% 100%,0 50%);clip-path:polygon(50% 0,100% 50%,50% 100%,0 50%)}.exam_skin_wood .shape2 .css_shape,.exam_skin_wood .shape3 .css_shape,.exam_skin_wood .shape4 .css_shape{-webkit-clip-path:polygon(50% 0,100% 50%,75% 50%,75% 100%,25% 100%,25% 50%,0 50%);clip-path:polygon(50% 0,100% 50%,75% 50%,75% 100%,25% 100%,25% 50%,0 50%)}.exam_skin_wood .graphtranslation_foot{width:100%;position:absolute;left:0;bottom:0;height:4.91667em;background:#cfdee9;-webkit-user-select:none;-webkit-touch-callout:none}.exam_skin_wood .graphtranslation_foot ul{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);margin-left:-5em;white-space:nowrap}.exam_skin_wood .graphtranslation_foot ul li{display:inline-block;margin:0 1.25em}.exam_skin_wood .graphtranslation_foot ul li .icon{height:2.45833em;display:block}.exam_skin_wood .graphtranslation_foot ul li .icon i{display:block;width:2.41667em;height:2.08333em;margin:0 auto;overflow:hidden;background-repeat:no-repeat;background-size:100% 100%}.exam_skin_wood .graphtranslation_foot ul li .txt{display:block;text-align:center;font-size:1em;white-space:nowrap;min-width:4.83333em;color:#292525;margin-top:.41667em}.exam_skin_wood .graphtranslation_foot ul li.vertex{position:relative}.exam_skin_wood .graphtranslation_foot ul li.vertex .icon i{width:2.5em;height:2.20833em;background-image:url(resources/wood/images/icon_dingdian.png)}.exam_skin_wood .graphtranslation_foot ul li.vertex a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.vertex.active .icon i{background-image:url(resources/wood/images/icon_dingdian_active.png)}.exam_skin_wood .graphtranslation_foot ul li.revoke.disabled .icon i{background-image:url(resources/wood/images/icon_cexiao_dis.png)}.exam_skin_wood .graphtranslation_foot ul li.revoke.disabled .txt{color:#a9b6c0!important}.exam_skin_wood .graphtranslation_foot ul li.revoke.disabled a{cursor:default}.exam_skin_wood .graphtranslation_foot ul li.revoke.disabled a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.revoke.disabled.active .icon i{background-image:url(resources/wood/images/icon_cexiao_dis.png)}.exam_skin_wood .graphtranslation_foot ul li.revoke .icon i{background-image:url(resources/wood/images/icon_cexiao.png)}.exam_skin_wood .graphtranslation_foot ul li.revoke a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.revoke.active .icon i{background-image:url(resources/wood/images/icon_cexiao_active.png)}.exam_skin_wood .graphtranslation_foot ul li.recovery.disabled .icon i{background-image:url(resources/wood/images/icon_huifu_dis.png)}.exam_skin_wood .graphtranslation_foot ul li.recovery.disabled .txt{color:#a9b6c0!important}.exam_skin_wood .graphtranslation_foot ul li.recovery.disabled a{cursor:default}.exam_skin_wood .graphtranslation_foot ul li.recovery.disabled a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.recovery.disabled.active .icon i{background-image:url(resources/wood/images/icon_huifu_dis.png)}.exam_skin_wood .graphtranslation_foot ul li.recovery .icon i{background-image:url(resources/wood/images/icon_huifu.png)}.exam_skin_wood .graphtranslation_foot ul li.recovery a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.recovery.active .icon i{background-image:url(resources/wood/images/icon_huifu_active.png)}.exam_skin_wood .graphtranslation_foot ul li.reset_hand.disabled .icon i{background-image:url(resources/wood/images/icon_reset_dis.png)}.exam_skin_wood .graphtranslation_foot ul li.reset_hand.disabled .txt{color:#a9b6c0!important}.exam_skin_wood .graphtranslation_foot ul li.reset_hand.disabled a{cursor:default}.exam_skin_wood .graphtranslation_foot ul li.reset_hand.disabled a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.reset_hand.disabled.active .icon i{background-image:url(resources/wood/images/icon_reset_dis.png)}.exam_skin_wood .graphtranslation_foot ul li.reset_hand .icon i{width:2.16667em;height:2.45833em;background-image:url(resources/wood/images/icon_reset.png)}.exam_skin_wood .graphtranslation_foot ul li.reset_hand a:active .icon i,.exam_skin_wood .graphtranslation_foot ul li.reset_hand.active .icon i{background-image:url(resources/wood/images/icon_reset_active.png)}.exam_skin_wood .graphtranslation_foot ul li.bg_hand{margin-left:5em}.exam_skin_wood .graphtranslation_foot .applicationset-switch{background:#e8edf0;border-radius:1.04167em;display:inline-block;width:4.16667em;height:2.08333em;border:1px solid #9aa1a7;line-height:normal;position:relative;cursor:pointer;-webkit-transition:left .3s,background .3s;transition:left .3s,background .3s}.exam_skin_wood .graphtranslation_foot .applicationset-switch:before{-webkit-transition:left .3s;transition:left .3s;content:"";width:2.08333em;height:2.08333em;border:1px solid #a3a9ae;position:absolute;left:-2px;top:-2px;border-radius:100%;background:#f2f2f2}.exam_skin_wood .graphtranslation_foot .applicationset-switch.checked{background:#6a9ea1;border-color:#3e7678}.exam_skin_wood .graphtranslation_foot .applicationset-switch.checked:before{top:-2px;left:2.08333em;background:#f5f5f5}.exam_skin_wood .graphtranslation_foot .applicationset-switch input[type=checkbox]{cursor:pointer;position:relative;-webkit-appearance:none;opacity:0;width:4.16667em;height:2.08333em}.exam_skin_wood .com_dialog_wrapper{display:none;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);z-index:99999999}.exam_skin_wood .com_dialog_wrapper .com_dialog_inner{display:table-cell;vertical-align:middle;text-align:center}.exam_skin_wood .com_dialog_wrapper .com_dialog_box{display:inline-block;background-color:rgba(47,47,47,.8);border-radius:.41667em;padding:1.66667em;color:#fff}.exam_skin_wood .com_dialog_wrapper .com_dialog_box .com_dialog_foot{text-align:center}.exam_skin_wood .com_dialog_wrapper .com_dialog_box .com_dialog_foot .dia_btn{font-size:1em;display:inline-block;margin:.54167em 1.08333em 0;padding:0 1em;height:2em;line-height:2em;min-width:4.5em;background:#11b0b6;cursor:pointer;color:#fff}.exam_skin_wood .com_dialog_wrapper .com_dialog_box .com_dialog_foot .dia_btn:active{background:#62999b}.exam_skin_wood .graphtranslation_dialog_confirm{width:23.33333em}.exam_skin_wood .graphtranslation_dialog_confirm .tip_txt{font-size:1.25em;line-height:1.66667em;padding:.83333em 0 1.66667em}.exam_skin_wood .graphtranslation_vertex_prompt{background-color:rgba(47,47,47,.8);position:absolute;left:50%;margin-left:-24.04167em;bottom:5.16667em;height:4.20833em;line-height:4.20833em;padding:0 2.08333em;border-radius:.41667em;color:#fff}.exam_skin_wood .graphtranslation_vertex_prompt:before{content:"";position:absolute;left:3em;top:100%;margin-top:-.2px;margin-left:-.72917em;width:0;height:0;border-left:.625em solid transparent;border-right:.625em solid transparent;border-top:.66667em solid rgba(47,47,47,.8);font-size:1em}.exam_skin_wood .graphtranslation_vertex_prompt .con_detail{font-size:1.25em}.exam_skin_wood .gtrans_pos_prompt{z-index:110;background-color:rgba(47,47,47,.8);position:absolute;height:4.20833em;line-height:4.20833em;padding:0 2.08333em;border-radius:.41667em;color:#fff}.exam_skin_wood .gtrans_pos_prompt:before{content:"";position:absolute;right:20%;top:100%;margin-top:-.2px;margin-left:-.72917em;width:0;height:0;border-left:.625em solid transparent;border-right:.625em solid transparent;border-top:.66667em solid rgba(47,47,47,.8)}.exam_skin_wood .gtrans_pos_prompt .con_detail{font-size:1.41667em;white-space:nowrap}.exam_skin_wood .gtrans_pos_prompt.tip_top{right:-.79167em;bottom:7.29167em}.exam_skin_wood .gtrans_pos_prompt.tip_right{right:-2.91667em;bottom:5.41667em}.exam_skin_wood .gtrans_pos_prompt.tip_bottom{right:-.79167em;bottom:3.16667em}.exam_skin_wood .gtrans_pos_prompt.tip_left{right:1.16667em;bottom:5.41667em}.exam_skin_wood .lang_ja .graphtranslation_main_body .horizontal_txt{width:8.33333em}.exam_skin_wood .lang_ja .gtrans_pos_prompt:before{right:15%}.exam_skin_wood .lang_ja .gtrans_pos_prompt.tip_top{right:-1.83333em}.exam_skin_wood .lang_ja .gtrans_pos_prompt.tip_right{right:-3.75em}.exam_skin_wood .lang_ja .gtrans_pos_prompt.tip_bottom{right:-1.75em}.exam_skin_wood .lang_ja .gtrans_pos_prompt.tip_left{right:0}.exam_skin_wood .lang_en .graphtranslation_middle{width:60.75em}.exam_skin_wood .lang_en .graphtranslation_foot ul{height:4.16667em}.exam_skin_wood .lang_en .gtrans_pos_prompt:before{right:3em}.exam_skin_wood .lang_en .gtrans_pos_prompt.tip_top{right:-.95833em}.exam_skin_wood .lang_en .gtrans_pos_prompt.tip_right{right:-2.91667em}.exam_skin_wood .lang_en .gtrans_pos_prompt.tip_bottom{right:-.95833em}.exam_skin_wood .lang_en .gtrans_pos_prompt.tip_left{right:.875em}.exam_skin_wood .move_type{z-index:10;position:relative;width:100%;bottom:-1em}.exam_skin_wood .graphtranslation_wrapper .btn_linkage{z-index:110;position:absolute;left:50%;top:0;-webkit-transform:translate3d(-50%,0,0);transform:translate3d(-50%,0,0)}.exam_skin_wood .graphtranslation_wrapper .btn_linkage.on .linkage_on{display:inline-block}.exam_skin_wood .graphtranslation_wrapper .btn_linkage.on .linkage_off{display:none}.exam_skin_wood .linkage_on{display:none;background:#6da0a4;border-radius:2.33333em;border:1px solid #3e7678;white-space:nowrap}.exam_skin_wood .linkage_on .btn_linkage_on_text{min-width:3.75em;display:inline-block;line-height:1.91667em;vertical-align:top;padding:0 .20833em 0 .5em;color:#fff;text-align:right;overflow:hidden}.exam_skin_wood .linkage_on .btn_linkage_on_text_em{font-size:1.16667em}.exam_skin_wood .linkage_on .linkage_on_circle{margin:-1px;display:inline-block;width:2.08333em;height:2.08333em;vertical-align:top;background:-webkit-linear-gradient(top,#fcfcfd,#e8e9ea);background:linear-gradient(180deg,#fcfcfd 0,#e8e9ea);border:1px solid #98a0a6;border-radius:50%}.exam_skin_wood .linkage_off{display:inline-block;background:#fff;border-radius:2.33333em;border:1px solid #9aa1a7;white-space:nowrap}.exam_skin_wood .linkage_off .btn_linkage_on_text{min-width:3.75em;display:inline-block;padding:0 .5em 0 .20833em;line-height:1.91667em;color:#647079;vertical-align:top;text-align:left;overflow:hidden}.exam_skin_wood .linkage_off .btn_linkage_on_text_em{font-size:1.16667em}.exam_skin_wood .linkage_off .linkage_on_circle{display:inline-block;margin:-1px;width:2.08333em;height:2.08333em;vertical-align:top;background:-webkit-linear-gradient(top,#fcfcfd,#e8e9ea);background:linear-gradient(180deg,#fcfcfd 0,#e8e9ea);border:1px solid #98a0a6;border-radius:50%}.exam_skin_wood .graphtranslation-en-tipbox{height:1.875em;line-height:1;position:absolute;top:-1.875em;right:0;z-index:14;pointer-events:none}.exam_skin_wood .graphtranslation-en-tipbox p{color:#000;font-size:1.41667em;white-space:nowrap}.exam_skin_wood .graphtranslation-en-tipbox p b{font-weight:400;color:#00898e;margin:0 .41667em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li{padding-top:.1em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.recovery,.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.reset_hand,.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.revoke{vertical-align:top;margin-top:1em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.recovery .txt,.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.reset_hand .txt,.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.revoke .txt{display:none}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li .txt{white-space:normal;margin-top:-.1em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.vertex{width:12em;vertical-align:top}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.bg_hand{width:12em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .linkage_off{padding-right:1em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .linkage_off .btn_linkage_on_text{white-space:normal}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .linkage_off .btn_linkage_on_text,.typefaces_long .exam_skin_wood .graphtranslation_wrapper .linkage_on .btn_linkage_on_text{padding-top:.2em;line-height:1;font-size:.75em}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_vertex_prompt,.typefaces_long .exam_skin_wood .graphtranslation_wrapper .gtrans_pos_prompt{padding:.5em 1em 1em;line-height:1.1;height:auto;text-align:left}.typefaces_long .exam_skin_wood .graphtranslation_wrapper .graphtranslation_vertex_prompt{margin-left:-24.424167em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li{padding-top:.1em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.recovery,.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.reset_hand,.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.revoke{vertical-align:top;margin-top:1em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.recovery .txt,.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.reset_hand .txt,.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.revoke .txt{display:none}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li .txt{white-space:normal;margin-top:-.1em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.vertex{width:12em;vertical-align:top}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_foot ul li.bg_hand{width:12em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .linkage_off{padding-right:1em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .linkage_off .btn_linkage_on_text{white-space:normal}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .linkage_off .btn_linkage_on_text,.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .linkage_on .btn_linkage_on_text{padding-top:.2em;line-height:1;font-size:.75em}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_vertex_prompt,.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .gtrans_pos_prompt{padding:.5em 1em 1em;line-height:1.1;height:auto;text-align:left}.typefaces_ru_RU .exam_skin_wood .graphtranslation_wrapper .graphtranslation_vertex_prompt{margin-left:-24.424167em}.addon_GraphMovement_Translation .graphtranslation_foot .applicationset-switch{-webkit-transition:initial;transition:initial}.addon_GraphMovement_Translation .graphtranslation_foot .applicationset-switch:before{-webkit-transition:initial;transition:initial}.addon_GraphMovement_Translation .graphtranslation_foot .applicationset-switch.animated{-webkit-transition:left .3s,background .3s;transition:left .3s,background .3s}.addon_GraphMovement_Translation .graphtranslation_foot .applicationset-switch.animated:before{-webkit-transition:left .3s,background .3s;transition:left .3s,background .3s}]]></css><view><![CDATA[<div class="exam_skin_wood"><div class="graphtranslation_wrapper graphtranslation_translate"><div class="graphtranslation_middle"><div class="graphtranslation_main"><div class="graphtranslation_main_body"><div class="graphtranslation-en-tipbox" style="display:none"><p>Towards<b>down</b>move<b>14</b>grid</p></div><div class="shape shape1"><div class="graphtranslation_arrowhead dashed ora" style="left:-9999px;display:none"><div class="fictitious_line"></div></div><div class="graphtranslation_parallel cur" style="left: 20.833333333em;top:8.3333333332em"><div class="css_shape"></div><div class="parallel"></div><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a4"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_b clr00740e" name="a3"></div></div><div class="graphtranslation_parallel reflection org" style="left: 20.833333333em;top:8.3333333332em"><div class="parallel"></div><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a4"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_b clr00740e" name="a3"></div></div><div class="txt horizontal_txt"></div><div class="txt vertical_txt"></div><div class="graphtranslation_refercnceline parallel_refercnceline horizontal channel_horizontal"></div><div class="graphtranslation_refercnceline parallel_refercnceline vertical channel_vertical"></div><div class="spot blur" style="left:26.54em;top:22.125em; margin-left:-0.75em;margin-top: -0.75em"></div><div class="spot blur" style="left:48.625em;top:22.125em;margin-left:-0.75em;margin-top: -0.75em"></div></div><div class="shape shape2"><div class="graphtranslation_arrowhead dashed ora" style="left: 35.4166666661em;top: 12.4999999998em"><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="graphtranslation_arrowhead reflection org" style="left:20.833333333em; top: 12.4999999998em"><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="graphtranslation_arrowhead cur" style="left:20.833333333em; top: 12.4999999998em"><div class="css_shape"></div><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="txt horizontal_txt"></div><div class="txt vertical_txt"></div><div class="graphtranslation_refercnceline arrow_refercnceline horizontal channel_horizontal"></div><div class="graphtranslation_refercnceline arrow_refercnceline vertical channel_vertical"></div></div><div class="shape shape3"><div class="graphtranslation_arrowhead dashed ora" style="left: 20.833333333em;top:18.7499999997em"><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="graphtranslation_arrowhead reflection org" style="left:20.833333333em;top:4.1666666666em"><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="graphtranslation_arrowhead cur" style="left: 20.833333333em;top:4.1666666666em"><div class="css_shape"></div><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="txt horizontal_txt"></div><div class="txt vertical_txt"></div><div class="graphtranslation_refercnceline arrow_refercnceline horizontal channel_horizontal"></div><div class="graphtranslation_refercnceline arrow_refercnceline vertical channel_vertical"></div></div><div class="shape shape4"><div class="graphtranslation_arrowhead dashed ora" style="left: 14.5833333331em;top:6.2499999999em"><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="graphtranslation_arrowhead reflection org" style="left:33.3333333328em;top:14.5833333331em"><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="graphtranslation_arrowhead cur" style="left: 33.3333333328em;top:14.5833333331em"><div class="css_shape"></div><div class="fictitious_line"></div><div class="spot spot_t clr68b900" name="a1"></div><div class="spot spot_lm clrff6b2a" name="a7"></div><div class="spot spot_lmc clrfb2543" name="a6"></div><div class="spot spot_rm clrf5d000" name="a2"></div><div class="spot spot_rmc clr0074f6" name="a3"></div><div class="spot spot_lb clr834bfb" name="a5"></div><div class="spot spot_rb clr00740e" name="a4"></div></div><div class="txt horizontal_txt"></div><div class="txt vertical_txt"></div><div class="graphtranslation_refercnceline arrow_refercnceline horizontal channel_horizontal"></div><div class="graphtranslation_refercnceline arrow_refercnceline vertical channel_vertical"></div></div></div></div><div class="graphtranslation_aside"><ul class="list"><li class="pxsbx current preset" sname="shape1"><a href="javascript:;"><span class="icon"></span> </a><b class="line"></b></li><li class="sjx_lr preset" sname="shape2"><a href="javascript:;"><span class="icon"></span> </a><b class="line"></b></li><li class="sjx_tb preset" sname="shape3"><a href="javascript:;"><span class="icon"></span> </a><b class="line"></b></li><li class="sjx_lt_rb preset" sname="shape4"><a href="javascript:;"><span class="icon"></span></a></li></ul><ul class="pos_hand"><li class="left"></li><li class="top"></li><li class="bottom"></li><li class="right"></li><li class="mask"></li></ul><div class="gtrans_pos_prompt" style="display:none"><div class="con_detail">请先停止平移图形</div></div><div class="move_type"><a href="###" class="btn_linkage"><span class="linkage_on clearfix"><span class="btn_linkage_on_text"><em class="btn_linkage_on_text_em multi_step">连续</em></span> <i class="linkage_on_circle"></i> </span><span class="linkage_off clearfix"><i class="linkage_on_circle"></i> <span class="btn_linkage_on_text"><em class="btn_linkage_on_text_em single_step">单格</em></span></span></a></div></div></div><div class="graphtranslation_foot"><div class="graphtranslation_vertex_prompt" style="display:none;opacity:0"><div class="con_detail">现在可以在图形上标点了</div></div><ul><li class="vertex"><a href="javascript:;"><span class="icon"><i></i></span> <span class="txt">选择顶点</span></a></li><li class="revoke disabled"><a href="javascript:;"><span class="icon"><i></i></span> <span class="txt">撤销</span></a></li><li class="recovery disabled"><a href="javascript:;"><span class="icon"><i></i></span> <span class="txt">恢复</span></a></li><li class="reset_hand"><a href="javascript:;"><span class="icon"><i></i></span> <span class="txt">重置</span></a></li><li class="bg_hand"><span class="icon"><label class="applicationset-switch checked"></label></span><span class="txt">显示格数</span></li></ul></div></div></div>]]></view><presenter><![CDATA[/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	window.AddonGraphMovement_Translation_create = function () {
	  return _presenter2.default;
	};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _run = __webpack_require__(2);

	var _run2 = _interopRequireDefault(_run);

	var _setBasePath = __webpack_require__(16);

	var _setBasePath2 = _interopRequireDefault(_setBasePath);

	var _destroy = __webpack_require__(17);

	var _destroy2 = _interopRequireDefault(_destroy);

	var _getQuestionInfo = __webpack_require__(18);

	var _getQuestionInfo2 = _interopRequireDefault(_getQuestionInfo);

	var _getExtendData = __webpack_require__(19);

	var _getExtendData2 = _interopRequireDefault(_getExtendData);

	var _initStudentMobile = __webpack_require__(20);

	var _initStudentMobile2 = _interopRequireDefault(_initStudentMobile);

	var _setPlayerController = __webpack_require__(21);

	var _setPlayerController2 = _interopRequireDefault(_setPlayerController);

	var _onEventReceived = __webpack_require__(22);

	var _onEventReceived2 = _interopRequireDefault(_onEventReceived);

	var _setLangType = __webpack_require__(23);

	var _setLangType2 = _interopRequireDefault(_setLangType);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    run: _run2.default,
	    destroy: _destroy2.default,
	    setBasePath: _setBasePath2.default,
	    getQuestionInfo: _getQuestionInfo2.default,
	    getExtendData: _getExtendData2.default,
	    initStudentMobile: _initStudentMobile2.default,
	    // setLocationProperties,
	    setPlayerController: _setPlayerController2.default,
	    setUrlParams: _setLangType2.default,
	    onEventReceived: _onEventReceived2.default
	};
	// import setLocationProperties from './presenter/setLocationProperties'

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (view, model) {
	    var _this = this;

	    return window.I18nManager.getInstance().loadLanguage('GraphMovement_Translation', _controlData2.default.langType).done(function (obj) {
	        _controlData2.default.i18n = obj.lang;
	        _controlData2.default.$view = $(view);
	        (0, _initI18N2.default)(view);
	        _util2.default.init();
	        if (model.__ExtendModel && !$.isEmptyObject(model.__ExtendModel) && model.__ExtendModel.gTran) {
	            (0, _recoverInterface2.default)(model.__ExtendModel.gTran);
	        } else {
	            (0, _recoverInterface2.default)(_util2.default.cloneObj(_initData2.default.controlData));
	        }
	        _this.__interface = {
	            resizeScreen: function resizeScreen(data) {
	                (0, _handleResizeScreen2.default)(view, eval(data.ratio));
	                _util2.default.init();
	            }
	        };
	    });
	};

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _initData = __webpack_require__(5);

	var _initData2 = _interopRequireDefault(_initData);

	var _recoverInterface = __webpack_require__(6);

	var _recoverInterface2 = _interopRequireDefault(_recoverInterface);

	var _initI18N = __webpack_require__(14);

	var _initI18N2 = _interopRequireDefault(_initI18N);

	var _handleResizeScreen = __webpack_require__(15);

	var _handleResizeScreen2 = _interopRequireDefault(_handleResizeScreen);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    init: function init() {
	        this.getFontSize();
	        this.getGridSize();
	    },
	    cloneObj: function (_cloneObj) {
	        function cloneObj(_x) {
	            return _cloneObj.apply(this, arguments);
	        }

	        cloneObj.toString = function () {
	            return _cloneObj.toString();
	        };

	        return cloneObj;
	    }(function (obj) {
	        if (!obj) return;
	        var str,
	            newobj = obj.constructor === Array ? [] : {};
	        if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {
	            return;
	        } else if (window.JSON) {
	            str = JSON.stringify(obj), //系列化对象
	            newobj = JSON.parse(str); //还原
	        } else {
	            for (var i in obj) {
	                newobj[i] = _typeof(obj[i]) === 'object' ? cloneObj(obj[i]) : obj[i];
	            }
	        }
	        return newobj;
	    }),

	    // 计算一格尺寸
	    getGridSize: function getGridSize() {
	        _controlData2.default.gridSize = _controlData2.default.gridSizeEm * _controlData2.default.fontSize;
	    },
	    getFontSize: function getFontSize() {
	        _controlData2.default.fontSize = _controlData2.default.$view.find(".graphtranslation_main").css("font-size").replace(/px/, '');
	    },
	    pxToEm: function pxToEm(px) {
	        px / _controlData2.default.fontSize;
	    },

	    // 格子数
	    gridNum: function gridNum(_data, isPush, isX) {
	        if (isPush && _controlData2.default.orgDir != _controlData2.default.controlData.dire) {
	            if (_controlData2.default.orgDir == 'left' || _controlData2.default.orgDir == 'top') {
	                return Math.floor(_data / _controlData2.default.gridSize);
	            } else {
	                return Math.ceil(_data / _controlData2.default.gridSize);
	            }
	        } else {
	            return Math.round(_data / _controlData2.default.gridSize);
	        }
	    },

	    // 尺寸校正
	    redress: function redress(size) {
	        return Math.round(size / _controlData2.default.gridSize) * _controlData2.default.gridSize;
	    },

	    // 图形数据
	    getShapeData: function getShapeData(shapeCur, shapeOrg, shapeOra, isPush) {
	        var x = this.gridNum(shapeCur.css("left").replace(/px/, ""), isPush && (_controlData2.default.orgDir == 'left' || _controlData2.default.orgDir == 'right')),
	            y = this.gridNum(shapeCur.css("top").replace(/px/, ""), isPush && (_controlData2.default.orgDir == 'top' || _controlData2.default.orgDir == 'bottom'));
	        var x1 = this.gridNum(shapeOrg.css("left").replace(/px/, "")),
	            y1 = this.gridNum(shapeOrg.css("top").replace(/px/, ""));
	        var x2 = this.gridNum(shapeOra.css("left").replace(/px/, "")),
	            y2 = this.gridNum(shapeOra.css("top").replace(/px/, ""));
	        return { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };
	    },


	    // 点数据
	    getDotData: function getDotData(shapeCur, shapeOrg, shapeOra) {
	        var dotArr1 = [],
	            dotArr2 = [],
	            dotArr3 = [];
	        var dotDom1 = shapeCur.find(".spot");
	        var dotDom2 = shapeOrg.find(".spot");
	        var dotDom3 = shapeOra.find(".spot");
	        dotDom1.each(function () {
	            if ($(this).css("display") == "none") return;
	            dotArr1.push($(this).attr("name"));
	        });
	        dotDom2.each(function () {
	            if ($(this).css("display") == "none") return;
	            dotArr2.push($(this).attr("name"));
	        });
	        dotDom3.each(function () {
	            if ($(this).css("display") == "none") return;
	            dotArr3.push($(this).attr("name"));
	        });

	        return { dotArr1: dotArr1, dotArr2: dotArr2, dotArr3: dotArr3 };
	    },

	    // 保存数据
	    saveData: function saveData() {
	        var curShapeData = _controlData2.default.curShapeData();

	        if (curShapeData.curStep > 0) {
	            curShapeData.steps.splice(0, curShapeData.curStep);
	            curShapeData.curStep = 0;
	        }
	        var len = curShapeData.steps.unshift(this.getStepData());
	        // 只存4步
	        if (len > 4) {
	            curShapeData.steps.length = 4;
	        }
	    },
	    getStepData: function getStepData(isPush) {
	        var shapeCur = _controlData2.default.$content.find(".cur");
	        var shapeOrg = _controlData2.default.$content.find(".org");
	        var shapeOra = _controlData2.default.$content.find(".ora");

	        var curShapeData = _controlData2.default.curShapeData();
	        var ShapeData = this.getShapeData(shapeCur, shapeOrg, shapeOra, isPush);
	        var dotData = this.getDotData(shapeCur, shapeOrg, shapeOra);

	        var obj = { cur: { x: ShapeData.x, y: ShapeData.y, points: [] }, grids: [] };
	        obj.org = { x: ShapeData.x1, y: ShapeData.y1, points: [] };
	        obj.ora = { x: ShapeData.x2, y: ShapeData.y2, points: [] };
	        obj.cur.points = obj.cur.points.concat(dotData.dotArr1);
	        obj.org.points = obj.org.points.concat(dotData.dotArr2);
	        obj.ora.points = obj.ora.points.concat(dotData.dotArr3);
	        obj.grids = [];
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;

	        try {
	            for (var _iterator = curShapeData.steps[curShapeData.curStep].grids[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                var grid = _step.value;

	                if (grid.substr(0, 3) == "cur" && obj.cur.points.indexOf(grid.substr(3, 2)) != -1) {
	                    obj.grids.push(grid);
	                } else if (grid.substr(0, 3) == "org" && obj.org.points.indexOf(grid.substr(3, 2)) != -1) {
	                    obj.grids.push(grid);
	                } else if (grid.substr(0, 3) == "ora" && obj.ora.points.indexOf(grid.substr(3, 2)) != -1) {
	                    obj.grids.push(grid);
	                }
	            }
	        } catch (err) {
	            _didIteratorError = true;
	            _iteratorError = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion && _iterator.return) {
	                    _iterator.return();
	                }
	            } finally {
	                if (_didIteratorError) {
	                    throw _iteratorError;
	                }
	            }
	        }

	        return obj;
	    },
	    removeReflectionPoint: function removeReflectionPoint() {
	        _controlData2.default.$content.find(".reflection").find(".spot").hide();
	    },
	    format: function format() {
	        var args = arguments;
	        if (!args[0] || Object.prototype.toString.call(args[0]).slice(8, -1) !== "String") return args[0];
	        return args[0].replace(/\{(\d+)\}/g, function (m, i) {
	            return args[i * 1 + 1];
	        });
	    }
	};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    //网格尺寸
	    gridSize: 30,
	    gridSizeEm: 2.0833333333,
	    //顶点的容差范围,单位是em
	    tolerance: 1.5,
	    // 初始化的尺寸
	    initData: {
	        shape1: { x: 10, y: 4 },
	        shape2: { x: 10, y: 6 },
	        shape3: { x: 10, y: 2 },
	        shape4: { x: 16, y: 7 }
	    },
	    initDataOra: {
	        shape1: { x: 0, y: 0 },
	        shape2: { x: 17, y: 6 },
	        shape3: { x: 10, y: 9 },
	        shape4: { x: 7, y: 3 }
	    },
	    undoNum: 3,
	    isMove: false,
	    controlData: {},
	    fontSize: 18,
	    // 返回当前图形的数据
	    curShapeData: function curShapeData() {
	        var curShapeName = this.controlData.cur;
	        return this.controlData.shapes[curShapeName];
	    },

	    //预设图形每个顶点的偏移量，顶点从最上方的点开始顺时针依次为a1,a2,a3,a4....
	    preOffset: {
	        shape1: [{ x: 2, y: 0 }, { x: 4, y: 3 }, { x: 2, y: 6 }, { x: 0, y: 3 }],
	        shape2: [{ x: 2, y: 0 }, { x: 4, y: 2 }, { x: 3, y: 2 }, { x: 3, y: 4 }, { x: 1, y: 4 }, { x: 1, y: 2 }, { x: 0, y: 2 }],
	        shape3: [{ x: 2, y: 0 }, { x: 4, y: 2 }, { x: 3, y: 2 }, { x: 3, y: 4 }, { x: 1, y: 4 }, { x: 1, y: 2 }, { x: 0, y: 2 }],
	        shape4: [{ x: 2, y: 0 }, { x: 4, y: 2 }, { x: 3, y: 2 }, { x: 3, y: 4 }, { x: 1, y: 4 }, { x: 1, y: 2 }, { x: 0, y: 2 }]
	    },
	    isEn: function isEn() {
	        var lang = this.i18n["lang"];
	        return lang == "en";
	    },

	    operType: {
	        recovery: 1, //还原,恢复
	        move: 2, //移动
	        init: 3, //初始
	        point: 4 //标注顶点
	    }

	};

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    controlData: {
	        cur: 'shape1', //当前预设图形
	        select: 0, //选择顶点
	        showGrid: 1, //显示格数
	        moveByStep: true, // true：单格平移，false:连续平移
	        isMoveEnd: true, //移动动画是否结束
	        dire: '', //移动方向
	        grids: {}, //正在进行数格子动画的格子
	        shapes: {
	            shape1: {
	                curStep: 0,
	                steps: [{ cur: { x: 10, y: 4, points: [] }, grids: [] }]
	            },
	            shape2: {
	                curStep: 0,
	                steps: [{ cur: { x: 10, y: 6, points: [] }, ora: { x: 17, y: 6, points: [] }, grids: [] }]
	            },
	            shape3: {
	                curStep: 0,
	                steps: [{ cur: { x: 10, y: 2, points: [] }, ora: { x: 10, y: 9, points: [] }, grids: [] }]
	            },
	            shape4: {
	                curStep: 0,
	                steps: [{ cur: { x: 16, y: 7, points: [] }, ora: { x: 7, y: 3, points: [] }, grids: [] }]
	            }
	        }
	    }

	};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports.default = function (modelData) {
		_controlData2.default.controlData = modelData;
		(0, _event.bindEvent)();
		//切换到预设图形
		preoffset();
		(0, _selectVectButton.isSelect)();
		(0, _selectVectButton.isHideGrid)(_controlData2.default.operType.init);
		if (!_controlData2.default.controlData.isMoveEnd) {
			setTimeout(function () {
				_controlData2.default.controlData.isMoveEnd = true;
				_controlData2.default.$view.find('.pos_hand .' + _controlData2.default.controlData.dire).trigger('click');
			}, 250);
		}
		setTimeout(function () {
			_controlData2.default.$view.find('.graphtranslation_wrapper').css('visibility', 'visible');
		}, 200);
	};

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _selectVectButton = __webpack_require__(7);

	var _controlButton = __webpack_require__(10);

	var _event = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var preoffset = function preoffset() {
		var name = _controlData2.default.controlData.cur;
		// 移动方式按钮 、键控按钮样式
		if (_controlData2.default.controlData.moveByStep) {
			_controlData2.default.$view.find('.btn_linkage').removeClass("on");
			_controlData2.default.$view.find(".pos_hand").removeClass("lianxu");
		} else {
			_controlData2.default.$view.find('.btn_linkage').addClass("on");
			_controlData2.default.$view.find(".pos_hand").addClass("lianxu");
		}

		//遍历获取每个预设的状态
		for (var i = 1; i < 5; i++) {
			var stepName = "shape" + i;
			(0, _controlButton.reload)(_controlData2.default.operType.init, stepName);
		}

		_controlData2.default.$view.find(".preset.current").removeClass("current");
		_controlData2.default.$view.find(".preset[sname=" + name + "]").addClass("current");
		_controlData2.default.$view.find('div .shape:not(.' + name + ')').hide();
	}; /**
	    * Created by Administrator on 2016/7/15.
	    */

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.isSelect = isSelect;
	exports.switchPreset = switchPreset;
	exports.bindGraphEvent = bindGraphEvent;
	exports.removePreset = removePreset;
	exports.showGrid = showGrid;
	exports.isHideGrid = isHideGrid;

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _translate = __webpack_require__(8);

	var _translate2 = _interopRequireDefault(_translate);

	var _controlButton = __webpack_require__(10);

	var _controlButton2 = _interopRequireDefault(_controlButton);

	var _setGridNum = __webpack_require__(9);

	var _setGridNum2 = _interopRequireDefault(_setGridNum);

	var _moveButton = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
		if (!(0, _moveButton.getIsMoveEnd)()) return;
		if (_controlData2.default.controlData.select) {
			_controlData2.default.controlData.select = 0;
			_controlData2.default.$view.find('.graphtranslation_vertex_prompt').finish().css({ opacity: 0 }).hide();
		} else {
			_controlData2.default.controlData.select = 1;
			_controlData2.default.$view.find('.graphtranslation_vertex_prompt').show().animate({ opacity: 1 }, 500, function () {
				_controlData2.default.$view.find('.graphtranslation_vertex_prompt').animate({ opacity: 0 }, 2000, function () {
					_controlData2.default.$view.find('.graphtranslation_vertex_prompt').hide();
				});
			});
		}
		isSelect();
	};

	function isSelect() {
		if (!_controlData2.default.controlData.select) {
			_controlData2.default.$view.find(".vertex").removeClass("active");
		} else {
			_controlData2.default.$view.find(".vertex").addClass("active");
		}
	}

	//切换预设
	function switchPreset() {
		if ($(this).hasClass("current") || !(0, _moveButton.getIsMoveEnd)()) return;
		(0, _setGridNum.removeAllGrid)();
		removePreset();
		$(this).addClass("current");
		var name = $(this).attr("sname");
		_controlData2.default.$view.find('div .' + name).show();
		_controlData2.default.controlData.cur = name;

		bindGraphEvent();
		isHideGrid();
	}

	function bindGraphEvent() {
		_controlData2.default.$content = _controlData2.default.$view.find("." + _controlData2.default.controlData.cur);
		(0, _translate2.default)();
		(0, _controlButton2.default)();
	}

	//移除已有的预设
	function removePreset() {
		var presets = _controlData2.default.$view.find('.preset');
		for (var i = 0, len = presets.length; i < len; i++) {
			if ($(presets[i]).hasClass("current")) {
				$(presets[i]).removeClass("current");
				var name = $(presets[i]).attr("sname");
				_translate2.default.unbindEvents();
				_controlButton2.default.unbindEvents();
				_controlData2.default.$view.find('div .' + name).hide();
				return;
			}
		}
	}

	function showGrid() {
		if (!(0, _moveButton.getIsMoveEnd)()) return;
		if (_controlData2.default.controlData.showGrid) {
			_controlData2.default.controlData.showGrid = 0;
			(0, _setGridNum.removeAllGrid)();
		} else {
			_controlData2.default.controlData.showGrid = 1;
		}
		isHideGrid();
	}

	function isHideGrid(operType) {
		var btn = _controlData2.default.$view.find('.applicationset-switch');
		!btn.hasClass('animated') && btn.addClass('animated');
		if (_controlData2.default.controlData.showGrid) {
			btn.addClass("checked");
		} else {
			btn.removeClass("checked");
		}
		(0, _setGridNum2.default)(operType ? operType : _controlData2.default.operType.recovery);
		(0, _translate.showTips)();
	}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.hideTips = exports.showTips = exports.getPos = exports.reflection = exports.hideChannel = exports.showChannel = undefined;
	exports.default = translate;

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	var _setGridNum = __webpack_require__(9);

	var _setGridNum2 = _interopRequireDefault(_setGridNum);

	var _controlButton = __webpack_require__(10);

	var _moveButton = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var lastPos;
	// 移动相关方法
	function translate() {
	    var disX = 0;
	    var disY = 0;
	    var startX = 0;
	    var startY = 0;
	    var direction, relationPos;

	    var _content = _controlData2.default.$view.find(".graphtranslation_main_body")[0];
	    var content = _controlData2.default.$content[0];
	    var shape = content.querySelector(".cur");
	    var css_shape = content.querySelector(".css_shape");

	    css_shape.addEventListener('mousedown', fnDown);
	    css_shape.addEventListener('touchstart', fnDown);
	    function getDirection(curX, curY) {
	        var moveX = curX - startX,
	            moveY = curY - startY,
	            moveXAbs = Math.abs(moveX),
	            moveYAbs = Math.abs(moveY);
	        if (moveXAbs > 5 || moveYAbs > 5) {
	            if (moveXAbs > moveYAbs) {
	                direction = moveX < 0 ? "left" : "right";
	            } else {
	                direction = moveY < 0 ? "top" : "bottom";
	            }

	            // 线框图
	            _util2.default.gridNum(shape.offsetTop);
	            // 只有移动过才会保存数据，更新状态等
	            var height = shape.offsetHeight;
	            if (_util2.default.gridNum(shape.offsetLeft) == 0 && direction == "left" || _util2.default.gridNum(shape.offsetTop) == 0 && direction == "top" || _util2.default.gridNum(shape.offsetLeft) == 21 && direction == "right" || _util2.default.gridNum(shape.offsetTop + height) == 15 && direction == "bottom") {
	                direction = undefined;
	                return;
	            }
	            reflection(direction, relationPos, lastPos);
	            _controlData2.default.isMove = true;
	            (0, _setGridNum.removeAllGrid)();
	        }
	    }
	    function fnDown(event) {
	        _controlData2.default.isMove = false;
	        // 键控的动画是否结束
	        if (!(0, _moveButton.getIsMoveEnd)()) return;
	        var oEvent = event.targetTouches ? event.targetTouches[0] : event;

	        relationPos = getPos(); // 获取相对位置
	        startX = oEvent.clientX;
	        startY = oEvent.clientY;
	        disX = oEvent.clientX - shape.offsetLeft;
	        disY = oEvent.clientY - shape.offsetTop;
	        lastPos = $(shape).position();

	        _content.addEventListener('mousemove', fnMove);
	        _content.addEventListener('mouseup', fnUp);
	        _content.addEventListener('mouseleave', fnUp);
	        _content.addEventListener('touchmove', fnMove);
	        _content.addEventListener('touchend', fnUp);
	    };
	    function fnMove(event) {
	        var oEvent = event.targetTouches ? event.targetTouches[0] : event;
	        if (!direction) {
	            getDirection(oEvent.clientX, oEvent.clientY);
	            return;
	        }

	        //移动
	        moveShape(oEvent);
	        // 通道
	        showChannel(direction);
	        showTips(direction);
	    };

	    function fnUp(ev) {
	        // 吸附
	        fitToGrid();
	        hideChannel();
	        // 数格子
	        if (direction) {
	            //如果操作没产生移动，就不保存数据，也不重新计算标注
	            var curShape = _controlData2.default.controlData.shapes[_controlData2.default.controlData.cur];
	            var curData = curShape.steps[curShape.curStep];
	            if (_util2.default.gridNum(shape.offsetLeft) != curData.x || _util2.default.gridNum(shape.offsetTop) != curData.y) {
	                _util2.default.saveData();
	                (0, _controlButton.operateState)();
	                (0, _setGridNum2.default)(_controlData2.default.operType.move);
	                showTips(direction);
	            }
	        }
	        direction = null;

	        _content.removeEventListener('mousemove', fnMove);
	        _content.removeEventListener('mouseup', fnUp);
	        _content.removeEventListener('mouseleave', fnUp);
	        _content.removeEventListener('touchmove', fnMove);
	        _content.removeEventListener('touchend', fnUp);
	    };

	    function moveShape(oEvent) {
	        var moveX = void 0,
	            moveY = void 0;
	        var width = _controlData2.default.gridSize * 25 - shape.offsetWidth;
	        var height = _controlData2.default.gridSize * 15 - shape.offsetHeight;

	        moveX = oEvent.clientX - disX;
	        moveY = oEvent.clientY - disY;
	        // 移动or吸附
	        if (direction == "left" || direction == "right") {
	            if (moveX < 0) {
	                moveX = 0;
	            }
	            if (moveX >= width) {
	                moveX = width;
	            }
	            shape.style.left = moveX + 'px';
	        } else if (direction == "top" || direction == "bottom") {
	            if (moveY <= 0) {
	                moveY = 0;
	            }
	            if (moveY >= height) {
	                moveY = height;
	            }
	            shape.style.top = moveY + 'px';
	        }
	    }
	    // 吸附
	    function fitToGrid() {
	        var pos = $(shape).position();
	        shape.style.left = _util2.default.gridNum(pos.left) * _controlData2.default.gridSizeEm + "em";
	        shape.style.top = _util2.default.gridNum(pos.top) * _controlData2.default.gridSizeEm + "em";
	    };

	    translate.unbindEvents = function () {
	        css_shape.removeEventListener('mousedown', fnDown);
	        css_shape.removeEventListener('touchstart', fnDown);
	    };
	    return this;
	}
	// 线框图处理
	function reflection(direction, relationPos, lastPos) {
	    if (direction == relationPos) {
	        return;
	    }
	    _util2.default.removeReflectionPoint(); // 新需求：移动时方向不同需要清除线框图上的点；
	    _controlData2.default.$content.find(".org").css({ "top": lastPos.top, "left": lastPos.left }).show();
	}
	// 通道及提示
	function showChannel() {
	    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getPos();

	    var content = _controlData2.default.$content[0];
	    var shape = content.querySelector(".cur");
	    var top = shape.offsetTop,
	        left = shape.offsetLeft;

	    var $horizontal = _controlData2.default.$content.find(".channel_horizontal");
	    var $vertical = _controlData2.default.$content.find(".channel_vertical");
	    if (direction == "left" || direction == "right") {
	        $vertical.hide();
	        $horizontal.css("top", top).show();
	    } else {
	        $horizontal.hide();
	        $vertical.css("left", left).show();
	    }
	}
	function hideChannel() {
	    _controlData2.default.$content.find(".graphtranslation_refercnceline").hide();
	}
	function hideTips() {
	    if (_controlData2.default.isEn()) {
	        hideTipsEn();
	    } else {
	        hideTipsDefault();
	    }
	}

	//默认隐藏文字（中文，日文）
	function hideTipsDefault() {
	    _controlData2.default.$content.find(".horizontal_txt").hide();
	    _controlData2.default.$content.find(".vertical_txt").hide();
	}
	//英文版隐藏文字
	function hideTipsEn() {
	    _controlData2.default.$view.find(".graphtranslation-en-tipbox").hide();
	}

	// 显示通道文字
	function showTips() {
	    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getPos();
	    var isPress = arguments[1];

	    if (_controlData2.default.controlData.showGrid == 0) {
	        hideTips();
	        return;
	    }
	    if (_controlData2.default.isEn()) {
	        showTipsEn(direction, isPress);
	    } else {
	        showTipsDefault(direction, isPress);
	    }
	}

	// 显示通道文字
	function showTipsEn() {
	    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getPos();
	    var isPress = arguments[1];

	    var curPos = _controlData2.default.$content.find(".cur").position();
	    var orgPos = _controlData2.default.$content.find(".org").position();
	    var _direction = void 0;
	    var tips = _controlData2.default.$view.find(".graphtranslation-en-tipbox");
	    if (direction == "left" || direction == "right") {
	        // 提示文字
	        if (isPress) {
	            _direction = _controlData2.default.i18n[direction];
	        } else {
	            _direction = curPos.left < orgPos.left ? _controlData2.default.i18n["left"] : _controlData2.default.i18n["right"];
	        }
	        var gridNum = _util2.default.gridNum(Math.abs(curPos.left - orgPos.left));
	        gridNum = isPress ? gridNum + 1 : gridNum;
	        if (gridNum == 0) {
	            tips.hide();
	            return;
	        }
	        tips.show().find("p").html(_util2.default.format(_controlData2.default.i18n['move_des'], gridNum, gridNum > 1 ? "s" : "", _direction));
	    } else if (direction == "top" || direction == "bottom") {
	        if (isPress) {
	            _direction = direction == "top" ? _controlData2.default.i18n["up"] : _controlData2.default.i18n["down"];
	        } else {
	            _direction = curPos.top < orgPos.top ? _controlData2.default.i18n["up"] : _controlData2.default.i18n["down"];
	        }

	        var _gridNum = _util2.default.gridNum(Math.abs(curPos.top - orgPos.top));
	        _gridNum = isPress ? _gridNum + 1 : _gridNum;
	        if (_gridNum == 0) {
	            tips.hide();
	            return;
	        }
	        tips.show().find("p").html(_util2.default.format(_controlData2.default.i18n['move_des'], _gridNum, _gridNum > 1 ? "s" : "", _direction));
	    } else {
	        hideTips();
	    }
	}

	// 显示通道文字
	function showTipsDefault() {
	    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getPos();
	    var isPress = arguments[1];

	    var curPos = _controlData2.default.$content.find(".cur").position();
	    var orgPos = _controlData2.default.$content.find(".org").position();
	    var _direction = void 0;
	    var horizontalTxt = _controlData2.default.$content.find(".horizontal_txt");
	    var verticalTxt = _controlData2.default.$content.find(".vertical_txt");
	    if (direction == "left" || direction == "right") {
	        verticalTxt.hide();
	        // 提示文字
	        if (isPress) {
	            _direction = _controlData2.default.i18n[direction];
	        } else {
	            _direction = curPos.left < orgPos.left ? _controlData2.default.i18n["left"] : _controlData2.default.i18n["right"];
	        }
	        var _center = (curPos.left + orgPos.left) / 2 - horizontalTxt.width() / 4;
	        var gridNum = _util2.default.gridNum(Math.abs(curPos.left - orgPos.left));
	        gridNum = isPress ? gridNum + 1 : gridNum;
	        if (gridNum == 0) {
	            horizontalTxt.hide();
	            return;
	        }
	        horizontalTxt.css({ "top": curPos.top, "left": _center }).html(_util2.default.format(_controlData2.default.i18n['move_des'], _direction, gridNum)).show();
	    } else if (direction == "top" || direction == "bottom") {
	        if (isPress) {
	            _direction = direction == "top" ? _controlData2.default.i18n["up"] : _controlData2.default.i18n["down"];
	        } else {
	            _direction = curPos.top < orgPos.top ? _controlData2.default.i18n["up"] : _controlData2.default.i18n["down"];
	        }
	        // 提示文字
	        horizontalTxt.hide();
	        var textNum = _controlData2.default.i18n['lang'] == 'ja' ? 8 : 7;
	        var topNum = 15 - textNum + 1;
	        var textHeight = _controlData2.default.gridSize * textNum;
	        var _center2 = (curPos.top + orgPos.top) / 2 - textHeight / 4;
	        var _gridNum2 = _util2.default.gridNum(Math.abs(curPos.top - orgPos.top));

	        if (_center2 > _controlData2.default.gridSize * topNum) {
	            _center2 = _controlData2.default.gridSize * topNum;
	        } else if (_center2 < -_controlData2.default.gridSize) {
	            _center2 = -_controlData2.default.gridSize;
	        }
	        _gridNum2 = isPress ? _gridNum2 + 1 : _gridNum2;
	        if (_gridNum2 == 0) {
	            verticalTxt.hide();
	            return;
	        }
	        verticalTxt.css({ "left": curPos.left + _controlData2.default.$content.find(".org").width() + _controlData2.default.gridSize, "top": _center2 }).html(_util2.default.format(_controlData2.default.i18n['move_des'], _direction, _gridNum2)).show();
	    } else {
	        // 撤销时若重叠没有方向问题
	        horizontalTxt.hide();
	        verticalTxt.hide();
	    }
	}

	// 获取相对位置
	function getPos() {
	    var curShape = _controlData2.default.curShapeData();
	    var curStep = curShape.steps[curShape.curStep];
	    var curPos = curStep.cur;
	    var orgPos = curStep.org ? curStep.org : {};
	    var pos = void 0; //当前图形相对于线框图的位置
	    if (curPos.y === orgPos.y) {
	        if (curPos.x === orgPos.x) {
	            return;
	        }
	        pos = curPos.x < orgPos.x ? "left" : "right";
	    } else if (curPos.x === orgPos.x) {
	        if (curPos.y === orgPos.y) {
	            return;
	        }
	        pos = curPos.y < orgPos.y ? "top" : "bottom";
	    }
	    return pos;
	}

	exports.showChannel = showChannel;
	exports.hideChannel = hideChannel;
	exports.reflection = reflection;
	exports.getPos = getPos;
	exports.showTips = showTips;
	exports.hideTips = hideTips;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.countGrid = countGrid;
	exports.removeGrid = removeGrid;
	exports.removeAllGrid = removeAllGrid;
	exports.getLastGrid = getLastGrid;

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (operType) {
	    if (!_controlData2.default.controlData.showGrid) return;
	    //当前进行操作的图形
	    var shapeName = _controlData2.default.controlData.cur;
	    var currentShape = _controlData2.default.controlData.shapes[shapeName];
	    var currentStep = currentShape.steps[currentShape.curStep];
	    if (!currentStep.grids || currentStep.grids.length == 0) return;
	    var currentGraph = currentStep["cur"];
	    var currentPoints = currentGraph.points;
	    var gridName = getLastGrid(shapeName);
	    var curIndex = -1;
	    for (var i = 0, len = currentPoints.length; i < len; i++) {
	        if (gridName == currentPoints[i]) {
	            curIndex = i;
	            continue;
	        }
	        var curPoint = {
	            x: currentGraph.x + _controlData2.default.preOffset[shapeName][nameToIndex(currentPoints[i])].x,
	            y: currentGraph.y + _controlData2.default.preOffset[shapeName][nameToIndex(currentPoints[i])].y
	        };
	        var corrPoint = getCorrPoint(currentShape, currentPoints[i]);
	        if (corrPoint) {
	            countGrid(curPoint, corrPoint, currentPoints[i], operType, false);
	        }
	    }
	    if (curIndex >= 0) {
	        var _curPoint = {
	            x: currentGraph.x + _controlData2.default.preOffset[shapeName][nameToIndex(currentPoints[curIndex])].x,
	            y: currentGraph.y + _controlData2.default.preOffset[shapeName][nameToIndex(currentPoints[curIndex])].y
	        };
	        var _corrPoint = getCorrPoint(currentShape, currentPoints[curIndex]);
	        if (_corrPoint) {
	            countGrid(_curPoint, _corrPoint, currentPoints[curIndex], operType, true);
	        }
	    }
	};

	/**
	 * 单个顶点的数格子操作
	 * @param currentPoint 当前点击的顶点
	 * @param orgPoint 对应的顶点
	 * @param name 当前点击的点的name属性值，用来为生成的格子对象加入该属性，方便后续的删除格子操作
	 */


	function countGrid(currentPoint, orgPoint, name, operType, isCurPoint) {
	    if (!_controlData2.default.controlData.showGrid) return;
	    var dire = "height";
	    var spans = "";
	    var gridData = getData(currentPoint, orgPoint);
	    var minX = Math.min(currentPoint.x, orgPoint.x);
	    var minY = Math.min(currentPoint.y, orgPoint.y);
	    var left = minX == 25 ? (minX - 1) * _controlData2.default.gridSize : minX * _controlData2.default.gridSize;
	    var top = minY == 15 ? (minY - 1) * _controlData2.default.gridSize : minY * _controlData2.default.gridSize;
	    var iNum = 0;
	    var timerId = void 0;
	    for (var i = 0, len = gridData.num; i < len; i++) {
	        spans += '<span></span>';
	    }
	    if (gridData.direction == "horizontal") {
	        dire = "width";
	    }

	    //原先的数格子变暗
	    // data.$content.find(".graphtranslation_range").addClass("blur");
	    // 修复bug68937
	    var _class = isCurPoint ? "" : "blur";
	    var des = _controlData2.default.isEn() ? _util2.default.format(_controlData2.default.i18n['grid_num'], gridData.num, gridData.num > 1 ? "s" : "") : _util2.default.format(_controlData2.default.i18n['grid_num'], gridData.num);
	    //数格子
	    var $gridDom = $('<div class="graphtranslation_range ' + _class + ' ' + gridData.direction + ' ' + name + '" style="' + dire + ': 0px; left:' + left + 'px; top:' + top + 'px; ">\n                    <div class="item_wrap">\n                        <div class="item_inner">' + spans + '</div>\n                    </div>\n                    <span class="txt" style="opacity:0;">' + des + '</span></div>');

	    if (gridData.num != 0) {
	        _controlData2.default.$content.append($gridDom);
	        // 如果是撤销，则没有动画
	        if (operType == _controlData2.default.operType.recovery || operType == _controlData2.default.operType.init && !_controlData2.default.controlData.grids[name]) {
	            if (dire == "width") {
	                $gridDom.css({ width: _controlData2.default.gridSize * gridData.num + 1 + "px" });
	            } else {
	                $gridDom.css({ height: _controlData2.default.gridSize * gridData.num + 1 + "px" });
	            }
	            $gridDom.find(".txt").css("opacity", 1);
	            return;
	        }
	        _controlData2.default.controlData.grids[name] = name;
	        run();
	        if (gridData.num < 2) return;
	        timerId = setInterval(run, 400);
	    }
	    function run() {
	        iNum++;
	        if (dire == "width") {
	            $gridDom.css({ width: _controlData2.default.gridSize * iNum + 1 + "px" });
	        } else {
	            $gridDom.css({ height: _controlData2.default.gridSize * iNum + 1 + "px" });
	        }
	        if (iNum >= gridData.num) {
	            clearInterval(timerId);
	            $gridDom.find(".txt").css("opacity", 1);
	            delete _controlData2.default.controlData.grids[name];
	            return;
	        }
	    }
	}

	/**
	 * 将name字符串转换为点的index
	 * @param name
	 * @returns {number}
	 */
	var nameToIndex = function nameToIndex(name) {
	    name = name.slice(1);
	    return parseInt(name) - 1;
	};

	/**
	 * 选取虚线框中的对应的点，如果没有则返回false
	 * @param currentShape 当前的预设图形
	 * @param name  当前点的name属性
	 * @returns {*}
	 */
	var getCorrPoint = function getCorrPoint(currentShape, name) {
	    var curGraph = currentShape.steps[currentShape.curStep]["cur"];
	    var orgGraph = currentShape.steps[currentShape.curStep]["org"];
	    var oraGraph = currentShape.steps[currentShape.curStep]["ora"];
	    var orgPoints = orgGraph.points;
	    var oraPoints = oraGraph.points;
	    if (orgPoints.indexOf(name) != -1) {
	        return {
	            x: orgGraph.x + _controlData2.default.preOffset[_controlData2.default.controlData.cur][nameToIndex(name)].x,
	            y: orgGraph.y + _controlData2.default.preOffset[_controlData2.default.controlData.cur][nameToIndex(name)].y
	        };
	    }
	    if (curGraph.x != oraGraph.x && curGraph.y != oraGraph.y) return false;
	    if (oraPoints.indexOf(name) != -1) {
	        return {
	            x: oraGraph.x + _controlData2.default.preOffset[_controlData2.default.controlData.cur][nameToIndex(name)].x,
	            y: oraGraph.y + _controlData2.default.preOffset[_controlData2.default.controlData.cur][nameToIndex(name)].y
	        };
	    }
	    return false;
	};

	//获取两个点的距离和移动的方向
	var getData = function getData(currentPoint, orgPoint) {
	    var result = {};
	    if (currentPoint.x - orgPoint.x == 0) {
	        result.direction = "vertical";
	        result.num = Math.abs(currentPoint.y - orgPoint.y);
	    } else {
	        result.direction = "horizontal";
	        result.num = Math.abs(currentPoint.x - orgPoint.x);
	    }
	    return result;
	};

	//移除特定顶点的数格子的点亮格子以及虚线等
	function removeGrid(name) {
	    _controlData2.default.$content.find('.graphtranslation_range.' + name).remove();
	    _controlData2.default.controlData.grids[name] && delete _controlData2.default.controlData.grids[name];
	}

	//移除所有的数格子
	function removeAllGrid() {
	    _controlData2.default.$content.find(".graphtranslation_range").remove();
	    _controlData2.default.controlData.grids = {};
	}

	//获取最后一个画的格子
	function getLastGrid() {
	    var step = _controlData2.default.curShapeData().steps[_controlData2.default.curShapeData().curStep];
	    var grids = step.grids;
	    var curPoints = step.cur.points;
	    var orgPoints = step.org.points;
	    var oraPoints = step.ora.points;
	    for (var i = grids.length - 1; i >= 0; i--) {
	        var grid = grids[i];
	        var shapeName = grid.substr(0, 3);
	        var pointName = grid.substr(3, 2);
	        if (shapeName == "cur") {
	            if (orgPoints.indexOf(pointName) != -1) return pointName;
	            if (oraPoints.indexOf(pointName) != -1 && (step.cur.x == step.ora.x || step.cur.y == step.ora.y)) return pointName;
	        }

	        if (shapeName == "org") {
	            if (curPoints.indexOf(pointName) != -1) return pointName;
	        }
	        if (shapeName == "ora") {
	            if (curPoints.indexOf(pointName) != -1 && (step.cur.x == step.ora.x || step.cur.y == step.ora.y)) return pointName;
	        }
	    }
	}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = controlButton;
	exports.reload = reload;
	exports.operateState = operateState;

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _setGridNum = __webpack_require__(9);

	var _setGridNum2 = _interopRequireDefault(_setGridNum);

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	var _translate = __webpack_require__(8);

	var _moveButton = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function controlButton() {
	    operateState();
	    _controlData2.default.$view.find(".reset_hand").on("click", btnReset);
	    _controlData2.default.$view.find(".revoke").on("click", btnRevoke);
	    _controlData2.default.$view.find(".recovery").on("click", btnRecovery);

	    // data.$view.find(".reset_hand").find(".icon").on('touchstart', btnReset);
	    // data.$view.find(".revoke").find(".icon").on('touchstart', btnRevoke);
	    // data.$view.find(".recovery").find(".icon").on('touchstart', btnRecovery);

	    // 重置
	    function btnReset() {
	        if (!(0, _moveButton.getIsMoveEnd)()) return;
	        var shapeCur = _controlData2.default.$content.find(".cur");
	        var shapeOrg = _controlData2.default.$content.find(".org");
	        var shapeOra = _controlData2.default.$content.find(".ora");
	        var curShapeData = _controlData2.default.curShapeData();
	        var curShapeName = _controlData2.default.controlData.cur;
	        var initData = _controlData2.default.initData[curShapeName];
	        var initDataOra = _controlData2.default.initDataOra[curShapeName];
	        shapeCur[0].style.left = initData.x * _controlData2.default.gridSizeEm + "em";
	        shapeCur[0].style.top = initData.y * _controlData2.default.gridSizeEm + "em";
	        shapeOrg[0].style.left = initData.x * _controlData2.default.gridSizeEm + "em";
	        shapeOrg[0].style.top = initData.y * _controlData2.default.gridSizeEm + "em";
	        shapeCur.find(".spot").hide();
	        shapeOrg.find(".spot").hide();
	        shapeOra.find(".spot").hide();
	        (0, _setGridNum.removeAllGrid)();
	        (0, _translate.hideTips)();
	        var obj = { cur: { x: initData.x, y: initData.y, points: [] }, ora: { x: initDataOra.x, y: initDataOra.y, points: [] }, grids: [] };
	        curShapeData.steps.unshift(obj);
	        curShapeData.steps.length = 1;
	        curShapeData.curStep = 0;

	        operateState();
	    }

	    // 恢复
	    function btnRecovery() {
	        // do
	        if (!(0, _moveButton.getIsMoveEnd)()) return;
	        shapeOperate("recovery");
	    }

	    // 撤销
	    function btnRevoke() {
	        // undo
	        if (!(0, _moveButton.getIsMoveEnd)()) return;
	        shapeOperate("revoke");
	    }

	    function shapeOperate(op) {
	        if (!(0, _moveButton.getIsMoveEnd)()) return;
	        var curShapeData = _controlData2.default.curShapeData();
	        if (curShapeData.steps.length > 1) {
	            var isOperation = false;
	            if (op === "recovery" && curShapeData.curStep > 0) {
	                isOperation = true;
	                curShapeData.curStep -= 1;
	                operateState();
	            }

	            if (op === "revoke" && curShapeData.curStep < curShapeData.steps.length - 1) {
	                isOperation = true;
	                curShapeData.curStep += 1;
	                operateState();
	            }

	            if (isOperation) {
	                reload(_controlData2.default.operType.recovery);
	            }
	        }
	    }

	    controlButton.unbindEvents = function () {
	        _controlData2.default.$view.find(".reset_hand").off("click", btnReset);
	        _controlData2.default.$view.find(".revoke").off("click", btnRevoke);
	        _controlData2.default.$view.find(".recovery").off("click", btnRecovery);

	        // data.$view.find(".reset_hand").find(".icon").off('touchstart', btnReset);
	        // data.$view.find(".revoke").find(".icon").off('touchstart', btnRevoke);
	        // data.$view.find(".recovery").find(".icon").off('touchstart', btnRecovery);
	    };
	}

	//页面展现
	function reload(operType, shapeName) {
	    if (!shapeName) shapeName = _controlData2.default.controlData.cur;
	    var $content = _controlData2.default.$view.find("." + shapeName);
	    var shapeCur = $content.find(".cur");
	    var shapeOrg = $content.find(".org");
	    var shapeOra = $content.find(".ora");
	    var curShapeData = _controlData2.default.controlData.shapes[shapeName];
	    var curStep = curShapeData.steps[curShapeData.curStep];
	    var curData = curStep.cur;
	    shapeCur.find(".spot").hide();
	    shapeCur[0].style.left = curData.x * _controlData2.default.gridSizeEm + "em";
	    shapeCur[0].style.top = curData.y * _controlData2.default.gridSizeEm + "em";
	    var curPoints = curData.points;
	    for (var i = 0; i < curPoints.length; i++) {
	        shapeCur.find(".spot[name=" + curPoints[i] + "]").show();
	    }
	    var orgData = curStep.org;
	    if (orgData) {
	        shapeOrg[0].style.left = orgData.x * _controlData2.default.gridSizeEm + "em";
	        shapeOrg[0].style.top = orgData.y * _controlData2.default.gridSizeEm + "em";
	        shapeOrg.find(".spot").hide();
	        var orgPoints = orgData.points;
	        for (var _i = 0; _i < orgPoints.length; _i++) {
	            shapeOrg.find(".spot[name=" + orgPoints[_i] + "]").show();
	        }
	        if (orgData.x === curData.x && orgData.y === curData.y) {
	            (0, _translate.hideTips)();
	        } else {
	            (0, _translate.showTips)();
	        }
	    } else {
	        // shapeOrg.hide();
	        shapeOrg.find(".spot").hide();
	        (0, _translate.hideTips)();
	    }
	    if (curStep.ora) {
	        shapeOra.find(".spot").hide();
	        var oraPoints = curStep.ora.points;
	        for (var _i2 = 0; _i2 < oraPoints.length; _i2++) {
	            shapeOra.find(".spot[name=" + oraPoints[_i2] + "]").show();
	        }
	    } else {
	        shapeOra.find(".spot").hide();
	    }

	    if (operType !== _controlData2.default.operType.init) {
	        (0, _setGridNum.removeAllGrid)();
	        (0, _setGridNum2.default)(operType);
	    }
	}

	//撤销、恢复状态控制
	function operateState() {
	    var curShapeData = _controlData2.default.curShapeData();
	    if (curShapeData.steps.length > 1) {
	        if (curShapeData.curStep < curShapeData.steps.length - 1) {
	            _controlData2.default.$view.find(".revoke").removeClass("disabled");
	        }
	        if (curShapeData.curStep === curShapeData.steps.length - 1) {
	            _controlData2.default.$view.find(".revoke").addClass("disabled");
	        }
	        if (curShapeData.curStep > 0) {
	            _controlData2.default.$view.find(".recovery").removeClass("disabled");
	        }
	        if (curShapeData.curStep === 0) {
	            _controlData2.default.$view.find(".recovery").addClass("disabled");
	        }
	    } else {
	        _controlData2.default.$view.find(".revoke").addClass("disabled");
	        _controlData2.default.$view.find(".recovery").addClass("disabled");
	    }
	}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = moveButton;
	exports.getIsMoveEnd = getIsMoveEnd;

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _translate = __webpack_require__(8);

	var _setGridNum = __webpack_require__(9);

	var _setGridNum2 = _interopRequireDefault(_setGridNum);

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	var _controlButton = __webpack_require__(10);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var timerId;
	var animate;
	var isPress;
	function moveButton() {
	    var btns = _controlData2.default.$view.find(".pos_hand li");
	    var moveType = _controlData2.default.$view.find(".move_type a");

	    isPress = false;
	    var lastPos = void 0;
	    var cssEnd = void 0;

	    //切换移动方式
	    moveType.on("click", function () {
	        if (!getIsMoveEnd()) return;
	        $(this).toggleClass("on");
	        _controlData2.default.$view.find(".pos_hand").toggleClass("lianxu");
	        _controlData2.default.controlData.moveByStep = !_controlData2.default.controlData.moveByStep;
	    });

	    btns.click(function () {
	        var dir = $(this).attr("class");
	        if (dir == "mask") return;
	        _controlData2.default.controlData.dire = dir;
	        // 移除其他active
	        var _index = $(this).index();
	        btns.each(function (index) {
	            if (index == _index) return;
	            $(this).removeClass("active");
	        });

	        // 单格移动
	        if (_controlData2.default.controlData.moveByStep) {
	            if (!_controlData2.default.controlData.isMoveEnd) return;
	            fnDown();
	            isPress = false;
	            return;
	        }
	        // 连续移动
	        if ($(this).hasClass("active")) {
	            isPress = false;
	            $(this).removeClass("active");
	        } else {
	            $(this).addClass("active");
	            fnDown();
	        }

	        // 处理tip添加class
	        var _class = "tip_" + _controlData2.default.controlData.dire;
	        _controlData2.default.$view.find(".gtrans_pos_prompt").hide().attr("class", "gtrans_pos_prompt").addClass(_class);
	        clearTimeout(timerId);
	    });

	    function fnDown() {
	        var shape = _controlData2.default.$content.find(".cur");

	        // 只有移动过才会保存数据，更新状态
	        if (_util2.default.gridNum(shape.position().left) == 0 && _controlData2.default.controlData.dire == "left" || _util2.default.gridNum(shape.position().top) == 0 && _controlData2.default.controlData.dire == "top" || _util2.default.gridNum(shape.position().left) == 21 && _controlData2.default.controlData.dire == "right" || _util2.default.gridNum(shape.position().top + shape.height()) == 15 && _controlData2.default.controlData.dire == "bottom") {
	            btns.removeClass("active");
	            isPress = false;
	            return;
	        }
	        if (!isPress) {
	            isPress = true;
	            if (!_controlData2.default.controlData.isMoveEnd) return;
	            (0, _setGridNum.removeAllGrid)();
	            isMove(true);
	        }
	    }

	    function isMove(isStart) {
	        if (!isPress) {
	            setMove();
	            return;
	        }
	        if (_controlData2.default.controlData.dire != _controlData2.default.orgDir || isStart) {
	            if (!isStart) setMove();
	            var shape = _controlData2.default.$content.find(".cur");
	            lastPos = shape.position();
	            var relationPos = (0, _translate.getPos)();
	            (0, _translate.reflection)(_controlData2.default.controlData.dire, relationPos, lastPos);
	            _controlData2.default.orgDir = _controlData2.default.controlData.dire;
	        }
	        move();
	    }
	    function setMove() {
	        (0, _setGridNum.removeAllGrid)();
	        _controlData2.default.controlData.isMoveEnd = true;
	        (0, _translate.hideChannel)();
	        _util2.default.saveData();
	        (0, _controlButton.operateState)();
	        if (!isPress) (0, _setGridNum2.default)(_controlData2.default.operType.move);
	    }
	    function moveEnd() {
	        // 按钮弹起
	        btns.removeClass("active");
	        isPress = false;
	        setMove();
	    }
	    function move() {
	        _controlData2.default.controlData.isMoveEnd = false;
	        var shape = _controlData2.default.$content.find(".cur");
	        var dis = 0;
	        var width = 25 - _util2.default.gridNum(shape.width());
	        var height = 15 - _util2.default.gridNum(shape.height());
	        switch (_controlData2.default.controlData.dire) {
	            case "left":
	                dis = _util2.default.gridNum(shape.position().left) - 1; //坐标四舍五入会有偏差，改用格子数
	                if (dis < 0) {
	                    moveEnd();return;
	                }
	                cssEnd = { "left": dis * _controlData2.default.gridSizeEm + "em" };
	                animate = shape.animate(cssEnd, 1000, "linear", isMove);
	                break;
	            case "right":
	                dis = _util2.default.gridNum(shape.position().left) + 1;
	                if (dis > width) {
	                    moveEnd();return;
	                }
	                cssEnd = { "left": dis * _controlData2.default.gridSizeEm + "em" };
	                animate = shape.animate(cssEnd, 1000, "linear", isMove);
	                break;
	            case "top":
	                dis = _util2.default.gridNum(shape.position().top) - 1;
	                if (dis < 0) {
	                    moveEnd();return;
	                }
	                cssEnd = { "top": dis * _controlData2.default.gridSizeEm + "em" };
	                animate = shape.animate(cssEnd, 1000, "linear", isMove);
	                break;
	            case "bottom":
	                dis = _util2.default.gridNum(shape.position().top) + 1;
	                if (dis > height) {
	                    moveEnd();return;
	                }
	                cssEnd = { "top": dis * _controlData2.default.gridSizeEm + "em" };
	                animate = shape.animate(cssEnd, 1000, "linear", isMove);
	                break;
	        }
	        (0, _translate.showChannel)(_controlData2.default.controlData.dire);
	        (0, _translate.showTips)(_controlData2.default.controlData.dire, isPress);
	    }

	    this.stopAnimate = function () {
	        if (!_controlData2.default.controlData.isMoveEnd) {
	            animate.stop().css(cssEnd);
	            moveEnd();
	        }
	    };
	}
	function getIsMoveEnd() {
	    if (isPress) {
	        if (!_controlData2.default.controlData.moveByStep) {
	            var prompt = _controlData2.default.$view.find(".gtrans_pos_prompt");
	            prompt.show();
	            timerId = setTimeout(function () {
	                prompt.hide();
	            }, 2000);
	        }
	        return false;
	    }
	    if (!_controlData2.default.controlData.isMoveEnd) {
	        return false;
	    }
	    return true;
	}

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.bindEvent = bindEvent;
	exports.unbindEvent = unbindEvent;

	var _moveButton = __webpack_require__(11);

	var _moveButton2 = _interopRequireDefault(_moveButton);

	var _translate = __webpack_require__(8);

	var _translate2 = _interopRequireDefault(_translate);

	var _selectPoint = __webpack_require__(13);

	var _selectPoint2 = _interopRequireDefault(_selectPoint);

	var _selectVectButton = __webpack_require__(7);

	var _selectVectButton2 = _interopRequireDefault(_selectVectButton);

	var _controlButton = __webpack_require__(10);

	var _controlButton2 = _interopRequireDefault(_controlButton);

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function bindEvent() {
		_controlData2.default.$content = _controlData2.default.$view.find("." + _controlData2.default.controlData.cur);
		(0, _translate2.default)();
		_presenter2.default.moveButton = new _moveButton2.default();
		(0, _controlButton2.default)();
		_controlData2.default.$view.find('.graphtranslation_main_body').on("click", _selectPoint2.default);
		_controlData2.default.$view.find('.vertex').on("click", _selectVectButton2.default);
		_controlData2.default.$view.find('.list li').on("click", _selectVectButton.switchPreset);
		_controlData2.default.$view.find('.applicationset-switch').on("click", _selectVectButton.showGrid);
	}

	function unbindEvent() {
		_controlData2.default.$view.find('.graphtranslation_main_body').off("click", _selectPoint2.default);
		_controlData2.default.$view.find('.vertex').off("click", _selectVectButton2.default);
		_controlData2.default.$view.find('.list li').off("click", _selectVectButton.switchPreset);
		_controlData2.default.$view.find('.applicationset-switch').off("click", _selectVectButton.showGrid);
	}

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports.default = function (e) {
		e.preventDefault();
		if (!(0, _moveButton.getIsMoveEnd)()) return;
		if (!_controlData2.default.controlData.select) return;
		if (!_controlData2.default.isMove) {
			var clickPoint = isPoint(e, _controlData2.default.$content.offset().left, _controlData2.default.$content.offset().top, _controlData2.default.gridSize);
			if (clickPoint) {
				var isVertex = isGraphPoint(clickPoint.x, clickPoint.y, _controlData2.default.controlData.cur);
				//是顶点
				if (isVertex) {
					//当前进行操作的图形
					var currentShape = _controlData2.default.controlData.shapes[_controlData2.default.controlData.cur];
					//如果图形顶点已经被点击，那么取消点击
					var currentStep = currentShape.steps[currentShape.curStep];
					var points = currentStep[isVertex.graph].points;
					var shape = _controlData2.default.$content.find("." + isVertex.graph);
					var gridAction = void 0;
					if (points.indexOf(isVertex.name) != -1) {
						gridAction = "splice";
						shape.find('.spot[name=' + isVertex.name + ']').hide();
					} else {
						shape.find('.spot[name=' + isVertex.name + ']').show();
						//当前点击点的对应图形上的顶点					
						var grid = isCountGrid(isVertex.name, isVertex.graph, currentShape, isVertex.offsetIndex);
						if (grid) {
							(0, _setGridNum.removeGrid)(isVertex.name);
							_controlData2.default.$content.find(".graphtranslation_range").addClass("blur");
							(0, _setGridNum.countGrid)(clickPoint, grid, isVertex.name, _controlData2.default.operType.point, true);
						};
						gridAction = "push";
					}
					_util2.default.saveData();
					(0, _controlButton.operateState)();
					if (gridAction) {
						var newStep = currentShape.steps[currentShape.curStep];
						var grids = newStep.grids;
						if (gridAction == "splice") {
							//点亮上一个格子
							if (grids.length != 0) {
								var $gridDom = _controlData2.default.$content.find('.graphtranslation_range.' + (0, _setGridNum.getLastGrid)());
								$gridDom.removeClass("blur");
							}
							if (isVertex.graph != "ora" || isVertex.graph == "ora" && !hasPoint("org", isVertex.name)) {
								(0, _setGridNum.removeGrid)(isVertex.name);
							}
							// 删除org上的点时，判断ora上有没有对应的点
							if (isVertex.graph == "org" && hasPoint("ora", isVertex.name)) {

								var _grid = isCountGrid(isVertex.name, "ora", currentShape, isVertex.offsetIndex);
								if (_grid) {
									_controlData2.default.$content.find(".graphtranslation_range").addClass("blur");
									var ora = currentStep.ora;
									var num = isVertex.name.substring(1, 2) - 1;
									var pos = _controlData2.default.preOffset.shape2[num];
									var _clickPoint = { x: ora.x + pos.x, y: ora.y + pos.y };
									(0, _setGridNum.countGrid)(_clickPoint, _grid, isVertex.name, _controlData2.default.operType.point, true);
									grids.push("ora" + isVertex.name);
								};
							}
						} else {
							grids.push(isVertex.graph + isVertex.name);
						}
					}
				}
			}
		}
		_controlData2.default.isMove = false;
	};

	var _setGridNum = __webpack_require__(9);

	var _setGridNum2 = _interopRequireDefault(_setGridNum);

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	var _controlButton = __webpack_require__(10);

	var _moveButton = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hasPoint(shape, pointName) {
		var currentShape = _controlData2.default.controlData.shapes[_controlData2.default.controlData.cur];
		var points = currentShape.steps[currentShape.curStep][shape].points;
		for (var i = 0, len = points.length; i < len; i++) {
			if (points[i] == pointName) {
				return true;
			}
		}
		return false;
	}

	// 图形上对应的顶点是否已经被点击，如果有被点击，那么要进行数格子,返回对应点的坐标
	var isCountGrid = function isCountGrid(pointName, graph, currentShape, offsetIndex) {
		var shapeCur = currentShape.steps[currentShape.curStep].cur;
		var shapeOrg = currentShape.steps[currentShape.curStep].org;
		var shapeOra = currentShape.steps[currentShape.curStep].ora;
		var pointsCur = shapeCur.points;
		var pointsOrg = shapeOrg ? shapeOrg.points : [];
		var pointsOra = shapeOra ? shapeOra.points : [];
		// 橙色,优先级最低
		if (graph == "ora") {
			if (shapeOra && shapeCur.x != shapeOra.x && shapeCur.y != shapeOra.y) return;
			// 若白色线框图有且有相同点，则return false不作数格子操作
			if (checkSamePoint(pointsOrg, shapeOrg)) {
				return false;
			}
			// 查蓝色图
			return checkSamePoint(pointsCur, shapeCur);
		}
		// 蓝色图
		if (graph == "cur") {
			// 优先查找白色图
			var _data = checkSamePoint(pointsOrg, shapeOrg);
			if (_data) {
				return _data;
			}
			if (shapeOra && shapeCur.x != shapeOra.x && shapeCur.y != shapeOra.y) return;
			//查橙色图
			return checkSamePoint(pointsOra, shapeOra);
		}

		// 白色图
		if (graph == "org") {
			// 查蓝色图
			var _data2 = checkSamePoint(pointsCur, shapeCur);
			if (_data2) {
				return _data2;
			}
		}

		// 是否有相同点
		function checkSamePoint(points, shape) {
			if (points.indexOf(pointName) > -1) {
				return {
					x: shape.x + _controlData2.default.preOffset[_controlData2.default.controlData.cur][offsetIndex].x,
					y: shape.y + _controlData2.default.preOffset[_controlData2.default.controlData.cur][offsetIndex].y
				};
			}
			return false;
		}
	};

	//当前点击的点是否在交点处，如果是，返回该点的坐标点
	var isPoint = function isPoint(e, x, y, width) {
		var result = {};
		var angleTolerance = _controlData2.default.tolerance * _controlData2.default.fontSize / 2; //实际点击的容差范围
		var resultX = e.clientX - x;
		var resultY = e.clientY - y;
		var x1 = Math.floor(resultX / width); //取除数的整数
		var x2 = resultX % width;
		if (x2 > angleTolerance && x2 < width - angleTolerance) {
			return false;
		}
		result.x = x1;
		if (x2 >= width - angleTolerance) {
			result.x += 1;
		}
		var y1 = Math.floor(resultY / width); //取除数的整数
		var y2 = resultY % width;
		if (y2 > angleTolerance && y2 < width - angleTolerance) {
			return false;
		}
		result.y = y1;
		if (y2 >= width - angleTolerance) {
			result.y += 1;
		}
		return result;
	};

	//x,y是当前点击点的坐标值,shape的值是当前的预设图形的值，即data.controlData.cur
	var isGraphPoint = function isGraphPoint(x, y, shape) {
		var graphOffset = _controlData2.default.preOffset[shape];
		//当前进行操作的图形
		var currentShape = _controlData2.default.controlData.shapes[shape];
		var cur = currentShape.steps[currentShape.curStep].cur;
		var org = currentShape.steps[currentShape.curStep].org;
		var ora = currentShape.steps[currentShape.curStep].ora;
		for (var i = 0, len = graphOffset.length; i < len; i++) {
			if (x == cur.x + graphOffset[i].x && y == cur.y + graphOffset[i].y) {
				return { name: "a" + (i + 1), graph: "cur", offsetIndex: i };
			}
		}
		if (org) {
			for (var _i = 0, _len = graphOffset.length; _i < _len; _i++) {
				if (x == org.x + graphOffset[_i].x && y == org.y + graphOffset[_i].y) {
					return { name: "a" + (_i + 1), graph: "org", offsetIndex: _i };
				}
			}
		}
		if (ora) {
			for (var _i2 = 0, _len2 = graphOffset.length; _i2 < _len2; _i2++) {
				if (x == ora.x + graphOffset[_i2].x && y == ora.y + graphOffset[_i2].y) {
					return { name: "a" + (_i2 + 1), graph: "ora", offsetIndex: _i2 };
				}
			}
		}
		return false;
	};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (view) {
	    var $foot = $(view).find(".graphtranslation_foot");
	    $foot.find(".vertex .txt").html(_controlData2.default.i18n["select_point"]); //选择顶点
	    $foot.find(".graphtranslation_vertex_prompt .con_detail").html(_controlData2.default.i18n["point_tip"]); //现在可以在图形上标点了
	    $foot.find(".revoke .txt").text(_controlData2.default.i18n["revoke"]); //撤销
	    $foot.find(".recovery .txt").text(_controlData2.default.i18n["recover"]); //恢复
	    $foot.find(".reset_hand .txt").text(_controlData2.default.i18n["reset"]); //重置
	    $foot.find(".bg_hand .txt").html(_controlData2.default.i18n["show_grid"]); //显示格数
	    $(view).find(".gtrans_pos_prompt .con_detail").html(_controlData2.default.i18n["worn_tip"]); // 请先停止平移图形
	    $(view).find(".single_step").text(_controlData2.default.i18n["single_step"]); // 单格平移
	    $(view).find(".multi_step").html(_controlData2.default.i18n["multi_step"]); // 连续平移
	    $(view).find('.graphtranslation_translate').addClass("lang_" + _controlData2.default.i18n["lang"]);
	};

/***/ }),
/* 15 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (view, ratio) {
	  var $view = $(view);
	  var reflection = $view.find('.reflection');
	  var horizontalTxt = $view.find('.horizontal_txt');
	  var verticalTxt = $view.find('.vertical_txt');
	  var parallelRefercncelineH = $view.find('.graphtranslation_refercnceline.horizontal');
	  var parallelRefercncelineV = $view.find('.graphtranslation_refercnceline.vertical');
	  var graphtranslationRangeVertical = $view.find('.graphtranslation_range.vertical');
	  var graphtranslationRangeHorizontal = $view.find('.graphtranslation_range.horizontal');
	  $view.find('.applicationset-switch').removeClass('animated');
	  reflection.each(function () {
	    relocateDom(this, ratio);
	  });
	  horizontalTxt.each(function () {
	    relocateDom(this, ratio);
	  });
	  verticalTxt.each(function () {
	    relocateDom(this, ratio);
	  });
	  parallelRefercncelineH.each(function () {
	    relocateDom(this, ratio);
	  });
	  parallelRefercncelineV.each(function () {
	    relocateDom(this, ratio);
	  });
	  graphtranslationRangeVertical.each(function () {
	    relocateDom(this, ratio);
	    $(this).css('height', parseFloat($(this).css('height')) * ratio);
	  });
	  graphtranslationRangeHorizontal.each(function () {
	    relocateDom(this, ratio);
	    $(this).css('width', parseFloat($(this).css('width')) * ratio);
	  });
	};

	function relocateDom(elem, ratio) {
	  if (elem.style.left.indexOf('em') !== -1 || elem.style.top.indexOf('em') !== -1) return;
	  var $elem = $(elem);
	  var left = parseFloat($elem.css('left'));
	  var top = parseFloat($elem.css('top'));
	  if (!isNaN(left)) {
	    $elem.css({
	      'left': left * ratio,
	      'top': top * ratio
	    });
	  }
	} /**
	   * Created by Administrator on 2017/7/18 0018.
	   */

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (path) {
	    _presenter2.default.path = path;
	};

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function () {
	  //解除绑定的Module事件
	  (0, _event.unbindEvent)();
	};

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _event = __webpack_require__(12);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	    var question_id = '',
	        question_url = '';
	    if (_presenter2.default.model !== undefined) {
	        try {
	            question_id = _presenter2.default.model.question_id;
	            question_url = JSON.stringify(_presenter2.default.model.question_url);
	        } catch (e) {
	            console.log('json stringify failed');
	        }
	    }
	    return {
	        id: question_id,
	        dispatchOnly: true,
	        type_code: 'GraphMovement_Translation',
	        type_name: '平移图形',
	        url: question_url,
	        notExistStatistics: true,
	        noNeedQuizProgress: true
	    };
	}; /**
	    * Created by liuyuanpeng on 2016/6/23.
	    */

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	var _util = __webpack_require__(3);

	var _util2 = _interopRequireDefault(_util);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
		var outputData = _util2.default.cloneObj(_controlData2.default.controlData);
		for (var i = 1; i < 5; i++) {
			var name = "shape" + i;
			var currentShape = outputData.shapes[name];
			var step = currentShape.steps[currentShape.curStep];
			if (name == outputData.cur && !_controlData2.default.controlData.isMoveEnd && _controlData2.default.orgDir != _controlData2.default.controlData.dire) {
				step = _util2.default.getStepData(true);
			}
			currentShape.steps = [step];
			currentShape.curStep = 0;
		}
		var result = {
			width: "100%",
			gTran: outputData
		};
		return result;
	};

/***/ }),
/* 20 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    $(".graphtranslation_translate").addClass("graphtranslation_wrapper_student");
	};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
					value: true
	});

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (controller) {
					var eventBus = controller.getEventBus();
					eventBus.addEventListener("PLAYER.TOOL.MAXIMIZE", _presenter2.default);
					eventBus.addEventListener("PLAYER.TOOL.MINIMIZE", _presenter2.default);
	};

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (eventName, event) {
	    switch (eventName) {
	        case "PLAYER.TOOL.MAXIMIZE":
	            break;
	        case "PLAYER.TOOL.MINIMIZE":
	            _presenter2.default.moveButton.stopAnimate();
	            console.log(_controlData2.default.$content.find(".cur").css('top'));
	            break;
	        default:
	            break;
	    }
	};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _controlData = __webpack_require__(4);

	var _controlData2 = _interopRequireDefault(_controlData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (obj) {
	    _controlData2.default.langType = obj._lang_;
	};

/***/ })
/******/ ]);]]></presenter><resources><file src="./resources/wood/images/arrowhead_dashed.png"/><file src="./resources/wood/images/arrowhead_normal.png"/><file src="./resources/wood/images/arrowhead_shadow.png"/><file src="./resources/wood/images/icon_arrow_sx_active.png"/><file src="./resources/wood/images/icon_arrow_sx.png"/><file src="./resources/wood/images/icon_arrow_zsyx_active.png"/><file src="./resources/wood/images/icon_arrow_zsyx.png"/><file src="./resources/wood/images/icon_arrow_zy_active.png"/><file src="./resources/wood/images/icon_arrow_zy.png"/><file src="./resources/wood/images/icon_cexiao_active.png"/><file src="./resources/wood/images/icon_cexiao_dis.png"/><file src="./resources/wood/images/icon_cexiao.png"/><file src="./resources/wood/images/icon_dingdian_active.png"/><file src="./resources/wood/images/icon_dingdian.png"/><file src="./resources/wood/images/icon_huifu_active.png"/><file src="./resources/wood/images/icon_huifu_dis.png"/><file src="./resources/wood/images/icon_huifu.png"/><file src="./resources/wood/images/icon_lingxing_active.png"/><file src="./resources/wood/images/icon_lingxing.png"/><file src="./resources/wood/images/icon_reset_active.png"/><file src="./resources/wood/images/icon_reset_dis.png"/><file src="./resources/wood/images/icon_reset.png"/><file src="./resources/wood/images/lianxu_step.png"/><file src="./resources/wood/images/line_bottom.png"/><file src="./resources/wood/images/main_line_bg.png"/><file src="./resources/wood/images/one_step.png"/><file src="./resources/wood/images/parallel_normal.png"/><file src="./resources/wood/images/parallel_shadow.png"/><file src="./resources/wood/images/pos_b_act.png"/><file src="./resources/wood/images/pos_b.png"/><file src="./resources/wood/images/pos_l_act.png"/><file src="./resources/wood/images/pos_l.png"/><file src="./resources/wood/images/pos_r_act.png"/><file src="./resources/wood/images/pos_r.png"/><file src="./resources/wood/images/pos_t_act.png"/><file src="./resources/wood/images/pos_t.png"/></resources></addon>