<?xml version='1.0' encoding='UTF-8'?>
<addon id="templateid"><properties/><dependencies><jsDependency><javaScript name="common_css" version="1.0.0"/><javaScript name="tools_common" version="1.0.0"/></jsDependency></dependencies><css><![CDATA[.exam_skin_wood .bijiaofenshu_wrapper{width:100%;height:100%;position:relative;padding:4.79167em 7.5em 3.54167em;background:#bfd3e2}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box{width:10.66667em;height:32.45833em;padding:1.66667em .5em 1.58333em .58333em;overflow:hidden;background:url(resources/wood/images/cylinder_bg.png) no-repeat;background-size:100% 100%;position:relative;z-index:50}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box.cylinder_box_left{float:left;display:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box.cylinder_box_right{float:right;display:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box .cylinder_top_icon{pointer-events:none;width:100%;z-index:1000;height:100%;position:absolute;left:0;bottom:100%;background:url(resources/wood/images/dinggai_bg.png) no-repeat left bottom;background-size:100% auto;border-bottom-right-radius:16.66667em 2.08333em;border-bottom-left-radius:16.66667em 2.08333em}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box .cylinder_top_icon.only_one{border-radius:0}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box .cylinder_top_icon.cylinder_full{background:url(resources/wood/images/dinggai_bg_choice.png) no-repeat left bottom;background-size:100% auto}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_box .fractions_show_btn{clear:both}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail{width:100%;height:100%;position:relative}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail strong{pointer-events:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail strong b{pointer-events:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail.cylinder_f10 strong b{font-size:1.66667em}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail.cylinder_f20 strong b{font-size:1em}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail.cylinder_f30 strong b{font-size:.75em;margin-top:-.08333em!important}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail.cylinder_f40 strong b{margin-top:-.08333em!important;font-size:.66667em}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail.cylinder_f50 strong b{font-size:.5em;margin-top:-.08333em!important}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail .item{position:absolute;left:0;width:100%;height:100%;cursor:pointer;border-bottom-right-radius:8.75em 1.45833em;border-bottom-left-radius:8.75em 1.45833em;background:url(resources/wood/images/cylinder_bg_repeat.png) no-repeat center bottom;background-size:100% auto}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail .item:first-child .line{background:0 0}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail .item .line{background:url(resources/wood/images/cylinder_line.png) no-repeat center bottom;background-size:100% auto;width:100%;position:absolute;left:0;bottom:0;z-index:1000;height:18px;pointer-events:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail .item strong{position:absolute;left:50%;width:100%;bottom:0;-webkit-transform:translate(-50%,0);-ms-transform:translate(-50%,0);-moz-transform:translate(-50%,0);transform:translate(-50%,0);font-weight:400;z-index:1;pointer-events:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail .item strong b{position:absolute;left:50%;top:50%;margin-top:-1px;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-weight:400;z-index:1;color:#4d4d4d;pointer-events:none}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_detail .item.choice{background:url(resources/wood/images/cylinder_choice_bg.png) repeat-y center bottom;background-size:100% auto}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_zoom_box{width:13.33333em;height:13.33333em;position:absolute;z-index:99999;overflow:hidden;background:url(resources/wood/images/icon_fangdajing2.png) no-repeat left bottom;display:none;pointer-events:none;padding:.33333em;background-size:100% 100%}.exam_skin_wood .bijiaofenshu_wrapper .cylinder_zoom_box .cylinder_zoom_detail{border-radius:50%;overflow:hidden}.exam_skin_wood .bijiaofenshu_inner{position:absolute;left:50%;bottom:3.33333em;-webkit-transform:translate(-50%,0);-ms-transform:translate(-50%,0);-moz-transform:translate(-50%,0);transform:translate(-50%,0);padding:0 11.66667em}.exam_skin_wood .bijiaofenshu_inner .fractions{width:9.91667em;padding:0 .16667em;position:absolute;top:40%}.exam_skin_wood .bijiaofenshu_inner .fractions.fractions_left{left:0}.exam_skin_wood .bijiaofenshu_inner .fractions.fractions_right{right:0}.exam_skin_wood .bijiaofenshu_inner .fractions .fraction_num_box{height:100%;width:100%;height:4em;position:relative;border:1px solid #8b8b8b;border-radius:.625em;background:linear-gradient(to top,#fff 0,#e9e9e9 100%)}.exam_skin_wood .bijiaofenshu_inner .fractions .fraction_num_box.active{border:.125em solid #2daaec}.exam_skin_wood .bijiaofenshu_inner .fractions .num{height:3.16667em;overflow:hidden;margin:0 0 0 .75em;float:left;height:100%}.exam_skin_wood .bijiaofenshu_inner .fractions .num .num_ipt{background:0 0;width:1.45833em;text-align:center;font-size:3em;margin-top:0;font-weight:700;color:#4d4d4d;padding:0;height:100%}.exam_skin_wood .bijiaofenshu_inner .fractions .num.active{background:#afe2ff}.exam_skin_wood .bijiaofenshu_inner .fractions .arrow{width:3.16667em;height:3.16667em;overflow:hidden;background:url(resources/wood/images/fractions_arrow.png) no-repeat;background-size:100% 100%;position:absolute;right:.41667em;top:.41667em}.exam_skin_wood .bijiaofenshu_inner .fractions .arrow.active,.exam_skin_wood .bijiaofenshu_inner .fractions .arrow:active{background:url(resources/wood/images/fractions_arrow_active.png) no-repeat;background-size:100% 100%}.exam_skin_wood .bijiaofenshu_inner .fractions .fractions_line{background:#38393b;height:.25em;display:block;border-bottom:.08333em solid #fff;margin:1em 0}.exam_skin_wood .bijiaofenshu_inner .cylinder_wrapper{width:33.91667em;position:relative}.exam_skin_wood .bijiaofenshu_inner .cylinder_compare_line{border-bottom:4px dashed #0a94d0;position:absolute;width:13.625em;position:absolute;left:50%;margin-left:-6.79167em;z-index:1;display:none}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box{text-align:center;position:relative;z-index:2;height:33.70833em}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip{width:8.66667em;position:absolute;left:50%;top:46.5%;-webkit-transform:translate(-50%,0);-ms-transform:translate(-50%,0);-moz-transform:translate(-50%,0);transform:translate(-50%,0);height:6.66667em;overflow:hidden;text-align:center;-webkit-perspective:1000px;perspective:1000px}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .list{position:absolute;left:0;top:0}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip{-webkit-backface-visibility:hidden;-webkit-transform:translateX(0);backface-visibility:hidden;transform:translateX(0)}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip.out{-webkit-transform:rotateY(-90deg) scale(.9);-webkit-animation-name:flipouttoleft;-webkit-animation-duration:250ms;transform:rotateY(-90deg) scale(.9);animation-name:flipouttoleft;animation-duration:250ms}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip.in{-webkit-animation-name:flipintoright;-webkit-animation-duration:.3s;animation-name:flipintoright;animation-duration:.3s}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip.end{-webkit-transform:rotateY(-90deg) scale(.9);transform:rotateY(-90deg) scale(.9)}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip.start{-webkit-transform:rotateY(0);transform:rotateY(0)}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip.out.reverse{-webkit-transform:rotateY(90deg) scale(.9);-webkit-animation-name:flipouttoright;transform:rotateY(90deg) scale(.9);animation-name:flipouttoright}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip .flip.in.reverse{-webkit-animation-name:flipintoleft;animation-name:flipintoleft}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .compare_btn{display:block;width:99%;border:1px solid #397274;background:url(resources/wood/images/jeyboard_hd.png) repeat-x;background-size:100% 100%;border-radius:.41667em;line-height:6.16667em}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .compare_btn span{font-size:1.83333em;color:#384650}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .compare_res{background:url(resources/wood/images/bjan_bg_filp.png) repeat-x;background-size:auto 100%;border-radius:.41667em;position:absolute;width:100%;height:100%;overflow:hidden;line-height:6.16667em}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .compare_res span{font-size:6.25em;color:#fff}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .showtoggle_btn{margin-top:92%}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .showtoggle_btn span{color:#384650;font-size:1.83333em}.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .showtoggle_btn .active span,.exam_skin_wood .bijiaofenshu_inner .hand_btn_box .showtoggle_btn :active span{color:#fff}.exam_skin_wood .bijiaofenshu_inner .fractions_sel_list{border:1px solid #686868;background:#ebebeb;padding:.41667em;position:absolute;max-width:21.5em;z-index:100;font-size:.9em}.exam_skin_wood .bijiaofenshu_inner .fractions_sel_list a{width:3.66667em;height:2.25em;line-height:2.25em;float:left;color:#4d4d4d;background:#fff;text-align:center;border-radius:.20833em;border:1px solid #9c9c9c;margin:.20833em}.exam_skin_wood .bijiaofenshu_inner .fractions_sel_list a span{font-size:1.5em;vertical-align:top}.exam_skin_wood .bijiaofenshu_inner .fractions_sel_list a.active,.exam_skin_wood .bijiaofenshu_inner .fractions_sel_list a:active{background:#31b0ee;color:#fff;border-color:#007ab6}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list{border:1px solid #686868;background:#ebebeb;position:absolute;width:13.91667em;z-index:100;box-sizing:border-box}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .hd{height:1.66667em;background:url(resources/wood/images/jeyboard_hd.png) repeat-x;background-size:auto 100%;border-bottom:1px solid #bababa}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .hd .btn_close{overflow:hidden;float:right;cursor:pointer;height:1.625em;padding:.45833em .625em}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .hd .btn_close b{width:.79167em;height:.79167em;display:block;background:url(resources/wood/images/icon_close.png) no-repeat;background-size:100% 100%}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .hd .btn_close:hover{background:#d8d7d7}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .hd .btn_close:active{background:#d3d3d3}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd{padding:.41667em}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a{width:3.66667em;height:2.25em;line-height:2.25em;float:left;color:#4d4d4d;background:#fff;text-align:center;border-radius:.20833em;border:1px solid #9c9c9c;margin:.29167em}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a span{font-size:1.5em;vertical-align:top}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a .active,.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a:active{background:#31b0ee;color:#fff;border-color:#007ab6}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_enter span{font-size:1em}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_del{text-align:center}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_del span{width:1.125em;height:.83333em;display:block;margin:.3125em auto 0;overflow:hidden;background:url(resources/wood/images/icon_del_normal.png) no-repeat 0 0;background-size:100% 100%}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_del.active,.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_del:active{background:#31b0ee}.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_del.active span,.exam_skin_wood .bijiaofenshu_inner .fractions_keyboard_list .bd a.btn_del:active span{background:url(resources/wood/images/icon_del_active.png) no-repeat 0 0;background-size:100% 100%}@-webkit-keyframes flipouttoleft{from{-webkit-transform:rotateY(0)}to{-webkit-transform:rotateY(-90deg) scale(.9)}}@keyframes flipouttoleft{from{transform:rotateY(0)}to{transform:rotateY(-90deg) scale(.9)}}@-webkit-keyframes flipouttoright{from{-webkit-transform:rotateY(0)}to{-webkit-transform:rotateY(90deg) scale(.9)}}@keyframes flipouttoright{from{transform:rotateY(0)}to{transform:rotateY(90deg) scale(.9)}}@-webkit-keyframes flipintoleft{from{-webkit-transform:rotateY(-90deg) scale(.9)}to{-webkit-transform:rotateY(0)}}@keyframes flipintoleft{from{transform:rotateY(-90deg) scale(.9)}to{transform:rotateY(0)}}@-webkit-keyframes flipintoright{from{-webkit-transform:rotateY(90deg) scale(.9)}to{-webkit-transform:rotateY(0)}}@keyframes flipintoright{from{transform:rotateY(90deg) scale(.9)}to{transform:rotateY(0)}}.bijiaofenshu_student .bijiaofenshu_inner .fractions_sel_list{border-bottom:2px solid #686879;border-right:2px solid #686879;border-left:2px solid #686879;max-width:21.8em}.bijiaofenshu_student .bijiaofenshu_inner .fractions_keyboard_list{border-bottom:2px solid #686879;border-right:2px solid #686879;border-left:2px solid #686879}.bijiaofenshu_student .bijiaofenshu_inner .fractions .num .num_ipt{margin-top:-.1em}.typefaces_ru_RU .exam_skin_wood .bijiaofenshu_inner .hand_btn_box .btns_compare_flip{width:11em;margin-left:-5.5em;transform:translate(0,0)}.typefaces_ru_RU .exam_skin_wood .bijiaofenshu_inner .hand_btn_box .compare_btn{line-height:1.56667em;padding:1.5em 0;width:99%}.typefaces_ru_RU .exam_skin_wood .bijiaofenshu_inner .hand_btn_box .compare_btn span{font-size:1.33333em}.typefaces_ru_RU .exam_skin_wood .bijiaofenshu_inner .hand_btn_box .showtoggle_btn{position:absolute;margin-top:0;top:31.2em;left:50%;margin-left:-9em;width:18em;padding:0 1em}.typefaces_ru_RU .exam_skin_wood .bijiaofenshu_inner .hand_btn_box{z-index:52}]]></css><view><![CDATA[<div class="exam_skin_wood"><div class="bijiaofenshu_wrapper"><div class="bijiaofenshu_inner"><div class="fractions fractions_left"><div class="fraction_num_box"><span class="num"><input type="text" class="num_ipt" value="10" readonly="readonly"></span><a href="javascript:;" class="arrow"></a></div><span class="fractions_line"></span><div class="fraction_num_box"><span class="num"><input type="text" class="num_ipt" value="50" readonly="readonly"></span><a href="javascript:;" class="arrow"></a></div></div><div class="cylinder_wrapper"><div class="cylinder_box cylinder_box_left"><div class="cylinder_detail"><div class="cylinder_top_icon cylinder_full"></div></div></div><div class="cylinder_box cylinder_box_right"><div class="cylinder_detail"><div class="cylinder_top_icon cylinder_full"></div></div></div><div class="cylinder_compare_line" style="top:50%"></div><div class="hand_btn_box"><div class="btns_compare_flip" id="J_btns_compare_flip"><a href="javascript:;" class="compare_btn list flip"><span>比较大小</span> </a><a href="javascript:;" class="compare_res list flip"><span>></span></a></div><a class="com_btns btns-primary showtoggle_btn" href="javascript:;"><span>隐藏图形</span></a></div></div><div class="fractions fractions_right"><div class="fraction_num_box"><span class="num"><input type="text" class="num_ipt" value="10" readonly="readonly"></span><a href="javascript:;" class="arrow"></a></div><span class="fractions_line"></span><div class="fraction_num_box"><span class="num"><input type="text" class="num_ipt" value="50" readonly="readonly"></span><a href="javascript:;" class="arrow"></a></div></div><div class="fractions_sel_list clearfix" style="left:17%;top:-20%;display: none"><a href="javascript:;"><span>1</span></a> <a href="javascript:;"><span>2</span></a> <a href="javascript:;"><span>3</span></a> <a href="javascript:;"><span>4</span></a> <a href="javascript:;"><span>5</span></a> <a href="javascript:;"><span>6</span></a> <a href="javascript:;"><span>7</span></a> <a href="javascript:;"><span>8</span></a> <a href="javascript:;"><span>9</span></a> <a href="javascript:;"><span>10</span></a> <a href="javascript:;"><span>11</span></a> <a href="javascript:;"><span>12</span></a> <a href="javascript:;"><span>13</span></a> <a href="javascript:;"><span>14</span></a> <a href="javascript:;"><span>15</span></a> <a href="javascript:;"><span>16</span></a> <a href="javascript:;"><span>17</span></a> <a href="javascript:;"><span>18</span></a> <a href="javascript:;"><span>19</span></a> <a href="javascript:;"><span>20</span></a></div><div class="fractions_keyboard_list clearfix" style="left:58.9%;top:59.0%;display: none"><div class="hd"><span class="btn_close"><b></b></span></div><div class="bd clearfix"><a href="javascript:;"><span>1</span></a> <a href="javascript:;"><span>2</span></a> <a href="javascript:;"><span>3</span></a> <a href="javascript:;"><span>4</span></a> <a href="javascript:;"><span>5</span></a> <a href="javascript:;"><span>6</span></a> <a href="javascript:;"><span>7</span></a> <a href="javascript:;"><span>8</span></a> <a href="javascript:;"><span>9</span></a> <a href="javascript:;" class="btn_del"><span></span></a> <a href="javascript:;"><span>0</span></a> <a href="javascript:;" class="btn_enter"><span>Enter</span></a></div></div></div><div class="cylinder_zoom_box zoomTool"><div class="cylinder_zoom_detail zoomToolDetail"></div></div></div></div>]]></view><presenter><![CDATA[/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	window.AddonCompareFraction_create = function () {
	  return _presenter2.default;
	};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _run = __webpack_require__(3);

	var _run2 = _interopRequireDefault(_run);

	var _resizeScreen = __webpack_require__(20);

	var _resizeScreen2 = _interopRequireDefault(_resizeScreen);

	var _destroy = __webpack_require__(21);

	var _destroy2 = _interopRequireDefault(_destroy);

	var _setPlayerController = __webpack_require__(22);

	var _setPlayerController2 = _interopRequireDefault(_setPlayerController);

	var _onEventReceived = __webpack_require__(23);

	var _onEventReceived2 = _interopRequireDefault(_onEventReceived);

	var _getService = __webpack_require__(24);

	var _getService2 = _interopRequireDefault(_getService);

	var _setLangType = __webpack_require__(27);

	var _setLangType2 = _interopRequireDefault(_setLangType);

	var _initStudentMobile = __webpack_require__(28);

	var _initStudentMobile2 = _interopRequireDefault(_initStudentMobile);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  run: _run2.default,
	  destroy: _destroy2.default,
	  setPlayerController: _setPlayerController2.default,
	  onEventReceived: _onEventReceived2.default,
	  getService: _getService2.default,
	  metaInfo: {
	    name: 'CompareFraction',
	    type: PresenterType.PRESENTER_COMPONENT
	  },
	  setUrlParams: _setLangType2.default,
	  initStudentMobile: _initStudentMobile2.default,
	  getButton: function getButton() {
	    return {
	      left: '6.66667em',
	      bottom: '2.7em'
	    };
	  },
	  __interface: _resizeScreen2.default
	};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (view, model) {
	    return window.I18nManager.getInstance().loadLanguage('CompareFraction', _presenter2.default.langType).done(function (obj) {
	        _presenter2.default.i18n = obj.lang;
	        _presenter2.default.eventBus.addEventListener("PLAYER.TOOL.MINIMIZE", _presenter2.default);
	        (0, _presenterLogic2.default)(view, model, false);
	    });
	};

	var _presenterLogic = __webpack_require__(4);

	var _presenterLogic2 = _interopRequireDefault(_presenterLogic);

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (view, model, isPreview) {
	    // 将 model 值赋给 this
	    _presenter2.default.model = model;
	    // 将 view 值存入 presenter
	    _presenter2.default.view = view;

	    //多语言设置
	    (0, _initI18N2.default)();

	    // 管理dom
	    _presenter2.default.domManager = new _domManager2.default();

	    // 管理事件
	    _presenter2.default.eventManager = new _eventManager2.default();

	    //管理数据
	    _presenter2.default.dataManager = new _dataManager2.default();

	    //判断是否需要同步数据
	    if (model.__ExtendModel && !$.isEmptyObject(model.__ExtendModel) && model.__ExtendModel.compareFractionData) {
	        _presenter2.default.dataManager.setJsonString(model.__ExtendModel.compareFractionData);
	    } else {
	        _presenter2.default.dataManager.init();
	    }
	    _presenter2.default.eventManager.bindEvents();
	};

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _domManager = __webpack_require__(5);

	var _domManager2 = _interopRequireDefault(_domManager);

	var _eventManager = __webpack_require__(18);

	var _eventManager2 = _interopRequireDefault(_eventManager);

	var _dataManager = __webpack_require__(12);

	var _dataManager2 = _interopRequireDefault(_dataManager);

	var _initI18N = __webpack_require__(19);

	var _initI18N2 = _interopRequireDefault(_initI18N);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	reated by liuyuanpeng on 2016/6/28.
	

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _FractionView = __webpack_require__(6);

	var _FractionView2 = _interopRequireDefault(_FractionView);

	var _GraphView = __webpack_require__(9);

	var _GraphView2 = _interopRequireDefault(_GraphView);

	var _CompareView = __webpack_require__(14);

	var _CompareView2 = _interopRequireDefault(_CompareView);

	var _LineView = __webpack_require__(15);

	var _LineView2 = _interopRequireDefault(_LineView);

	var _SelectListView = __webpack_require__(16);

	var _SelectListView2 = _interopRequireDefault(_SelectListView);

	var _KeyboardListView = __webpack_require__(17);

	var _KeyboardListView2 = _interopRequireDefault(_KeyboardListView);

	var _constants = __webpack_require__(8);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var domManager = function () {
	    function domManager() {
	        _classCallCheck(this, domManager);

	        this.leftFractionView = new _FractionView2.default(_constants.VIEW_CLASS_NAME.LEFT_FRACTION_CLASS, this);
	        this.rightFractionView = new _FractionView2.default(_constants.VIEW_CLASS_NAME.RIGHT_FRACTION_CLASS, this);

	        this.selectListView = new _SelectListView2.default(_constants.VIEW_CLASS_NAME.SELECT_LIST_CLASS, this);
	        this.keyboardListView = new _KeyboardListView2.default(_constants.VIEW_CLASS_NAME.KEYBOARD_LIST_CLASS, this);

	        this.leftGraphView = new _GraphView2.default(_constants.VIEW_CLASS_NAME.LEFT_GRAPH_CLASS, this);
	        this.rightGraphView = new _GraphView2.default(_constants.VIEW_CLASS_NAME.RIGHT_GRAPH_CLASS, this);
	        this.compareView = new _CompareView2.default(_constants.VIEW_CLASS_NAME.COMPARE_CLASS, this);
	        this.lineView = new _LineView2.default(_constants.VIEW_CLASS_NAME.LINE_CLASS, this);
	    }

	    /*
	     *释放资源
	     */


	    _createClass(domManager, [{
	        key: 'dispose',
	        value: function dispose() {
	            this.leftFractionView.dispose();
	            this.leftFractionView = null;
	            this.rightFractionView.dispose();
	            this.rightFractionView = null;
	            this.leftGraphView.dispose();
	            this.leftGraphView = null;
	            this.rightGraphView.dispose();
	            this.rightGraphView = null;
	            this.compareView.dispose();
	            this.compareView = null;
	            this.lineView.dispose();
	            this.lineView = null;
	        }
	    }, {
	        key: 'getViewObject',
	        value: function getViewObject(viewClassName) {
	            switch (viewClassName) {
	                case _constants.VIEW_CLASS_NAME.LEFT_FRACTION_CLASS:
	                    return this.leftFractionView;
	                case _constants.VIEW_CLASS_NAME.RIGHT_FRACTION_CLASS:
	                    return this.rightFractionView;
	                case _constants.VIEW_CLASS_NAME.LEFT_GRAPH_CLASS:
	                    return this.leftGraphView;
	                case _constants.VIEW_CLASS_NAME.RIGHT_GRAPH_CLASS:
	                    return this.rightGraphView;
	                case _constants.VIEW_CLASS_NAME.SELECT_LIST_CLASS:
	                    return this.selectListView;
	                case _constants.VIEW_CLASS_NAME.KEYBOARD_LIST_CLASS:
	                    return this.keyboardListView;
	                case _constants.VIEW_CLASS_NAME.COMPARE_CLASS:
	                    return this.compareView;
	                case _constants.VIEW_CLASS_NAME.LINE_CLASS:
	                    return this.lineView;
	                default:
	                    return undefined;
	            }
	        }
	    }]);

	    return domManager;
	}();

	exports.default = domManager;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _BasicView2 = __webpack_require__(7);

	var _BasicView3 = _interopRequireDefault(_BasicView2);

	var _constants = __webpack_require__(8);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by liuyuanpeng on 2016/8/24.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	var FractionView = function (_BasicView) {
	    _inherits(FractionView, _BasicView);

	    function FractionView(className, parent) {
	        _classCallCheck(this, FractionView);

	        //当前是左边分数还是右边分数
	        var _this = _possibleConstructorReturn(this, (FractionView.__proto__ || Object.getPrototypeOf(FractionView)).call(this, className, parent));

	        _this.isLeft = className.indexOf("left") != -1;
	        //判断当前的圆柱类型
	        _this.graph_class = _this.isLeft ? _constants.VIEW_CLASS_NAME.LEFT_GRAPH_CLASS : _constants.VIEW_CLASS_NAME.RIGHT_GRAPH_CLASS;
	        return _this;
	    }

	    /**
	     * dataManager调用初始化分数数据
	     * @param left_numerator
	     * @param left_denominator
	     * @param right_numerator
	     * @param right_denominator
	     */


	    _createClass(FractionView, [{
	        key: 'initFractions',
	        value: function initFractions(left_numerator, left_denominator, right_numerator, right_denominator) {
	            var num_inputs = $(_presenter2.default.view).find('.num_ipt');
	            num_inputs.eq(0).val(left_numerator);
	            num_inputs.eq(1).val(left_denominator);
	            num_inputs.eq(2).val(right_numerator);
	            num_inputs.eq(3).val(right_denominator);
	        }

	        /**
	         * 输入框真实设置值和数据
	         * @param type
	         * @param value
	         */

	    }, {
	        key: 'setInputValue',
	        value: function setInputValue(type, value) {
	            var num_inputs = this.getView().find('.num_ipt');
	            value = parseInt(value);
	            //分子或分母
	            if (type.indexOf('Numerator') > -1) {
	                num_inputs.eq(0).val(value).change();
	                //设置圆柱分子
	                this.parent.getViewObject(this.graph_class).selItem(value, _presenter2.default.dataManager);
	            } else {
	                num_inputs.eq(1).val(value).change();
	                //设置圆柱分母
	                this.parent.getViewObject(this.graph_class).render(value, _presenter2.default.dataManager);
	                this.parent.getViewObject(this.graph_class).updateGraph(_presenter2.default.dataManager);
	                var dataType = type.replace(/Denominator$/, 'Numerator');
	                //分子大于分母时，自动等于新设置的分母
	                if (!this.isNumeratorValid(dataType, value)) {
	                    this.setInputValue(dataType, value);
	                }
	            }
	        }

	        /**
	         * 快速选择时，更新输入框的显示值
	         * @param type
	         * @param value
	         */

	    }, {
	        key: 'setValue',
	        value: function setValue(type, value) {
	            var num_inputs = this.getView().find('.num_ipt');
	            value = parseInt(value);
	            //分子或分母
	            if (type.indexOf('Numerator') > -1) {
	                num_inputs.eq(0).val(value).change();
	            } else {
	                num_inputs.eq(1).val(value).change();
	            }
	        }

	        /**
	         * 下拉列表状态和键盘状态，设置输入框选中态
	         * @param type
	         * @param fraction_box
	         */

	    }, {
	        key: 'inputSelected',
	        value: function inputSelected(type, fraction_box) {
	            //下拉列表的情况
	            if (type == _constants.VIEW_CLASS_NAME.SELECT_LIST_CLASS) {
	                fraction_box.addClass('active').find('.num').addClass('active').next().addClass('active');
	            } else if (type == _constants.VIEW_CLASS_NAME.KEYBOARD_LIST_CLASS) {
	                fraction_box.find('.num').addClass('active');
	            }
	        }

	        /**
	         * 取消输入框选中态
	         */

	    }, {
	        key: 'inputsUnSelected',
	        value: function inputsUnSelected() {
	            var fraction_boxs = $(_presenter2.default.view).find('.fraction_num_box');
	            fraction_boxs.removeClass('active').find('.num').removeClass('active').next().removeClass('active');
	        }

	        /**
	         * 分子是否有效
	         * @param type
	         * @param denominatorNum
	         * @returns {boolean}
	         */

	    }, {
	        key: 'isNumeratorValid',
	        value: function isNumeratorValid(type, denominatorNum) {
	            return _presenter2.default.dataManager[type] <= denominatorNum;
	        }
	    }, {
	        key: 'dispose',
	        value: function dispose() {
	            _get(FractionView.prototype.__proto__ || Object.getPrototypeOf(FractionView.prototype), 'dispose', this).call(this);
	            this.isLeft = null;
	            //判断当前的圆柱类型
	            this.graph_class = null;
	        }
	    }]);

	    return FractionView;
	}(_BasicView3.default);

	exports.default = FractionView;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	reated by liuyuanpeng on 2016/8/24.
	

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var BasicView = function () {
	    function BasicView(className, parent) {
	        _classCallCheck(this, BasicView);

	        this.view = $(_presenter2.default.view).find("." + className);
	        this.parent = parent;
	        this.className = className;
	    }

	    _createClass(BasicView, [{
	        key: "getView",
	        value: function getView() {
	            return this.view;
	        }
	    }, {
	        key: "reGetView",
	        value: function reGetView() {
	            this.view = $(_presenter2.default.view).find("." + this.className);
	            return this.view;
	        }
	    }, {
	        key: "dispose",
	        value: function dispose() {
	            this.view = null;
	            this.parent = null;
	        }
	    }, {
	        key: "setVisible",
	        value: function setVisible() {
	            var bShow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

	            if (bShow) {
	                this.view.show();
	            } else {
	                this.view.hide();
	            }
	        }
	    }, {
	        key: "getVisible",
	        value: function getVisible() {
	            return this.view.is(":visible");
	        }
	    }]);

	    return BasicView;
	}();

	exports.default = BasicView;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by liuyuanpeng on 2016/6/28.
	 */

	// 定义的dom结构类名
	var VIEW_CLASS_NAME = exports.VIEW_CLASS_NAME = {
	    LEFT_FRACTION_CLASS: 'fractions_left',
	    RIGHT_FRACTION_CLASS: 'fractions_right',

	    LEFT_GRAPH_CLASS: 'cylinder_box_left',
	    RIGHT_GRAPH_CLASS: 'cylinder_box_right',

	    SELECT_LIST_CLASS: 'fractions_sel_list ',
	    KEYBOARD_LIST_CLASS: 'fractions_keyboard_list ',

	    COMPARE_CLASS: 'btns_compare_flip',
	    LINE_CLASS: 'cylinder_compare_line'
	};

	// 比较大小结果类型
	var RESULT_TYPE = exports.RESULT_TYPE = {
	    RESULT_LARGER: '>',
	    RESULT_EQUAL: '=',
	    RESULT_SMALLER: '<'
	};

	// 数据属性
	var DATA_PROP = exports.DATA_PROP = {
	    LEFT_NUMERATOR: 'leftNumerator',
	    LEFT_DENOMINATOR: 'leftDenominator',
	    RIGHT_NUMERATOR: 'rightNumerator',
	    RIGHT_DENOMINATOR: 'rightDenominator',
	    SHOW_GRAPH: 'showGraph',
	    SHOW_RESULT: 'showResult',
	    RESULT: 'result'
	};

	//值属性
	var VALUE_PROP = exports.VALUE_PROP = {
	    MAX_VALUE: 20,
	    MIN_VALUE: 1
	};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _BasicView2 = __webpack_require__(7);

	var _BasicView3 = _interopRequireDefault(_BasicView2);

	var _ZoomTool = __webpack_require__(10);

	var _ZoomTool2 = _interopRequireDefault(_ZoomTool);

	var _dataManager = __webpack_require__(12);

	var _dataManager2 = _interopRequireDefault(_dataManager);

	var _constants = __webpack_require__(8);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by liuyuanpeng on 2016/8/24.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var GraphView = function (_BasicView) {
	  _inherits(GraphView, _BasicView);

	  function GraphView(className, parent) {
	    _classCallCheck(this, GraphView);

	    // 放大镜参数
	    var _this = _possibleConstructorReturn(this, (GraphView.__proto__ || Object.getPrototypeOf(GraphView)).call(this, className, parent));

	    _this.zoomTool = new _ZoomTool2.default({
	      // 放大目标元素
	      el: $(_presenter2.default.view).find('.' + className),
	      // 放大倍数
	      scale: 2
	    }, _this.zoomSelect.bind(_this));

	    // 当前是左边圆柱体还是右边圆柱体
	    _this.isleft = className.indexOf('left') != -1;
	    _this.cyDetail = _this.getView().find('.cylinder_detail');
	    // 分子
	    _this.numerator = _this.isleft ? _constants.DATA_PROP.LEFT_NUMERATOR : _constants.DATA_PROP.RIGHT_NUMERATOR;
	    // 分母
	    _this.denominator = _this.isleft ? _constants.DATA_PROP.LEFT_DENOMINATOR : _constants.DATA_PROP.RIGHT_DENOMINATOR;
	    _this.fractClass = _this.isleft ? _constants.VIEW_CLASS_NAME.LEFT_FRACTION_CLASS : _constants.VIEW_CLASS_NAME.RIGHT_FRACTION_CLASS;
	    return _this;
	  }

	  /**
	   * 放大镜回调的拖动事件
	   * @param e
	   */


	  _createClass(GraphView, [{
	    key: 'zoomSelect',
	    value: function zoomSelect(target) {
	      if ($(target).closest('.item').length > 0) {
	        var fznum = parseInt($(target).closest('.item').find('b').text());
	        if (_presenter2.default.dataManager[this.numerator] === fznum) return;
	        var fmnum = _presenter2.default.dataManager[this.denominator];
	        if (fmnum == 1) return;
	        var $detail = this.reGetView().find('.cylinder_detail');
	        $detail.find('.item').removeClass('choice');
	        if (fmnum == fznum) {
	          this.reGetView().find('.cylinder_top_icon').addClass('cylinder_full');
	        } else {
	          this.reGetView().find('.cylinder_top_icon').removeClass('cylinder_full');
	        }
	        $detail.eq(0).find('.item:lt(' + fznum + ')').addClass('choice');
	        $detail.eq(1).find('.item:lt(' + fznum + ')').addClass('choice');
	        // 更新显示的分子数值
	        _presenter2.default.domManager.getViewObject(this.fractClass).setValue(this.numerator, fznum);
	        // 更新数据
	        _presenter2.default.dataManager.updateData(this.numerator, fznum);
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.COMPARE_CLASS).updateSize();
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LINE_CLASS).adjustPosition(_presenter2.default.dataManager);
	      }
	    }

	    /**
	     * 点击圆柱体来快速设置分子
	     */

	  }, {
	    key: 'fastSelect',
	    value: function fastSelect(e) {
	      e.preventDefault();
	      if ($(e.target).closest('.item').length > 0) {
	        var index = parseInt($(e.target).closest('.item').find('b').text());
	        if (!index) index = 1;
	        this.selItem(index, _presenter2.default.dataManager);
	        // 更新显示的分子数值
	        _presenter2.default.domManager.getViewObject(this.fractClass).setValue(this.numerator, index);
	        // 更新比较结果
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.COMPARE_CLASS).updateSize();
	      }
	    }

	    /**
	     * 根据分母数值画出层间隔线
	     * @param num
	     */

	  }, {
	    key: 'render',
	    value: function render(num, data) {
	      var arr = [],
	          percentHeight = 100 / num;
	      if (num > 20) {
	        // 使用放大镜
	        this.zoomTool.setScale(num / 10);
	        this.zoomTool.run();
	      } else {
	        this.zoomTool.stop();
	      }
	      if (num !== 1) {
	        for (var i = 1; i <= num; i++) {
	          arr.push('<span class="item" style="bottom:' + percentHeight * (i - 1) + '%;z-index:' + i + '"><strong style="height:' + percentHeight + '%;"><b>' + i + '</b></strong><b class="line"></b></span>');
	        }
	        arr.push('<div class="cylinder_top_icon"></div>');
	      } else {
	        arr.push('<span class="item" style="bottom:0%;z-index:' + 0 + '"><strong style="height:' + percentHeight + '%;"><b></b></strong><b class="line"></b></span>');
	        arr.push('<div class="cylinder_top_icon only_one"></div>');
	      }
	      this._changeFontSize(num);
	      this.cyDetail.html(arr.join(''));

	      // 如果分母数值变更，那么更新数据
	      if (data[this.denominator] !== num) {
	        this.getView().find('.cylinder_top_icon').removeClass('cylinder_full');
	        _presenter2.default.dataManager.updateData(this.denominator, num);
	        // 更新比较结果
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.COMPARE_CLASS).updateSize();
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LINE_CLASS).adjustPosition(data);
	      }
	    }

	    /**
	     * 根据分母的大小修改图形的字体
	     * */

	  }, {
	    key: '_changeFontSize',
	    value: function _changeFontSize(num) {
	      var className = 'cylinder_f10';
	      // if(num<=10){
	      //    className = "cylinder_f10";
	      // }else if(num <=18){
	      //    className = "cylinder_f20";
	      // }else if(num <=28){
	      //    className = "cylinder_f30";
	      // }else if(num <=40){
	      //    className = "cylinder_f40";
	      // }else {
	      //    className = "cylinder_f50";
	      // }
	      this.cyDetail.removeClass('cylinder_f10 cylinder_f20 cylinder_f30 cylinder_f40 cylinder_f50').addClass(className);
	    }

	    /**
	     * 根据分子数值，设置圆柱图形里的蓝层
	     * @param fznum 分子大小
	     */

	  }, {
	    key: 'selItem',
	    value: function selItem(fznum, data) {
	      var fmnum = data[this.denominator];
	      this.cyDetail.find('.item').removeClass('choice');
	      if (fmnum == fznum) {
	        this.getView().find('.cylinder_top_icon').addClass('cylinder_full');
	      } else {
	        this.getView().find('.cylinder_top_icon').removeClass('cylinder_full');
	      }
	      this.cyDetail.find('span').slice(0, fznum).addClass('choice');
	      // 更新数据
	      if (data[this.numerator] !== fznum) {
	        _presenter2.default.dataManager.updateData(this.numerator, fznum);
	        // 更新比较结果
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.COMPARE_CLASS).updateSize();
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LINE_CLASS).adjustPosition(data);
	      }
	    }

	    /**
	     * 根据当前的分子分母数值设置图形
	     */

	  }, {
	    key: 'updateGraph',
	    value: function updateGraph(data) {
	      var fmnum = data[this.denominator];
	      var fznum = data[this.numerator];
	      this.render(fmnum, data);
	      this.selItem(fznum, data);
	    }
	  }, {
	    key: 'dispose',
	    value: function dispose() {
	      _get(GraphView.prototype.__proto__ || Object.getPrototypeOf(GraphView.prototype), 'dispose', this).call(this);
	      this.zoomTool = null;
	      this.isleft = null;
	      this.cyDetail = null;
	      this.denominator = null;
	      this.numerator = null;
	      this.fractClass = null;
	    }
	  }]);

	  return GraphView;
	}(_BasicView3.default);

	exports.default = GraphView;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	reated by liuyuanpeng on 2016/8/30.
	

	var _em = __webpack_require__(11);

	var _em2 = _interopRequireDefault(_em);

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ZoomTool = function () {
	    function ZoomTool(option, targetChanged) {
	        _classCallCheck(this, ZoomTool);

	        // 放大镜的默认样式
	        this.defaults = {
	            type: 'txt', // 或者'img'
	            scale: 2,
	            el: null,
	            src: null,
	            //放大镜样式
	            style: {},
	            //内容样式
	            itemStyle: {}
	        };

	        // 放大镜
	        this.handler = $('.zoomTool');
	        this.detail = $('.zoomToolDetail');

	        // 扩展默认样式
	        this.o = $.extend(true, {}, this.defaults, option);

	        this.o.style.width = this.handler.width();
	        this.o.style.height = this.handler.height();

	        this.o.itemStyle = {
	            transform: 'scale(' + this.o.scale + ')'
	        };

	        //回调函数
	        this.targetChanged = targetChanged;

	        // 当前选择的放大区域
	        this.currentArea = null;
	        // 当前的选项
	        this.currento = null;

	        // 记录target
	        this.oldTarget = null;

	        // 长按定时器
	        this.timeout = 0;

	        //是否触摸操作
	        this.isTouch = false;
	    }

	    /*
	     * 设置放大倍数
	     */


	    _createClass(ZoomTool, [{
	        key: 'setScale',
	        value: function setScale(val) {
	            this.o.scale = val;
	            this.o.itemStyle = {
	                transform: 'scale(' + this.o.scale + ')'
	            };
	        }

	        /*
	         * 获取当前放大倍数
	         */

	    }, {
	        key: 'getScale',
	        value: function getScale() {
	            return this.o.scale;
	        }

	        /*
	         * 开始使用放大镜
	         */

	    }, {
	        key: 'run',
	        value: function run() {
	            this.o.el.bind('mousedown touchstart', this.onPointerDown.bind(this));
	        }

	        /*
	         * 停止使用放大镜
	         */

	    }, {
	        key: 'stop',
	        value: function stop() {
	            this.o.el.unbind();
	        }

	        /*
	         * 资源释放
	         */

	    }, {
	        key: 'dispose',
	        value: function dispose() {
	            this.defaults = null;
	            this.handler = null;
	            this.detail = null;
	            this.targetChanged = null;
	            this.o = null;
	            this.currentArea = null;
	            this.currento = null;
	            this.o.el.unbind();
	        }

	        /*
	         * 按下事件
	         */

	    }, {
	        key: 'onPointerDown',
	        value: function onPointerDown(event) {
	            if (this.currentArea) return;
	            if (!$(event.target).hasClass('item')) {
	                this.onPointerUp();
	                return;
	            }
	            var _t = this.o.el;
	            var src = this.o.src || _t.attr('src');
	            var size = {
	                width: _t.outerWidth() * this.o.scale,
	                height: _t.outerHeight() * this.o.scale,
	                position: 'absolute'
	            };

	            this.currentArea = $.extend(_t.offset(), {
	                width: _t.outerWidth(),
	                height: _t.outerHeight()
	            });

	            this.currento = this.o;

	            switch (this.o.type) {
	                case 'img':
	                    // 图片放大
	                    this.detail.html($('<img src="' + src + '" />').css(size)).css(this.o.style).show();
	                    break;
	                default:
	                    // dom放大
	                    this.detail.html(_t.clone(true).css(this.o.itemStyle)).css(this.o.style).show();
	                    break;
	            }

	            this.isTouch = event.type === 'touchstart';

	            this.o.el.bind('mousemove touchmove', this.onPointerMove.bind(this));
	            this.o.el.bind('mouseup mouseleave touchend touchcancel', this.onPointerUp.bind(this));

	            this.onPointerMove(event);
	            this.handler.hide();

	            if (this.isTouch) {
	                var scope = this;
	                this.timeout = setTimeout(function () {
	                    scope.handler.show();
	                    scope.onPointerMove(event);
	                }, 1000);
	            }
	        }

	        /*
	         * 移动事件
	         */

	    }, {
	        key: 'onPointerMove',
	        value: function onPointerMove(event) {
	            if (this.isTouch && event.type === 'mousemove' || !this.currentArea) {
	                return;
	            }
	            var pointer = event.originalEvent.touches ? event.originalEvent.touches[0] : event;
	            var off = {
	                left: pointer.clientX,
	                top: pointer.clientY
	            };

	            // 必须使用document
	            var target = document.elementFromPoint(pointer.clientX, pointer.clientY);
	            if (!$(target).hasClass('item')) {
	                this.onPointerUp();
	                return;
	            }
	            if (this.oldTarget != target) {
	                if (this.timeout) {
	                    clearTimeout(this.timeout);
	                }
	                this.handler.show();
	                this.oldTarget = target;
	                this.targetChanged && this.targetChanged(target);
	            }

	            this.handler.offset({
	                left: off.left - this.o.style.width / 2,
	                top: off.top - this.o.style.height / 2
	            });

	            var childrenOffset = {
	                left: -this.currento.scale * (off.left - this.currentArea.left),
	                top: -this.currento.scale * (off.top - this.currentArea.top)

	            };
	            childrenOffset.left += off.left;
	            childrenOffset.top += off.top;
	            this.detail.children().offset(childrenOffset);
	        }

	        /*
	         * 鼠标离开，触摸结束事件
	         */

	    }, {
	        key: 'onPointerUp',
	        value: function onPointerUp() {
	            if (this.timeout) {
	                clearTimeout(this.timeout);
	            }
	            this.detail.html('');
	            this.handler.hide();
	            this.currentArea = null;
	            this.o.el.unbind('mousemove mouseup mouseleave touchmove touchend touchcancel');
	        }
	    }]);

	    return ZoomTool;
	}();

	exports.default = ZoomTool;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (input) {
	    var emSize = parseFloat($(_presenter2.default.view).find(".exam_skin_wood").css("font-size"));
	    return emSize * input;
	};

	exports.pxToEm = pxToEm;
	exports.pxToEm2 = pxToEm2;
	exports.emToPx = emToPx;

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Created by liuyuanpeng on 2016/8/31.
	 */
	function pxToEm(px) {
	    var fontSize = $(_presenter2.default.view).find(".cylinder_wrapper").css("font-size").replace(/px/, '');
	    return px / fontSize;
	}

	function pxToEm2(px) {
	    var fontSize = $(_presenter2.default.view).find(".fractions_sel_list ").css("font-size").replace(/px/, '');
	    return px / fontSize;
	}

	function emToPx(em) {
	    var fontSize = $(_presenter2.default.view).find(".cylinder_wrapper").css("font-size").replace(/px/, '');
	    return em * fontSize;
	}

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	reated by liuyuanpeng on 2016/8/24.
	

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _constants = __webpack_require__(8);

	var _showHideGraph = __webpack_require__(13);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var dataManager = function () {
	    function dataManager() {
	        _classCallCheck(this, dataManager);
	    }

	    /*
	     * 初始化
	     */


	    _createClass(dataManager, [{
	        key: 'init',
	        value: function init() {
	            this[_constants.DATA_PROP.LEFT_NUMERATOR] = 1;
	            this[_constants.DATA_PROP.LEFT_DENOMINATOR] = 1;
	            this[_constants.DATA_PROP.RIGHT_NUMERATOR] = 1;
	            this[_constants.DATA_PROP.RIGHT_DENOMINATOR] = 1;
	            this[_constants.DATA_PROP.SHOW_GRAPH] = false;
	            this[_constants.DATA_PROP.SHOW_RESULT] = false;
	            this[_constants.DATA_PROP.RESULT] = _constants.RESULT_TYPE.RESULT_EQUAL;
	            this.setData(this);
	        }

	        /*
	         * 获取当前的数据
	         */

	    }, {
	        key: 'getData',
	        value: function getData() {
	            return JSON.stringify(this);
	        }

	        /*
	         * 设置状态， 更新界面
	         */

	    }, {
	        key: 'setJsonString',
	        value: function setJsonString(jsonString) {
	            var data = JSON.parse(jsonString);
	            for (var prop in data) {
	                this[prop] = data[prop];
	            }
	            this.setData(data);
	        }

	        /*
	         * 设置数据，更新界面
	         */

	    }, {
	        key: 'setData',
	        value: function setData(data) {
	            var domManager = _presenter2.default.domManager;
	            //分数数值
	            var left_numerator = data[_constants.DATA_PROP.LEFT_NUMERATOR];
	            var left_denominator = data[_constants.DATA_PROP.LEFT_DENOMINATOR];
	            var right_numerator = data[_constants.DATA_PROP.RIGHT_NUMERATOR];
	            var right_denominator = data[_constants.DATA_PROP.RIGHT_DENOMINATOR];

	            //比较结果和是否显示
	            var isShowResult = data[_constants.DATA_PROP.SHOW_RESULT];
	            var result = data[_constants.DATA_PROP.RESULT];

	            domManager.leftFractionView.initFractions(left_numerator, left_denominator, right_numerator, right_denominator);
	            domManager.compareView.initCompare(isShowResult, result);
	            //图形界面
	            (0, _showHideGraph.updateCylinder)(data);
	            domManager.lineView.adjustPosition(data);
	        }

	        /*
	         * 更新数据
	         */

	    }, {
	        key: 'updateData',
	        value: function updateData(prop, value) {
	            if (this.hasOwnProperty(prop)) {
	                this[prop] = value;
	            }
	        }

	        /*
	         *释放资源
	         */

	    }, {
	        key: 'dispose',
	        value: function dispose() {}
	    }]);

	    return dataManager;
	}();

	exports.default = dataManager;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports.default = function () {
		// 更新数据中的显示图形状态
		_presenter2.default.dataManager.updateData(_constants.DATA_PROP.SHOW_GRAPH, !_presenter2.default.dataManager[_constants.DATA_PROP.SHOW_GRAPH]);
		updateCylinder(_presenter2.default.dataManager);
	};

	exports.updateCylinder = updateCylinder;

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _constants = __webpack_require__(8);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function updateCylinder(data) {
		// 显示或隐藏图形
		var $view = $(_presenter2.default.view);
		if (data[_constants.DATA_PROP.SHOW_GRAPH]) {
			$view.find('.showtoggle_btn').find('span').text(_presenter2.default.i18n['compareFraction_hide_graph']);
			_presenter2.default.domManager.lineView.getView().show();
			_presenter2.default.domManager.leftGraphView.getView().show();
			_presenter2.default.domManager.rightGraphView.getView().show();
			_presenter2.default.domManager.leftGraphView.updateGraph(data);
			_presenter2.default.domManager.rightGraphView.updateGraph(data);
			_presenter2.default.domManager.lineView.adjustPosition(_presenter2.default.dataManager);
		} else {
			$view.find('.showtoggle_btn').find('span').text(_presenter2.default.i18n['compareFraction_show_graph']);
			_presenter2.default.domManager.lineView.getView().hide();
			_presenter2.default.domManager.leftGraphView.getView().hide();
			_presenter2.default.domManager.rightGraphView.getView().hide();
		}
	} /**
	   * Created by ChenDS on 2016/9/1.
	   * 点击显示图形按钮的事件，显示或隐藏圆柱图形
	   */

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _BasicView2 = __webpack_require__(7);

	var _BasicView3 = _interopRequireDefault(_BasicView2);

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _constants = __webpack_require__(8);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by liuyuanpeng on 2016/8/24.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	var CompareView = function (_BasicView) {
	    _inherits(CompareView, _BasicView);

	    function CompareView(className, parent) {
	        _classCallCheck(this, CompareView);

	        var _this = _possibleConstructorReturn(this, (CompareView.__proto__ || Object.getPrototypeOf(CompareView)).call(this, className, parent));

	        _this.startAnimation = _this.startAnimation.bind(_this);

	        return _this;
	    }

	    /**
	     * 更新当前分数比较结果
	     * @returns {*}
	     */


	    _createClass(CompareView, [{
	        key: 'updateSize',
	        value: function updateSize() {
	            var dataObj = _presenter2.default.dataManager;
	            var symbol = void 0;
	            var leftNum = dataObj[_constants.DATA_PROP.LEFT_NUMERATOR] / dataObj[_constants.DATA_PROP.LEFT_DENOMINATOR];
	            var rightNum = dataObj[_constants.DATA_PROP.RIGHT_NUMERATOR] / dataObj[_constants.DATA_PROP.RIGHT_DENOMINATOR];

	            if (leftNum > rightNum) {
	                symbol = _constants.RESULT_TYPE.RESULT_LARGER;
	            } else if (leftNum < rightNum) {
	                symbol = _constants.RESULT_TYPE.RESULT_SMALLER;
	            } else {
	                symbol = _constants.RESULT_TYPE.RESULT_EQUAL;
	            }
	            //设置数据
	            dataObj.updateData(_constants.DATA_PROP.RESULT, symbol);
	        }

	        /**
	         * dataManager调用初始化数据
	         * @param isShowResult
	         * @param result
	         */

	    }, {
	        key: 'initCompare',
	        value: function initCompare(isShowResult, result) {
	            var btn = this.getView().find(".compare_btn"),
	                res = this.getView().find(".compare_res");

	            if (isShowResult) {
	                btn.addClass('end');
	                res.addClass('start');
	            } else {
	                btn.addClass('start');
	                res.addClass('end');
	            }

	            res.find('span').text(result);
	        }

	        /**
	         * 比较大小按钮的监听函数
	         * @param e
	         */

	    }, {
	        key: 'startAnimation',
	        value: function startAnimation(e) {
	            e.stopPropagation();
	            e.preventDefault();
	            //手动执行隐藏，否则会冒泡导致卡片一直是背面
	            _presenter2.default.eventManager.hidePops(e);

	            var btn = this.getView().find(".compare_btn"),
	                res = this.getView().find(".compare_res"),
	                dataObj = _presenter2.default.dataManager;

	            var result = dataObj[_constants.DATA_PROP.RESULT];

	            res.find('span').text(result);

	            if (btn.is(".in, .start")) {
	                //绑定数据
	                dataObj.updateData(_constants.DATA_PROP.SHOW_RESULT, true);

	                btn.removeClass("in start").addClass("out");
	                res.removeClass("out end").addClass("in");
	            } else if (btn.is('.out, .end')) {
	                dataObj.updateData(_constants.DATA_PROP.SHOW_RESULT, false);

	                btn.removeClass("out end").addClass("in");
	                res.removeClass("in start").addClass("out");
	            }
	        }

	        /**
	         * 隐藏按钮
	         */

	    }, {
	        key: 'hideCompare',
	        value: function hideCompare() {
	            var $compareFlip = $(_presenter2.default.view).find('#J_btns_compare_flip'),
	                $compareBtn = $compareFlip.find(".compare_btn"),
	                $compareRes = $compareFlip.find(".compare_res"),
	                dataObj = _presenter2.default.dataManager;
	            if ($compareBtn.hasClass('start')) {} else {
	                $compareBtn.removeClass("out start end").addClass("in");
	                $compareRes.removeClass("in start end").addClass("out");
	            }

	            dataObj.updateData(_constants.DATA_PROP.SHOW_RESULT, false);
	        }

	        /**
	         * 停止卡片动画
	         */

	    }, {
	        key: 'stopAnimation',
	        value: function stopAnimation() {
	            var $compareFlip = $(_presenter2.default.view).find('#J_btns_compare_flip'),
	                $compareBtn = $compareFlip.find(".compare_btn"),
	                $compareRes = $compareFlip.find(".compare_res");

	            if ($compareBtn.hasClass('in')) {
	                $compareBtn.removeClass('in').addClass('start');
	                $compareRes.removeClass('out').addClass('end');
	            } else if ($compareBtn.hasClass('out')) {
	                $compareBtn.removeClass('out').addClass('end');
	                $compareRes.removeClass('in').addClass('start');
	            }
	        }
	    }, {
	        key: 'dispose',
	        value: function dispose() {
	            this.startAnimation = null;
	        }
	    }]);

	    return CompareView;
	}(_BasicView3.default);

	exports.default = CompareView;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _BasicView2 = __webpack_require__(7);

	var _BasicView3 = _interopRequireDefault(_BasicView2);

	var _constants = __webpack_require__(8);

	var _em = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by ChenDS on 2016/9/2.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	var LineView = function (_BasicView) {
	  _inherits(LineView, _BasicView);

	  function LineView(className, parent) {
	    _classCallCheck(this, LineView);

	    // 当前圆柱体有cylinder_f40或cylinder_f50的类时border-radius垂直方向上的半径
	    var _this = _possibleConstructorReturn(this, (LineView.__proto__ || Object.getPrototypeOf(LineView)).call(this, className, parent));

	    _this.gap_40 = (0, _em.emToPx)(1.4583333333 / 2);
	    _this.cyTop;
	    _this.cyHeight;
	    return _this;
	  }

	  /**
	   * 根据当前数据辅助线的位置实时调整
	   */


	  _createClass(LineView, [{
	    key: 'adjustPosition',
	    value: function adjustPosition(data) {
	      var _this2 = this;

	      if (!_presenter2.default.dataManager[[_constants.DATA_PROP.SHOW_GRAPH]]) return;
	      var isRight = data[_constants.DATA_PROP.RESULT] === _constants.RESULT_TYPE.RESULT_SMALLER ? _presenter2.default.eventManager.leftGraph : _presenter2.default.eventManager.rightGraph;
	      var fznum = data[isRight.numerator];
	      var fmnum = data[isRight.denominator];
	      var detailTop = this._getDetailTop();
	      if (!detailTop) {
	        var interval = setInterval(function () {
	          detailTop = _this2._getDetailTop();
	          if (detailTop) {
	            clearInterval(interval);
	            var top = _this2._getDetailTop() + (fmnum - fznum) * (_this2._getDetailHeight() / fmnum) - _this2.gap_40 - 0.5;
	            _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LINE_CLASS).getView().css('top', top);
	          }
	        }, 100);
	      } else {
	        var top = this._getDetailTop() + (fmnum - fznum) * (this._getDetailHeight() / fmnum) - this.gap_40 - 0.5;
	        _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LINE_CLASS).getView().css('top', top);
	      }
	    }
	  }, {
	    key: '_getDetailTop',
	    value: function _getDetailTop() {
	      this.cyTop = _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LEFT_GRAPH_CLASS).cyDetail[0].offsetTop;
	      return this.cyTop;
	    }
	  }, {
	    key: '_getDetailHeight',
	    value: function _getDetailHeight() {
	      this.cyHeight = _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LEFT_GRAPH_CLASS).cyDetail.height();
	      return this.cyHeight;
	    }
	  }, {
	    key: 'dispose',
	    value: function dispose() {
	      _get(LineView.prototype.__proto__ || Object.getPrototypeOf(LineView.prototype), 'dispose', this).call(this);
	      this.gap_40 = null;
	    }
	  }]);

	  return LineView;
	}(_BasicView3.default);

	exports.default = LineView;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _BasicView2 = __webpack_require__(7);

	var _BasicView3 = _interopRequireDefault(_BasicView2);

	var _constants = __webpack_require__(8);

	var _em = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by suncg on 2016/8/31.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	var SelectListView = function (_BasicView) {
	    _inherits(SelectListView, _BasicView);

	    function SelectListView(className, parent) {
	        _classCallCheck(this, SelectListView);

	        //事件监听器函数都需要在构造函数中bind(this)，否则this指向触发事件的DOM元素
	        var _this = _possibleConstructorReturn(this, (SelectListView.__proto__ || Object.getPrototypeOf(SelectListView)).call(this, className, parent));

	        _this.setPosition = _this.setPosition.bind(_this);
	        _this.setInputValue = _this.setInputValue.bind(_this);
	        _this.removeItemsActive = _this.removeItemsActive.bind(_this);
	        _this.dataType = null;
	        _this.oldLeftOrRight = null;
	        _this.oldUpOrDown = null;

	        return _this;
	    }

	    /**
	     * 设置下拉列表位置
	     * @param e
	     */


	    _createClass(SelectListView, [{
	        key: 'setPosition',
	        value: function setPosition(e) {
	            e.preventDefault();
	            e.stopPropagation();

	            var selectListDom = this.getView();

	            var vertical_gap = (0, _em.emToPx)(0.2333333);
	            var horizon_gap = (0, _em.emToPx)(0.2);
	            var top = void 0,
	                left = void 0,
	                right = void 0;
	            var target = $(e.currentTarget),
	                fraction = target.parents('.fractions'),
	                fraction_box = target.parent();
	            //判断是否重复点击
	            // if (this.oldLeftOrRight == fraction.index() && this.oldUpOrDown == fraction_box.index() && this.getVisible()) {
	            //     return;
	            // }
	            // else {
	            //     this.oldLeftOrRight = fraction.index();
	            //     this.oldUpOrDown = fraction_box.index();
	            // }


	            //隐藏所有弹窗
	            _presenter2.default.eventManager.hidePops(e);

	            //输入框选中态
	            _presenter2.default.domManager.leftFractionView.inputSelected(_constants.VIEW_CLASS_NAME.SELECT_LIST_CLASS, fraction_box);

	            //是左侧或右侧分数
	            if (fraction.index() == 0) {
	                left = horizon_gap;
	                right = '';
	            } else {
	                left = '';
	                right = horizon_gap;
	            }

	            //是分子或分母
	            if (fraction_box.index() == 0) {
	                top = fraction.offset().top - $(_presenter2.default.view).find('.bijiaofenshu_inner').offset().top + fraction_box.outerHeight() + vertical_gap;
	            } else {
	                top = fraction.offset().top - $(_presenter2.default.view).find('.bijiaofenshu_inner').offset().top + fraction.height() + vertical_gap;
	            }
	            // top = pxToEm2(top) + 'em';


	            selectListDom.css({
	                left: left,
	                right: right,
	                top: top
	            });

	            this.dataType = this.getDataType(fraction.index(), fraction_box.index());
	            //设置下拉列表范围
	            this.setRange(this.dataType);
	            //设置下拉列表默认高亮选项
	            this.setItemActive(_presenter2.default.dataManager[this.dataType]);

	            this.setVisible(true);
	        }
	    }, {
	        key: 'setItemActive',
	        value: function setItemActive(index) {
	            this.getView().find('a').eq(index - 1).addClass('active');
	        }
	    }, {
	        key: 'removeItemsActive',
	        value: function removeItemsActive(e) {
	            if (_presenter2.default.dataManager[this.dataType] == parseInt(e.currentTarget.textContent)) {
	                return;
	            }
	            this.getView().find('a').removeClass('active');
	        }

	        /**
	         * 获取当前点击位置的数据类型
	         * @param horizon
	         * @param vertical
	         * @returns {*}
	         */

	    }, {
	        key: 'getDataType',
	        value: function getDataType(horizon, vertical) {
	            var dataType = null;
	            if (horizon == 0) {
	                if (vertical == 0) {
	                    dataType = _constants.DATA_PROP.LEFT_NUMERATOR;
	                } else {
	                    dataType = _constants.DATA_PROP.LEFT_DENOMINATOR;
	                }
	            } else {
	                if (vertical == 0) {
	                    dataType = _constants.DATA_PROP.RIGHT_NUMERATOR;
	                } else {
	                    dataType = _constants.DATA_PROP.RIGHT_DENOMINATOR;
	                }
	            }
	            return dataType;
	        }

	        /**
	         * 设置分子分母下拉列表范围
	         * @param dataType
	         */

	    }, {
	        key: 'setRange',
	        value: function setRange(dataType) {
	            var fragment = '',
	                maxNum = _constants.VALUE_PROP.MAX_VALUE,
	                minNum = _constants.VALUE_PROP.MIN_VALUE,
	                num = void 0;

	            var type = dataType.replace(/Numerator$/, 'Denominator');

	            var denominatorNum = _presenter2.default.dataManager[type];

	            num = dataType.indexOf('Denominator') > -1 ? maxNum : denominatorNum;

	            for (var i = minNum; i <= num; i++) {
	                fragment += '<a href="javascript:;"><span>' + i + '</span></a>';
	            }

	            this.getView().empty().append(fragment);
	        }

	        /**
	         * 设置输入框值，下拉列表选项点击的监听函数
	         * @param e
	         */

	    }, {
	        key: 'setInputValue',
	        value: function setInputValue(e) {
	            e.stopPropagation();
	            e.preventDefault();

	            //如果是鼠标中键或右键点到下拉菜单数字时不做行为
	            if (e.which == 2 || e.which == 3) {
	                return;
	            }

	            //点击输入值时移除高亮的选项
	            this.removeItemsActive(e);

	            var value = e.currentTarget.textContent;
	            this.setItemActive(parseInt(value));
	            //调用FractionView上的方法真实设置值和data
	            if (this.dataType.indexOf('left') > -1) {
	                this.parent.leftFractionView.setInputValue(this.dataType, value);
	            } else {
	                this.parent.rightFractionView.setInputValue(this.dataType, value);
	            }

	            _presenter2.default.eventManager.hidePops();
	        }
	    }, {
	        key: 'hideSelect',
	        value: function hideSelect() {
	            this.setVisible(false);
	        }
	    }, {
	        key: 'dispose',
	        value: function dispose() {
	            _get(SelectListView.prototype.__proto__ || Object.getPrototypeOf(SelectListView.prototype), 'dispose', this).call(this);
	            this.setPosition = null;
	            this.setInputValue = null;
	            this.dataType = null;
	            this.oldLeftOrRight = null;
	            this.oldUpOrDown = null;
	        }
	    }]);

	    return SelectListView;
	}(_BasicView3.default);

	exports.default = SelectListView;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	        value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _BasicView2 = __webpack_require__(7);

	var _BasicView3 = _interopRequireDefault(_BasicView2);

	var _constants = __webpack_require__(8);

	var _em = __webpack_require__(11);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by suncg on 2016/8/31.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	var KeyboardListView = function (_BasicView) {
	        _inherits(KeyboardListView, _BasicView);

	        function KeyboardListView(className, parent) {
	                _classCallCheck(this, KeyboardListView);

	                var _this = _possibleConstructorReturn(this, (KeyboardListView.__proto__ || Object.getPrototypeOf(KeyboardListView)).call(this, className, parent));

	                _this.setPosition = _this.setPosition.bind(_this);
	                _this.setInputValue = _this.setInputValue.bind(_this);
	                _this.deleteValue = _this.deleteValue.bind(_this);
	                _this.enter = _this.enter.bind(_this);
	                _this.hideKeyboard = _this.hideKeyboard.bind(_this);

	                //是否是键盘打开后第一次输入
	                _this.isFirstInput = true;

	                _this.dataType = null;
	                return _this;
	        }

	        /**
	         * 设置小键盘位置
	         * @param e
	         */


	        _createClass(KeyboardListView, [{
	                key: 'setPosition',
	                value: function setPosition(e) {
	                        //此函数被调用时的this是dom元素
	                        e.preventDefault();
	                        e.stopPropagation();

	                        var keyboardListDom = this.getView();
	                        var top = void 0,
	                            left = void 0;
	                        var target = $(e.currentTarget),
	                            fraction = target.parents('.fractions'),
	                            fraction_box = target.parent();
	                        var hor_gap = (0, _em.emToPx)(0.5);

	                        //隐藏所有弹窗
	                        _presenter2.default.eventManager.hidePops(e);

	                        this.isFirstInput = true;

	                        // 键盘输入框选中态
	                        _presenter2.default.domManager.leftFractionView.inputSelected(_constants.VIEW_CLASS_NAME.KEYBOARD_LIST_CLASS, fraction_box);

	                        //是左侧或右侧分数
	                        if (fraction.index() == 0) {
	                                left = fraction.offset().left + fraction.width() - $(_presenter2.default.view).find('.bijiaofenshu_inner').offset().left + hor_gap;
	                        } else {
	                                left = fraction_box.offset().left - this.getView().width() - $(_presenter2.default.view).find('.bijiaofenshu_inner').offset().left - hor_gap;
	                        }

	                        //是分子或分母
	                        top = fraction_box.offset().top - $(_presenter2.default.view).find('.bijiaofenshu_inner').offset().top;

	                        keyboardListDom.css({
	                                left: left,
	                                top: top
	                        });

	                        //getDataType 是公用的方法
	                        this.dataType = this.parent.selectListView.getDataType(fraction.index(), fraction_box.index());

	                        this.setVisible(true);

	                        // keyboardListDom.focus();
	                }

	                /**
	                 * 判断当前传入的值是否有效
	                 * @param value
	                 * @returns {boolean}
	                 */

	        }, {
	                key: 'isValueValid',
	                value: function isValueValid(value) {
	                        // value已经是Number类型的

	                        var verticalIndex = this.dataType.indexOf('Numerator') > -1 ? 0 : 1;
	                        var denominatorValue = _presenter2.default.dataManager[this.dataType.replace(/Numerator$/, 'Denominator')];

	                        var max = verticalIndex == 0 ? denominatorValue : _constants.VALUE_PROP.MAX_VALUE;

	                        if (value >= _constants.VALUE_PROP.MIN_VALUE && value <= max) {
	                                return true;
	                        }

	                        return false;
	                }

	                /**
	                 * 点击键盘数字时设置输入框的值
	                 * @param e
	                 */

	        }, {
	                key: 'setInputValue',
	                value: function setInputValue(e) {
	                        e.stopPropagation();
	                        e.preventDefault();

	                        var target = e.currentTarget,
	                            value = target.textContent;
	                        var currentVal = void 0,
	                            input = void 0;

	                        input = this.getInput();

	                        if (this.isFirstInput) {
	                                currentVal = '';
	                                this.isFirstInput = false;
	                        } else {
	                                currentVal = input.val();
	                        }

	                        value = currentVal + value;

	                        //输入值不超过两位时显示新值
	                        if (value.length <= 2) {
	                                input.val(value).change();
	                        }
	                }

	                /**
	                 * 获取当前input的jq对象
	                 * @returns {*}
	                 */

	        }, {
	                key: 'getInput',
	                value: function getInput() {
	                        var input = void 0;
	                        var verticalIndex = this.dataType.indexOf('Numerator') > -1 ? 0 : 1;

	                        if (this.dataType.indexOf('left') > -1) {
	                                input = this.parent.leftFractionView.getView().find('.num_ipt').eq(verticalIndex);
	                        } else {
	                                input = this.parent.rightFractionView.getView().find('.num_ipt').eq(verticalIndex);
	                        }

	                        return input;
	                }

	                /**键盘点击enter的监听函数
	                 * isOriginValue为true时为直接把当前元素设置原值。重要。
	                 * @param e
	                 */

	        }, {
	                key: 'enter',
	                value: function enter(e) {
	                        e.stopPropagation();
	                        e.preventDefault();

	                        var input = this.getInput();
	                        var value = parseInt(input.val());
	                        var validValue = void 0;

	                        if (this.isFirstInput) {
	                                this.isFirstInput = false;
	                        }

	                        //当前值有效且不设置原值时使用当前值，否则使用原值
	                        if (this.isValueValid(value)) {
	                                validValue = value;
	                        } else {
	                                validValue = _presenter2.default.dataManager[this.dataType];
	                        }

	                        //调用FractionView上的方法更新data
	                        if (this.dataType.indexOf('left') > -1) {
	                                this.parent.leftFractionView.setInputValue(this.dataType, validValue);
	                        } else {
	                                this.parent.rightFractionView.setInputValue(this.dataType, validValue);
	                        }

	                        _presenter2.default.eventManager.hidePops();
	                }

	                /**
	                 * 恢复原值
	                 */

	        }, {
	                key: 'restoreValue',
	                value: function restoreValue() {
	                        var input = this.getInput();
	                        input.val(_presenter2.default.dataManager[this.dataType]);
	                }

	                /**
	                 * 点击del删除按钮的监听函数
	                 * @param e
	                 */

	        }, {
	                key: 'deleteValue',
	                value: function deleteValue(e) {
	                        e.stopPropagation();
	                        e.preventDefault();
	                        var currentVal = void 0,
	                            input = void 0;

	                        if (this.isFirstInput) {
	                                this.isFirstInput = false;
	                        }

	                        input = this.getInput();

	                        currentVal = input.val();
	                        input.val(currentVal.slice(0, -1)).change();
	                }

	                /**
	                 * 隐藏键盘
	                 * @param e
	                 */

	        }, {
	                key: 'hideKeyboard',
	                value: function hideKeyboard(e) {
	                        this.setVisible(false);
	                        this.isFirstInput = true;
	                }
	        }, {
	                key: 'dispose',
	                value: function dispose() {
	                        _get(KeyboardListView.prototype.__proto__ || Object.getPrototypeOf(KeyboardListView.prototype), 'dispose', this).call(this);
	                        this.setPosition = null;
	                        this.setInputValue = null;
	                        this.deleteValue = null;
	                        this.enter = null;
	                        this.hideKeyboard = null;

	                        //是否是键盘打开后第一次输入
	                        this.isFirstInput = null;

	                        this.dataType = null;
	                }
	        }]);

	        return KeyboardListView;
	}(_BasicView3.default);

	exports.default = KeyboardListView;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	        value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	reated by liuyuanpeng on 2016/6/28.
	事件监听统一处理，方便以后修改监听机制。
	


	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _constants = __webpack_require__(8);

	var _showHideGraph = __webpack_require__(13);

	var _showHideGraph2 = _interopRequireDefault(_showHideGraph);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// import {compareSize} from './compareSize';

	var eventManager = function () {
	        function eventManager() {
	                _classCallCheck(this, eventManager);

	                var container = $(_presenter2.default.view);
	                var selectList = _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.SELECT_LIST_CLASS);
	                var keyboardList = _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.KEYBOARD_LIST_CLASS);

	                this.leftGraph = _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.LEFT_GRAPH_CLASS);
	                this.rightGraph = _presenter2.default.domManager.getViewObject(_constants.VIEW_CLASS_NAME.RIGHT_GRAPH_CLASS);

	                this.selectListDom = selectList.getView();
	                this.keyboardListDom = keyboardList.getView();
	                this.arrows = container.find('.arrow');
	                this.nums = container.find('.num');
	                this.container = container;
	        }

	        _createClass(eventManager, [{
	                key: 'hidePops',
	                value: function hidePops(e) {
	                        var domManager = _presenter2.default.domManager;
	                        //隐藏下拉菜单
	                        domManager.selectListView.hideSelect();
	                        //隐藏键盘
	                        // 键盘没输值的情况，直接隐藏
	                        if (domManager.keyboardListView.isFirstInput) {
	                                domManager.keyboardListView.hideKeyboard();
	                        } else {
	                                //键盘输过值的情况，恢复原值
	                                domManager.keyboardListView.hideKeyboard();
	                                domManager.keyboardListView.restoreValue();
	                        }
	                        _presenter2.default.domManager.leftFractionView.inputsUnSelected();
	                }
	        }, {
	                key: 'bindEvents',
	                value: function bindEvents() {
	                        var _this = this;

	                        var stopPropagation = function stopPropagation(e) {
	                                e.stopPropagation();
	                                e.preventDefault();
	                        };

	                        // 输入框的点击有阻止冒泡，所以container上的事件不会触发
	                        this.arrows.on('click touchstart', _presenter2.default.domManager.selectListView.setPosition);
	                        this.nums.on('click touchstart', _presenter2.default.domManager.keyboardListView.setPosition);
	                        this.arrows.on('mousedown touchstart', stopPropagation);
	                        this.nums.on('mousedown touchstart', stopPropagation);

	                        //下拉列表数字绑定事件
	                        this.selectListDom.on('mousedown touchstart', 'a', _presenter2.default.domManager.selectListView.setInputValue);

	                        //下拉键盘数字绑定事件
	                        this.keyboardListDom.on('click', 'a:not(.btn_del, .btn_enter)', _presenter2.default.domManager.keyboardListView.setInputValue);

	                        //下拉键盘enter绑定事件
	                        this.keyboardListDom.on('click', 'a.btn_enter', _presenter2.default.domManager.keyboardListView.enter);

	                        //下拉键盘删除按钮X绑定事件
	                        this.keyboardListDom.on('click', 'a.btn_del', _presenter2.default.domManager.keyboardListView.deleteValue);

	                        //下拉键盘close关闭按钮绑定事件
	                        this.keyboardListDom.on('click', '.btn_close', this.hidePops);

	                        // this.keyboardListDom.on('focusout', this.hidePops);

	                        //容器里任意地方点击都移除两个弹窗
	                        document.addEventListener('mousedown', this.hidePops);
	                        document.addEventListener('touchstart', this.hidePops);

	                        this.keyboardListDom.on('mousedown touchstart', function (e) {
	                                e.stopPropagation();
	                        });
	                        this.selectListDom.on('mousedown touchstart', function (e) {
	                                e.stopPropagation();
	                        });

	                        //显示图形按钮的事件绑定
	                        this.container.find(".showtoggle_btn").on("click", _showHideGraph2.default);

	                        //比较大小按钮的事件绑定
	                        this.container.find('#J_btns_compare_flip').on('click', _presenter2.default.domManager.compareView.startAnimation);
	                        //只要输入框的值改变就隐藏比较大小按钮
	                        this.container.find('.num_ipt').on('change', _presenter2.default.domManager.compareView.hideCompare);

	                        //圆柱体上点击事件监听
	                        this.leftGraph.getView().find(".cylinder_detail").on("click", function (e) {
	                                return _this.leftGraph.fastSelect(e);
	                        });
	                        this.rightGraph.getView().find(".cylinder_detail").on("click", function (e) {
	                                return _this.rightGraph.fastSelect(e);
	                        });
	                }
	        }, {
	                key: 'unbindEvents',
	                value: function unbindEvents() {
	                        this.leftGraph.getView().find(".cylinder_detail").off("click");
	                        this.rightGraph.getView().find(".cylinder_detail").off("click");
	                        $(_presenter2.default.view).find(".showtoggle_btn").off("click", _showHideGraph2.default);

	                        //解绑事件
	                        this.arrows.off();
	                        this.nums.off();
	                        this.selectListDom.off();
	                        this.keyboardListDom.off();
	                        this.container.find('#J_btns_compare_flip').off();
	                        this.container.find('.num_ipt').off();

	                        document.removeEventListener('mousedown', this.hidePops);
	                        document.removeEventListener('touchstart', this.hidePops);
	                }
	        }, {
	                key: 'dispose',
	                value: function dispose() {
	                        this.leftGraph = null;
	                        this.rightGraph = null;
	                        this.selectListDom = null;
	                        this.keyboardListDom = null;
	                        this.arrows = null;
	                        this.nums = null;
	                        this.container = null;
	                }
	        }]);

	        return eventManager;
	}();

	exports.default = eventManager;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	    $(_presenter2.default.view).find(".compare_btn").find('span').html(_presenter2.default.i18n['compareFraction_compare']);
	};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _showHideGraph = __webpack_require__(13);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  resizeScreen: function resizeScreen(data) {
	    (0, _showHideGraph.updateCylinder)(_presenter2.default.dataManager);
	  }
	};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    _presenter2.default.eventManager.unbindEvents();
	    _presenter2.default.eventManager.dispose();
	    _presenter2.default.eventManager = null;
	    _presenter2.default.domManager.dispose();
	    _presenter2.default.domManager = null;
	    _presenter2.default.dataManager.dispose();
	    _presenter2.default.dataManger = null;
	};

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (controller) {
	  _presenter2.default.eventBus = controller.getEventBus();
	};

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (eventName, event) {
	    if (eventName == 'PLAYER.TOOL.MINIMIZE') {
	        _presenter2.default.domManager && _presenter2.default.domManager.compareView.stopAnimation();
	    }
	};

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    return {
	        getQuestionInfo: _getQuestionInfo2.default,
	        getExtendData: _getExtendData2.default
	    };
	};

	var _getQuestionInfo = __webpack_require__(25);

	var _getQuestionInfo2 = _interopRequireDefault(_getQuestionInfo);

	var _getExtendData = __webpack_require__(26);

	var _getExtendData2 = _interopRequireDefault(_getExtendData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	    var question_id = '',
	        question_url = '';
	    if (_presenter2.default.model !== undefined) {
	        try {
	            question_id = _presenter2.default.model.question_id;
	            question_url = JSON.stringify(_presenter2.default.model.question_url);
	        } catch (e) {
	            console.log('json stringify failed');
	        }
	    }
	    return {
	        id: question_id,
	        dispatchOnly: true,
	        type_code: 'CompareFraction',
	        type_name: '比较分数大小',
	        url: question_url,
	        notExistStatistics: true,
	        noNeedQuizProgress: true
	    };
	}; /**
	    * Created by liuyuanpeng on 2016/7/1.
	    */

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	    var status = {
	        width: '100%',
	        compareFractionData: _presenter2.default.dataManager.getData()
	    };
	    return status;
	}; /**
	    * Created by liuyuanpeng on 2016/7/1.
	    */

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports.default = function (obj) {
		_presenter2.default.langType = obj._lang_;
	};

	var _presenter = __webpack_require__(2);

	var _presenter2 = _interopRequireDefault(_presenter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 28 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function () {
	    $(".bijiaofenshu_wrapper").addClass("bijiaofenshu_student");
	};

/***/ })
/******/ ]);]]></presenter><resources><file src="./resources/wood/images/bjan_bg_filp.png"/><file src="./resources/wood/images/bjan_bg.png"/><file src="./resources/wood/images/cylinder_bg_repeat.png"/><file src="./resources/wood/images/cylinder_bg_top_full2.png"/><file src="./resources/wood/images/cylinder_bg_top.png"/><file src="./resources/wood/images/cylinder_bg.png"/><file src="./resources/wood/images/cylinder_choice_bg.png"/><file src="./resources/wood/images/cylinder_line_blend.png"/><file src="./resources/wood/images/cylinder_line_firstbottom.png"/><file src="./resources/wood/images/cylinder_line_lasttop.png"/><file src="./resources/wood/images/cylinder_line_normal.png"/><file src="./resources/wood/images/cylinder_line_solid.png"/><file src="./resources/wood/images/cylinder_line.png"/><file src="./resources/wood/images/dinggai_bg_choice.png"/><file src="./resources/wood/images/dinggai_bg.png"/><file src="./resources/wood/images/fractions_arrow_active.png"/><file src="./resources/wood/images/fractions_arrow.png"/><file src="./resources/wood/images/icon_close.png"/><file src="./resources/wood/images/icon_del_active.png"/><file src="./resources/wood/images/icon_del_normal.png"/><file src="./resources/wood/images/icon_del.png"/><file src="./resources/wood/images/icon_fangdajing.png"/><file src="./resources/wood/images/icon_fangdajing2.png"/><file src="./resources/wood/images/jeyboard_hd.png"/></resources></addon>