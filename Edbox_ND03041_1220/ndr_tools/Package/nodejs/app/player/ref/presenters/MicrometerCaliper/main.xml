<?xml version='1.0' encoding='UTF-8'?>
<addon id="templateid"><properties/><dependencies><jsDependency/></dependencies><css><![CDATA[.exam_skin_wood .micrometer_wrapper{width:100%;height:100%;position:relative;padding:2.66667em 4em 5.75em;background:#bfd3e2}.exam_skin_wood .micrometer_wrapper .micrometer_inner{width:100%;height:100%;overflow:hidden;position:relative}.exam_skin_wood .micrometer_wrapper .micrometer_inner .objectscale{z-index:98;cursor:pointer;position:relative;width:12em;height:10em;left:.41667em;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .measuringobject{cursor:pointer;position:absolute;left:5.5em;top:17em;width:3em;height:3.04167em;background:url(resources/wood/images/redball.png) no-repeat;background-size:100%;z-index:99}.exam_skin_wood .micrometer_wrapper .micrometer_inner .slide{top:7em;position:relative;display:inline-block}.exam_skin_wood .micrometer_wrapper .micrometer_inner .slide .slidercom{width:5.83333em;height:1.04167em;background:#e8edf0;border-radius:.83333em;border:1px solid #989fa5}.exam_skin_wood .micrometer_wrapper .micrometer_inner .slide .rangeslider{position:relative}.exam_skin_wood .micrometer_wrapper .micrometer_inner .slide .rangeslider-fill{position:absolute;background:#10aeb4;top:-1px}.exam_skin_wood .micrometer_wrapper .micrometer_inner .slide .rangeslider-handle{position:absolute;top:-.5em;width:2.08333em;height:2.08333em;border-radius:50%;background:#fff;border:1px solid #989fa5;background-image:linear-gradient(top,#fefefe,#eaeaea);background-image:-webkit-linear-gradient(top,#fefefe,#eaeaea)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.promptHide .prompt_1,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.promptHide .structureName_10,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.promptHide .structureName_11,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.promptHide .structureName_9,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_1,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_2,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_3,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_4,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_5,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_6,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_7,.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-shaftbody.structureHide .structureName_8{display:none}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange{position:absolute;right:0;top:0;width:100%;height:100%;padding:2.70833em 3.75em 3.33333em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody{width:50em;height:32em;-webkit-transform:translate(0);transform:translate(0);position:absolute;left:50%;top:50%;margin-left:-21em;margin-top:-15em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment{position:relative;left:.41667em;top:7.08333em;width:0;height:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom{position:absolute;z-index:999}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .orangeCircle{display:inline-block;width:.625em;height:.625em;border:.16667em solid #ee5d1d;border-radius:50%;position:absolute}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .circleBom{left:1px;bottom:-2px;-webkit-transform:translate(-50%,50%);transform:translate(-50%,50%)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .circleRibom{right:-.5em;bottom:-1px;-webkit-transform:translate(-50%,50%);transform:translate(-50%,50%)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .circleTop{top:1px;left:1px;-webkit-transform:translate(-50%,-100%);transform:translate(-50%,-100%)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .nameLine{border:.16667em solid #ee5d1d;width:.58333em;border-top:0;border-right:0;display:inline-block}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .nameTxt{font-size:2em;color:#000;position:absolute;white-space:nowrap;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .txtTop{top:-1.3em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .txtBom{bottom:-1.5em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_1.strucnameCom{top:-.7em;left:6em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_1.strucnameCom .nameLine{height:3.45833em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_2.strucnameCom{bottom:-.8em;left:11em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_2.strucnameCom .nameLine{height:1.875em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_2.strucnameCom .nameTxt{top:1.2em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_3.strucnameCom{bottom:1.4em;left:3em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_3.strucnameCom .nameLine{height:6.5em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_4.strucnameCom{bottom:2.4em;left:-1.5em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_4.strucnameCom .nameLine{height:3.04167em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_4.strucnameCom .lineTopright{height:2.83333em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_4 .circleBom{left:.83333em;bottom:.16667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5.strucnameCom{bottom:2.4em;left:.9em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5.strucnameCom .nameLine{height:6.91667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5 .circleBom{left:.83333em;bottom:.16667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom{top:-1.2em;left:1.4em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom .nameLine{height:.58333em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom .nameLine .nameTxt{left:1.33333em;top:-1em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_7.strucnameCom{top:-1.4em;left:14.8em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_7.strucnameCom .nameLine{height:.41667em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_7.strucnameCom .nameLine .nameTxt{top:-.91667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_8.strucnameCom{top:-3.8em;left:22.2em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_8.strucnameCom .nameLine{height:4.875em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_8.strucnameCom .nameLine .nameTxt{left:-.20833em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .lineTopright{border:.16667em solid #ee5d1d;width:4.33333em;border-left:0;border-bottom:0;display:inline-block}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .prompt_1.strucnameCom{top:-3.1em;left:-2.9em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .prompt_1.strucnameCom .lineTopright{height:2.20833em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .prompt_1 .txtLeft{left:-6em;top:-.5em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9 .circleBom{left:.83333em;bottom:.16667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom{top:-4.2em;left:1em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom .txtTop{right:-4em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom .nameLine{height:6.66667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_10.strucnameCom{top:-3.3em;left:1.8em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_10.strucnameCom .txtTop{left:3em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_10.strucnameCom .nameLine{height:3.33333em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom{top:0;left:22.3em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom .txtTop{left:-4em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom .nameLine{height:1.29167em;border-bottom:0}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .graphbgcom{position:absolute;background-repeat:no-repeat;background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .micrometerbg{top:.16667em;left:0;width:22.66667em;height:19.58333em;z-index:5}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .micrometerbg .highlighted{position:absolute;left:5em;top:-1em;width:5.66667em;height:6.75em;background:url(resources/wood/images/highlight.png) no-repeat;opacity:0;background-size:100%;z-index:1000}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .micrometerbg .highlighted.flash{-webkit-animation-name:bling;-webkit-animation-duration:1s;-webkit-animation-timing-function:linear;-webkit-animation-iteration-count:2}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .micrometerbg.graphbgcom{background-image:url(resources/wood/images/hook.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microscrew{left:6.79167em;top:2.36666em;width:14.75em;height:2.125em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microscrew.graphbgcom{background-image:url(resources/wood/images/screw.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microfixed{position:relative;left:22em;top:.9em;width:19.25em;height:4.83333em;z-index:4}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microfixed .fixedRuler{position:absolute;left:2.75em;top:2em;width:3.33333em;height:1.5em;background:url(resources/wood/images/fixedRuler.png) no-repeat;background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microfixed.graphbgcom{background-image:url(resources/wood/images/fixedhod.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microlocked{position:absolute;left:18.3em;top:1.5em;width:3.04167em;height:3.5em;z-index:10}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microlocked.graphbgcom .switchLock{background-image:url(resources/wood/images/lock.png);background-size:100%;width:100%;height:100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .microlocked.graphbgcom.lockedon .switchLock{-webkit-transform:rotate(60deg);transform:rotate(60deg);-webkit-transform-origin:center top;transform-origin:center top;top:.75em;left:.95em;position:absolute}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal{left:24.47917em;top:0;width:24.58333em;height:7.08333em;z-index:10}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal .internalStru{position:absolute;left:4em;top:.4em;width:8.875em;height:5.91667em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal .internalStru.internalImg{background:url(resources/wood/images/structurebg.png);background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom{background-image:url(resources/wood/images/axis.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom .knob{right:7.16667em;top:.2em;width:4.375em;height:6.25em;z-index:11}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom .knob.graphbgcom{background-image:url(resources/wood/images/slidingzonelarge.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom .knob.graphbgcom:before{content:"";position:absolute;left:0;width:4.375em;height:6.25em;background-image:url(resources/wood/images/coverBig.png);background-size:100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom .miniknob{right:1.29167em;top:2em;width:2em;height:2.79167em;z-index:11}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom .miniknob.graphbgcom{background-image:url(resources/wood/images/slidingzonemini.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom .miniknob.graphbgcom:before{content:"";position:absolute;left:0;width:2em;height:2.79167em;background-image:url(resources/wood/images/coverMini.png);background-size:100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom.scrollcal_inner{background-image:url(resources/wood/images/axis_structurebg.png)}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scrollcal.graphbgcom:after{content:"";position:absolute;top:0;left:0;width:24.58333em;height:7.08333em;background-image:url(resources/wood/images/axis_structurebg.png);background-size:100%;display:none}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scroll-skin{left:.45833em;top:.86em;width:1.58333em;height:4.79167em;z-index:8;overflow:hidden}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scroll-skin.graphbgcom .ruler-contain{position:absolute;top:-384.96667em;left:0;width:1.58333em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .scroll-skin.graphbgcom .ruler{display:block;width:1.54167em;height:12.5em;z-index:99;background:url(resources/wood/images/mobileruler.png) no-repeat;background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .ball-container{position:absolute;top:1.66667em;left:0;width:19em;height:17em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .measurePoint{position:absolute;left:7.25em;top:10.58333em;width:.04167em;height:.04167em;z-index:15}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView{display:none;position:relative;left:24em;top:16em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox{width:13.16667em;height:13.16667em;position:absolute;z-index:99999;overflow:hidden;border:.25em solid #fff;border-radius:50%;background:#999;box-shadow:inset 0 0 10px #666}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox .zoomDetail{width:100%;height:100%;overflow:hidden;position:relative}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox .zoomDetail .microfixed{position:relative;left:0;top:50%;width:77em;height:19.33333em;-webkit-transform:translateY(-50%);transform:translateY(-50%);z-index:1;background-image:url(resources/wood/images/fixedhod.png);background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox .zoomDetail .fixedRuler{position:absolute;left:5.79167em;top:5.25em;width:14.58333em;height:6.5625em;background:url(resources/wood/images/fixedRuler2.png) no-repeat;background-size:100% 100%;z-index:2}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox .zoomDetail .zoomScrollcal{position:absolute;left:4.41667em;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:98.33333em;height:28.33333em;z-index:3;background-image:url(resources/wood/images/axis.png);background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox .zoomDetail .zoom-ruler-contain{position:absolute;top:-92.66667em;left:50%;z-index:4}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .zoomBox .zoomDetail .zoom-ruler-contain .ruler{display:block;width:6.16667em;height:50em;z-index:99;background-image:url(resources/wood/images/mobileruler1.png);background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox{position:absolute;left:15em;top:2em;min-width:14.5em;height:10.625em;padding:1em;background:rgba(0,0,0,.6);border-radius:.625em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupText{color:#fff}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupText .resultReading{font-size:2em;line-height:1.375em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupText .formulaTxt{font-size:1em;line-height:1em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupBtn{position:absolute;bottom:1em;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);color:#864100;font-size:1.5em;background-image:url(resources/wood/images/readbtn.png);background-size:100%;width:6.66667em;height:2.5em;line-height:2.5em}.exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupBtn.active{background-image:url(resources/wood/images/readbtnon.png)}.exam_skin_wood .micrometer_wrapper .graph-prompt{display:none;position:absolute;top:15em;left:11em;z-index:99;padding:1em;background:rgba(47,47,47,.8);border-radius:.41667em;color:#fff;padding:1.25em .33333em;height:4.83333em;line-height:4.83333em;text-align:left}.exam_skin_wood .micrometer_wrapper .graph-prompt .con-detail{font-size:.91667em;white-space:nowrap}.exam_skin_wood .micrometer_wrapper .graph-prompt.shortatge{left:5.5em;top:6em;height:auto;padding:1em;line-height:1.25em}.exam_skin_wood .micrometer_wrapper .graph-prompt.shortatge:before{content:"";position:absolute;left:20%;bottom:100%;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:0;height:0;border-left:.625em solid transparent;border-right:.625em solid transparent;border-bottom:.66667em solid rgba(47,47,47,.8)}.exam_skin_wood .micrometer_wrapper .graph-prompt.shortatge.shortatge_out{left:4.5em;top:5.8em}.exam_skin_wood .micrometer_wrapper .graph-prompt.closeto{left:6.6em;top:13em;height:auto;line-height:1.25em}.exam_skin_wood .micrometer_wrapper .graph-prompt.closeto .con-detail{font-size:.91667em;line-height:1.5em;white-space:normal}.exam_skin_wood .micrometer_wrapper .graph-prompt.closeto:before{content:"";position:absolute;left:20%;bottom:100%;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:0;height:0;border-left:.625em solid transparent;border-right:.625em solid transparent;border-bottom:.66667em solid rgba(47,47,47,.8)}.exam_skin_wood .micrometer_wrapper .prompt-kaka{position:absolute;top:6em;left:20em;z-index:999;padding:0 3.58333em 0 3.5em;color:#fff;height:3.875em;line-height:4.58333em;white-space:nowrap;display:none}.exam_skin_wood .micrometer_wrapper .prompt-kaka:before{content:"";position:absolute;left:0;top:0;width:3.5em;height:3.875em;background:url(resources/wood/images/kaka_l.png) no-repeat 50%;background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .prompt-kaka:after{content:"";position:absolute;right:0;top:0;width:3.58333em;height:3.875em;background:url(resources/wood/images/kaka_r.png) no-repeat 50%;background-size:100% 100%}.exam_skin_wood .micrometer_wrapper .prompt-kaka .con-detail{position:relative;z-index:10;margin:0 -1.2em;height:100%;font-size:1.33333em;background:url(resources/wood/images/kaka_m.png) repeat-x 0;background-size:auto 100%}.exam_skin_wood .micrometer_wrapper .locked-prompt{position:absolute;top:5em;left:2em;z-index:99;background:rgba(47,47,47,.8);border-radius:.41667em;padding:0 .83333em;color:#fff;height:2.25em;line-height:2.25em;display:none}.exam_skin_wood .micrometer_wrapper .locked-prompt .triangle{width:1.3em;height:1.45em;-webkit-clip-path:polygon(0 0,0 1.45em,1.3em 1.45em);background:#000;position:absolute;bottom:100%;background:rgba(47,47,47,.8)}.exam_skin_wood .micrometer_wrapper .locked-prompt .con-detail{font-size:.91667em;white-space:nowrap}.exam_skin_wood .micrometer_footer{position:absolute;left:0;bottom:0;height:5.75em;width:100%;background:#cfdee9;padding:0 4em;text-align:center}.exam_skin_wood .micrometer_footer .menu{padding:1.3em 0 0;display:inline-block;height:100%}.exam_skin_wood .micrometer_footer .menu li{float:left}.exam_skin_wood .micrometer_footer .menu li a{display:inline-block;min-width:8.5em;height:3.16667em}.exam_skin_wood .micrometer_footer .com_btns.btns-primary{border:1px solid #397274;background:linear-gradient(0deg,#e9e9e9 0,#fff)}.exam_skin_wood .micrometer_footer .com_btns{display:inline-block;margin:0 .75em;padding:0 1.41667em;height:3.16667em;line-height:3.16667em;text-align:center;vertical-align:middle;border-radius:.41667em}.exam_skin_wood .micrometer_footer .com_btns.active,.exam_skin_wood .micrometer_footer .com_btns:active{background:linear-gradient(0deg,#76b8ba 0,#89c5c7)}.exam_skin_wood .micrometer_footer .com_btns{margin:0 1.375em}.exam_skin_wood .micrometer_footer .com_btns .btns-primary-txt{font-size:1.5em;color:#384650}.exam_skin_wood .micrometer_footer .com_btns.active .btns-primary-txt,.exam_skin_wood .micrometer_footer .com_btns:active .btns-primary-txt{color:#fff}@-webkit-keyframes bling{0%{opacity:1}10%{opacity:.8}to{opacity:0}}.typefaces_long .exam_skin_wood .micrometer_footer .com_btns.btns-primary{padding:0 .5em;line-height:inherit;display:-webkit-box;display:-ms-flexbox;display:flex}.typefaces_long .exam_skin_wood .micrometer_footer .com_btns.btns-primary .btns-primary-txt{display:block;margin:auto;font-size:1.25em}.typefaces_long .exam_skin_wood .micrometer_footer .menu li:first-of-type .com_btns.btns-primary,.typefaces_long .exam_skin_wood .micrometer_footer .menu li:nth-of-type(2) .com_btns.btns-primary,.typefaces_long .exam_skin_wood .micrometer_footer .menu li:nth-of-type(3) .com_btns.btns-primary{max-width:10em}.typefaces_long .exam_skin_wood .micrometer_footer .menu li:nth-of-type(4) .com_btns.btns-primary{max-width:13em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupBtn{line-height:1em;padding-top:.2em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .nameTxt{font-size:1.16667em;white-space:normal}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .prompt_1 .txtLeft{left:-9.6em;top:-.9em;width:19em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom{top:-7.2em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom .nameLine{height:9.66667em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom .txtTop{right:-18.5em;width:19em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_10.strucnameCom .txtTop{left:7.2em;width:18em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom{top:-6em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom .nameLine{height:7.29167em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom .txtTop{left:-2.6em;width:18em;top:-2.2em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_1.strucnameCom .nameTxt{top:-1.3em;left:-6em;width:16em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_2.strucnameCom .nameTxt{top:1.7em;width:15em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_3.strucnameCom .nameLine{height:7.2em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_3.strucnameCom .nameTxt{width:14em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_4.strucnameCom .nameTxt{top:-2.3em;width:11em;left:-.2em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5.strucnameCom .nameLine{height:9.91667em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5.strucnameCom .nameTxt{width:12em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom{top:-3.2em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom .nameLine{height:3.18333em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom .nameTxt{top:-1.4em;left:3.33333em;width:11em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_7.strucnameCom .nameTxt{width:11em}.typefaces_long .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_8.strucnameCom .nameLine .nameTxt{width:14em;top:-2.4em}.typefaces_long .exam_skin_wood .micrometer_wrapper .prompt-kaka{left:18em}.typefaces_ru_RU .exam_skin_wood .micrometer_footer .com_btns.btns-primary{padding:0 .5em;line-height:inherit;display:-webkit-box;display:-ms-flexbox;display:flex}.typefaces_ru_RU .exam_skin_wood .micrometer_footer .com_btns.btns-primary .btns-primary-txt{display:block;margin:auto;font-size:1.25em}.typefaces_ru_RU .exam_skin_wood .micrometer_footer .menu li:first-of-type .com_btns.btns-primary,.typefaces_ru_RU .exam_skin_wood .micrometer_footer .menu li:nth-of-type(2) .com_btns.btns-primary,.typefaces_ru_RU .exam_skin_wood .micrometer_footer .menu li:nth-of-type(3) .com_btns.btns-primary{max-width:10em}.typefaces_ru_RU .exam_skin_wood .micrometer_footer .menu li:nth-of-type(4) .com_btns.btns-primary{max-width:13em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .lookupView .btnBox .lookupBtn{line-height:1em;padding-top:.2em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .strucnameCom .nameTxt{font-size:1.16667em;white-space:normal}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .prompt_1 .txtLeft{left:-9.6em;top:-.9em;width:19em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom{top:-7.2em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom .nameLine{height:9.66667em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_9.strucnameCom .txtTop{right:-18.5em;width:19em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_10.strucnameCom .txtTop{left:7.2em;width:18em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom{top:-6em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom .nameLine{height:7.29167em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_11.strucnameCom .txtTop{left:-2.6em;width:18em;top:-2.2em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_1.strucnameCom .nameTxt{top:-1.3em;left:-6em;width:16em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_2.strucnameCom .nameTxt{top:1.7em;width:15em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_3.strucnameCom .nameLine{height:7.2em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_3.strucnameCom .nameTxt{width:14em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_4.strucnameCom .nameTxt{top:-2.3em;width:11em;left:-.2em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5.strucnameCom .nameLine{height:9.91667em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_5.strucnameCom .nameTxt{width:12em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom{top:-3.2em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom .nameLine{height:3.18333em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_6.strucnameCom .nameTxt{top:-1.4em;left:3.33333em;width:11em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_7.strucnameCom .nameTxt{width:11em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .micrometer_inner .micro-dragrange .micro-shaftbody .micro-equipment .structureName_8.strucnameCom .nameLine .nameTxt{width:14em;top:-2.4em}.typefaces_ru_RU .exam_skin_wood .micrometer_wrapper .prompt-kaka{left:18em}.exam_skin_wood{visibility:visible}.addon_MicrometerCaliper .exam_skin_wood{visibility:hidden}]]></css><view><![CDATA[<div class="exam_skin_wood"><div class="micrometer_wrapper"><div class="micrometer_inner"><div class="measuringobject"></div><div class="objectscale"><div class="slide"><div class="lefthalf"></div><div class="rangeslider slidercom"><div class="rangeslider-fill slidercom" id="ball"></div><div class="rangeslider-handle" style="left:0"></div></div><div class="righthalf"></div></div></div><div class="micro-dragrange"><div class="micro-shaftbody structureHide promptHide"><div class="measurePoint"></div><div class="micro-equipment"><div class="micrometerbg graphbgcom"><div class="highlighted"></div><div class="structureName_1 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">测砧A</span></div></div><div class="structureName_2 strucnameCom"><div class="orangeCircle circleTop"></div><div class="nameLine"><span class="nameTxt txtBom">尺架C</span></div></div></div><div class="microfixed graphbgcom"><div class="structureName_5 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">固定刻度B</span></div></div><div class="structureName_9 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">1.使用前先调零</span></div></div><div class="fixedRuler"></div></div><div class="microscrew graphbgcom"><div class="structureName_3 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">测微螺杆F</span></div></div></div><div class="graph-prompt shortatge shortatge_in"><div class="con-detail">放置空间不足</div></div><div class="graph-prompt shortatge shortatge_out" style="display:=block"><div class="con-detail">空间不足，待测物体不可移出</div></div><div class="microlocked graphbgcom lockedon"><div class="switchLock"></div><div class="structureName_4 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">止动旋钮G</span></div></div><div class="prompt_1 strucnameCom"><div class="orangeCircle circleRibom"></div><div class="lineTopright"><span class="nameTxt txtLeft">3.拨动止动旋钮后再读数</span></div></div><div class="locked-prompt" style="display:none"><div class="triangle"></div><div class="con-detail">止动旋钮已锁定</div></div></div><div class="scrollcal graphbgcom"><div class="structureName_6 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">可动刻度E</span></div></div><div class="structureName_7 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">旋钮D</span></div></div><div class="structureName_8 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">微调旋钮D’</span></div></div><div class="internalStru"></div><div class="structureName_10 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">4.估读到千分位</span></div></div><div class="structureName_11 strucnameCom"><div class="orangeCircle circleBom"></div><div class="nameLine"><span class="nameTxt txtTop">2.听到“喀喀”声停止转动</span></div></div><div class="prompt-kaka" style="display:none"><div class="con-detail">喀喀</div><audio data-src="/resources/media/ka.mp3" class="audio"></audio></div><div class="knob graphbgcom"></div><div class="miniknob graphbgcom"></div><div class="scroll-skin graphbgcom"><div class="ruler-contain"><span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span></div></div></div></div><div class="lookupView"><div class="zoomBox"><div class="zoomDetail"><div class="microfixed"></div><div class="fixedRuler"></div><div class="zoomScrollcal"></div><div class="zoom-ruler-contain"><span class="ruler"></span> <span class="ruler"></span> <span class="ruler"></span></div></div></div><div class="btnBox"><div class="lookupText" style="display: block"><span class="resultReading"><i>6.771</i>mm</span><br><span class="formulaTxt">(<i>6.5</i>mm+0.01mm×<i>27.1</i>)</span></div><div class="lookupBtn">查看读数</div></div></div><div class="graph-prompt closeto"><div class="con-detail">测微螺杆已靠近待测物<br>体，请转动微调旋钮</div></div><div class="ball-container"></div></div></div></div><div class="micrometer_footer"><ul class="menu"><li><a href="javascript:;" class="com_btns btns-primary" type=""><span class="btns-primary-txt">结构名称</span></a></li><li><a href="javascript:;" class="com_btns btns-primary" type=""><span class="btns-primary-txt">内部构造</span></a></li><li><a href="javascript:;" class="com_btns btns-primary" type=""><span class="btns-primary-txt">注意事项</span></a></li><li><a href="javascript:;" class="com_btns btns-primary" type=""><span class="btns-primary-txt">读数练习</span></a></li></ul></div></div></div>]]></view><presenter><![CDATA['use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var AddonMicrometerCaliper_create =
/******/function (modules) {
	// webpackBootstrap
	/******/ // The module cache
	/******/var installedModules = {};

	/******/ // The require function
	/******/function __webpack_require__(moduleId) {

		/******/ // Check if module is in cache
		/******/if (installedModules[moduleId])
			/******/return installedModules[moduleId].exports;

		/******/ // Create a new module (and put it into the cache)
		/******/var module = installedModules[moduleId] = {
			/******/exports: {},
			/******/id: moduleId,
			/******/loaded: false
			/******/ };

		/******/ // Execute the module function
		/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

		/******/ // Flag the module as loaded
		/******/module.loaded = true;

		/******/ // Return the exports of the module
		/******/return module.exports;
		/******/
	}

	/******/ // expose the modules object (__webpack_modules__)
	/******/__webpack_require__.m = modules;

	/******/ // expose the module cache
	/******/__webpack_require__.c = installedModules;

	/******/ // __webpack_public_path__
	/******/__webpack_require__.p = "";

	/******/ // Load entry module and return exports
	/******/return __webpack_require__(0);
	/******/
}(
/************************************************************************/
/******/[
/* 0 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _appPresenter = __webpack_require__(1);

	var _appPresenter2 = _interopRequireDefault(_appPresenter);

	exports['default'] = function () {
		return _appPresenter2['default'];
	};

	module.exports = exports['default'];

	/***/
},
/* 1 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _presenterRun = __webpack_require__(2);

	var _presenterRun2 = _interopRequireDefault(_presenterRun);

	var _presenterSetBasePath = __webpack_require__(15);

	var _presenterSetBasePath2 = _interopRequireDefault(_presenterSetBasePath);

	var _presenterDestroy = __webpack_require__(16);

	var _presenterDestroy2 = _interopRequireDefault(_presenterDestroy);

	var _presenterInitStudentMobile = __webpack_require__(17);

	var _presenterInitStudentMobile2 = _interopRequireDefault(_presenterInitStudentMobile);

	// import setLocationProperties from './presenter/setLocationProperties'

	var _presenterGetQuestionInfo = __webpack_require__(18);

	var _presenterGetQuestionInfo2 = _interopRequireDefault(_presenterGetQuestionInfo);

	var _presenterGetExtendData = __webpack_require__(19);

	var _presenterGetExtendData2 = _interopRequireDefault(_presenterGetExtendData);

	var _presenter__interface = __webpack_require__(20);

	var _presenter__interface2 = _interopRequireDefault(_presenter__interface);

	var _presenterSetUrlParams = __webpack_require__(21);

	var _presenterSetUrlParams2 = _interopRequireDefault(_presenterSetUrlParams);

	var _presenterSetPlayerController = __webpack_require__(23);

	var _presenterSetPlayerController2 = _interopRequireDefault(_presenterSetPlayerController);

	exports['default'] = {
		run: _presenterRun2['default'],
		destroy: _presenterDestroy2['default'],
		setBasePath: _presenterSetBasePath2['default'],
		initStudentMobile: _presenterInitStudentMobile2['default'],
		// setLocationProperties,
		getQuestionInfo: _presenterGetQuestionInfo2['default'],
		getExtendData: _presenterGetExtendData2['default'],
		__interface: _presenter__interface2['default'],
		setUrlParams: _presenterSetUrlParams2['default'],
		setPlayerController: _presenterSetPlayerController2['default']
	};
	module.exports = exports['default'];

	/***/
},
/* 2 */
/***/function (module, exports, __webpack_require__) {

	/**
  * 运行环境下, 初始化Module的方法
  * @param view 运行视图(DOM对象)
  * @param model Module的模型, Key-Value结构
  * @remark 该方法为Module生命周期方法,仅在Module初始化时执行一次
  */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	var _controlAppControl = __webpack_require__(3);

	var _controlAppControl2 = _interopRequireDefault(_controlAppControl);

	var _controlI18NControl = __webpack_require__(14);

	var _controlI18NControl2 = _interopRequireDefault(_controlI18NControl);

	/**
  * 获取教师端推送过来的数据
  */
	function getExtData(model) {
		if (!model || !model.__ExtendModel) return null;
		if (model.__ExtendModel.data) return model.__ExtendModel.data;
		return null;
	}

	exports['default'] = function (view, model) {
		return window.I18nManager.getInstance().loadLanguage('MicrometerCaliper', _presenter2['default'].langType).done(function (data) {
			_presenter2['default'].i18n = data.lang;
			_presenter2['default'].model = model;
			var extendData = getExtData(model);
			_controlAppControl2['default'].getInst().init(view, extendData);
		});
	};

	module.exports = exports['default'];

	/***/
},
/* 3 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var _baseControl = __webpack_require__(4);

	var _baseControl2 = _interopRequireDefault(_baseControl);

	var _modelAppConfig = __webpack_require__(5);

	var _modelAppConfig2 = _interopRequireDefault(_modelAppConfig);

	var _measureMain = __webpack_require__(6);

	var _measureMain2 = _interopRequireDefault(_measureMain);

	var _measureShape = __webpack_require__(8);

	var _measureShape2 = _interopRequireDefault(_measureShape);

	var _bottomMenu = __webpack_require__(10);

	var _bottomMenu2 = _interopRequireDefault(_bottomMenu);

	var _zoomTool = __webpack_require__(11);

	var _zoomTool2 = _interopRequireDefault(_zoomTool);

	var _modelAppData = __webpack_require__(12);

	var _modelAppData2 = _interopRequireDefault(_modelAppData);

	var _i18nControl = __webpack_require__(13);

	var _i18nControl2 = _interopRequireDefault(_i18nControl);

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	/**
  * 功能控制器
  */

	var appControl = function (_BaseControl) {
		_inherits(appControl, _BaseControl);

		_createClass(appControl, null, [{
			key: 'getInst',
			value: function getInst() {
				appControl._inst = appControl._inst || new appControl();
				return appControl._inst;
			}

			/**
    * 构造
    */
		}]);

		function appControl() {
			_classCallCheck(this, appControl);

			_get(Object.getPrototypeOf(appControl.prototype), 'constructor', this).call(this);
		}

		/**
   * 析构
   */

		_createClass(appControl, [{
			key: 'destroy',
			value: function destroy() {
				appControl._inst = null;
				this.main.destroy();
				this.shape.destroy();
				this.menu.destroy();
				this.zoom.destroy();
				this.data.destroy();
				this.i18N.destroy();
			}

			/**
    * 初始化事件
    */
		}, {
			key: 'init',
			value: function init(view, extendData) {
				this.$view = $(view);
				_i18nControl2['default'].getInst().i18nData = _presenter2['default'].i18n;
				this.i18N = _i18nControl2['default'].getInst().init(this);
				this.config = _modelAppConfig2['default'].getInst().init(this);
				this.main = _measureMain2['default'].getInst().init(this);
				this.shape = _measureShape2['default'].getInst().init(this);
				this.menu = _bottomMenu2['default'].getInst().init(this);
				this.zoom = _zoomTool2['default'].getInst().init(this);
				this.data = _modelAppData2['default'].getInst();
				this.data.init(this, extendData);
				var audio = this.$view.find("audio");
				audio.attr('src', this.config.basePath + audio.attr('data-src'));
				this.$view.find('.exam_skin_wood').css('visibility', 'visible');
				return this;
			}
		}, {
			key: 'resize',
			value: function resize(ratio) {
				this.config.resize();
				this.main.resize(ratio);
				this.shape.resize();
				this.zoom.resize();
			}
		}, {
			key: 'forbideFull',
			value: function forbideFull(isForbide) {
				_presenter2['default'].eventBus.sendEvent("PLAYER.TOOL.FORBIDE_FULL", {
					id: _presenter2['default'].model.$.unqiueId,
					isForbide: isForbide
				});
			}
		}]);

		return appControl;
	}(_baseControl2['default']);

	exports['default'] = appControl;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 4 */
/***/function (module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _modelAppConfigJs = __webpack_require__(5);

	var _modelAppConfigJs2 = _interopRequireDefault(_modelAppConfigJs);

	/**
  * 控制器基类
  * 
  * @author Tiago
  */

	var BaseControl = function () {
		/**
   * 构造
   */

		function BaseControl() {
			_classCallCheck(this, BaseControl);
		}

		/**
   * 根据事件类型，获取目标
   * 主要是为了pad兼容
   */

		_createClass(BaseControl, [{
			key: "_getRealEvent",
			value: function _getRealEvent(event) {
				var stopPop = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

				stopPop && event.stopPropagation;
				if (event.targetTouches && event.targetTouches.length) return event.targetTouches[0];
				if (event.changedTouches && event.changedTouches.length) return event.changedTouches[0];
				return event;
			}

			/**
    * 打印调用堆栈
    */
		}, {
			key: "__",
			value: function __() {
				console.log(this);
				throw new Error('《调用堆栈》');
			}
		}]);

		return BaseControl;
	}();

	exports["default"] = BaseControl;
	module.exports = exports["default"];

	/***/
},
/* 5 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	/**
  * 颗粒配置环境
  *
  * @author Tiago
  */

	var AppConfig = function () {
		function AppConfig() {
			_classCallCheck(this, AppConfig);
		}

		_createClass(AppConfig, [{
			key: 'init',

			/**
    * 初始化
    */
			value: function init(app) {
				this.app = app;
				this.fontSize = this.app.$view.css("font-size").replace(/px/, '');
				//this.ruleSize = 12.5;//单位EM
				// this.ruleSizePx = this.fontSize * this.ruleSize;
				this.ruleSizePx = this.app.$view.find('.ruler')[0].getBoundingClientRect().height;
				this.ratioNum = this.ruleSizePx / 50; // 1mm=>px
				this.measureNum = 0.1667; //em
				this.measureNumPx = this.measureNum * this.fontSize; //em
				this.rulerTop = parseFloat(this.app.$view.find('.ruler-contain').css('top'));

				//this.inStudentMobile = false;
				this.animateTime = 1000;
				this.aniGap = 2;
				//this.zoomScale = 4;
				this.min = 0;
				this.max = 15;

				this.struNameViewCls = 'structureHide';
				this.innerStruViewCls = 'scrollcal_inner';
				this.atteMattViewCls = 'promptHide';

				return this;
			}
		}, {
			key: 'resize',
			value: function resize() {
				this.fontSize = this.app.$view.css("font-size").replace(/px/, '');
				this.ruleSizePx = this.app.$view.find('.ruler')[0].getBoundingClientRect().height;
				this.ratioNum = this.ruleSizePx / 50;
				this.measureNum = 0.1667;
				this.measureNumPx = this.measureNum * this.fontSize;
				this.app.$view.find('.ruler-contain').css('top', '');
				this.rulerTop = parseFloat(this.app.$view.find('.ruler-contain').css('top'));
			}
		}, {
			key: 'destroy',
			value: function destroy() {
				AppConfig._inst = null;
			}
		}], [{
			key: 'getInst',

			// this.basePath = "1";

			value: function getInst() {
				AppConfig._inst = AppConfig._inst || new AppConfig();
				return AppConfig._inst;
			}
		}]);

		return AppConfig;
	}();

	exports['default'] = AppConfig;
	module.exports = exports['default'];

	/**
  * 
  * 单例
  */

	/***/
},
/* 6 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _slicedToArray = function () {
		function sliceIterator(arr, i) {
			var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
				for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
					_arr.push(_s.value);if (i && _arr.length === i) break;
				}
			} catch (err) {
				_d = true;_e = err;
			} finally {
				try {
					if (!_n && _i['return']) _i['return']();
				} finally {
					if (_d) throw _e;
				}
			}return _arr;
		}return function (arr, i) {
			if (Array.isArray(arr)) {
				return arr;
			} else if (Symbol.iterator in Object(arr)) {
				return sliceIterator(arr, i);
			} else {
				throw new TypeError('Invalid attempt to destructure non-iterable instance');
			}
		};
	}();

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var _baseControl = __webpack_require__(4);

	var _baseControl2 = _interopRequireDefault(_baseControl);

	var _plugPlugTileImage = __webpack_require__(7);

	var _plugPlugTileImage2 = _interopRequireDefault(_plugPlugTileImage);

	/**
  * 螺旋仪主逻辑
  **/

	var MeasureMain = function (_BaseControl) {
		_inherits(MeasureMain, _BaseControl);

		/**
   * 构造
   */

		function MeasureMain() {
			_classCallCheck(this, MeasureMain);

			_get(Object.getPrototypeOf(MeasureMain.prototype), 'constructor', this).call(this);
			this._minVal = 0; // 可调节的最小值
			this._maxVal = 15;
		}

		_createClass(MeasureMain, [{
			key: 'init',

			/**
    * 初始化事件
    */
			value: function init(app) {
				var _this = this;

				this.app = app;
				var $view = this.app.$view;
				this.$view = $view;
				this.$ruler = $view.find(".scroll-skin");
				this.$thimble = $view.find(".scrollcal");
				this.$scrollSkin = $view.find(".scroll-skin");
				this.$equipment = $view.find(".micro-equipment");
				this.$dragrange = $view.find(".micro-dragrange");
				this.$shaftbody = $view.find(".micro-shaftbody");

				this.thimbleLeft = this.getPos(this.$thimble, "left");
				this.$microscrew = $view.find(".microscrew");
				this.microscrewLeft = this.$microscrew[0].offsetLeft;
				console.log(this.microscrewLeft);
				this.audio = $view.find("audio");
				var $wrap = $view.find(".micrometer_inner");
				this.ratioNum = this.app.config.ratioNum;

				this.$dragrangePadding = {
					top: parseFloat(this.$dragrange.css('paddingTop')),
					right: parseFloat(this.$dragrange.css('paddingRight')),
					bottom: parseFloat(this.$dragrange.css('paddingBottom')),
					left: parseFloat(this.$dragrange.css('paddingLeft'))
				};

				//移动信息
				this._moveInfo = {
					beginX: null,
					beginY: null
				};
				this._$canvas = this.$dragrange;
				this.plugRuler = this.$view.find('.ruler-contain');

				var _self = this;
				// this.plugRuler = new PlugTileImage(this.$ruler, this.$wrap, { enableTouch: false });
				// 尺子
				this.plugBig = new _plugPlugTileImage2['default']($view.find(".knob"), $view, {
					cb: function cb(curVal, preVal) {
						_self.isSmall = false;
						_self.setMeasureVal(curVal, preVal);
					},
					adjust: function adjust(curVal, preVal) {
						_self.isSmall = false;
						return _self.adjustPos(curVal, preVal);
					},
					isLocked: function isLocked() {
						return _self.isLocked();
					}
				});
				this.plugSmall = new _plugPlugTileImage2['default']($view.find(".miniknob"), $view, {
					cb: function cb(curVal, preVal) {
						_self.isSmall = true;
						_self.setMeasureVal(curVal, preVal);
					},
					adjust: function adjust(curVal, preVal) {
						_self.isSmall = true;
						return _self.adjustPos(curVal, preVal);
					},
					isLocked: function isLocked() {
						return _self.isLocked();
					}
				});

				//拖拽仪器移动
				this.$equipment.on('mousedown touchstart', function (event) {
					return _this._equipmentDown(event);
				});
				// this.$equipment.on('mouseleave',event => this._onMouseOut(event));
				//仪器中的文字标识，提示窗不能点击拖动
				app.$view.find('.strucnameCom').on('mousedown touchstart', function (event) {
					event.stopPropagation();
				});

				return this;
			}
		}, {
			key: 'resize',
			value: function resize(ratio) {
				this.ratioNum = this.app.config.ratioNum;
				this.$thimble.css('left', '');
				this.thimbleLeft = this.getPos(this.$thimble, "left");
				this.$microscrew.css('left', '');
				this.microscrewLeft = this.$microscrew[0].offsetLeft;
				this.app.data.measureValue = this.app.data.measureValue;

				var rotateVal = this.changeToRotateVal(this.app.data.measureValue);
				this.plugRuler.css('top', this.app.config.rulerTop + rotateVal);

				this.$dragrangePadding = {
					top: parseFloat(this.$dragrange.css('paddingTop')),
					right: parseFloat(this.$dragrange.css('paddingRight')),
					bottom: parseFloat(this.$dragrange.css('paddingBottom')),
					left: parseFloat(this.$dragrange.css('paddingLeft'))
				};

				var str = this.$shaftbody[0].style['transform'];

				var xDistance = undefined;
				var yDistance = undefined;
				if (str.length === 0) {
					xDistance = 0;
					yDistance = 0;
				} else {
					str = str.replace(/[translate|\(|\)]/g, '');
					var strArr = str.split(',');
					xDistance = Math.round(parseFloat(strArr[0]) * ratio);
					yDistance = Math.round(parseFloat(strArr[1]) * ratio);
				}
				this.$shaftbody.css({
					transform: 'translate(' + xDistance + 'px, ' + yDistance + 'px)'
				});

				// let pos = this.app.shape.getMeasurePointPos();
				// this.app.data.ballPos = pos;
				this.app.data.itemStatus = this.app.data.itemStatus;
			}

			/**
    * 析构
    */
		}, {
			key: 'destroy',
			value: function destroy() {
				MeasureMain._inst = null;
			}
		}, {
			key: '_equipmentDown',
			value: function _equipmentDown(event) {
				var _this2 = this;

				event.preventDefault();

				//移动端和PC共用event.originalEvent来获取pageX和pageY
				var realEvt = this._getRealEvent(event.originalEvent);
				if (realEvt.type === 'mousedown' && realEvt.which !== 1) {
					return;
				}

				this._moveInfo.beginX = realEvt.pageX;
				this._moveInfo.beginY = realEvt.pageY;
				this._viewEvt = {
					'mousemove touchmove': function mousemoveTouchmove(event) {
						return _this2._onMouseMove(event);
					},
					'mouseup touchend': function mouseupTouchend(event) {
						return _this2._onMouseUp(event);
					},
					'mouseleave': function mouseleave(event) {
						return _this2._onMouseOut(event);
					}
				};
				this._$canvas.on(this._viewEvt);
			}

			/**
    * 拖动图形
    */
		}, {
			key: '_onMouseMove',
			value: function _onMouseMove(event) {
				var xDistance = undefined,
				    yDistance = undefined,
				    oldTransX = undefined,
				    oldTransY = undefined,
				    str = undefined,
				    mouseX = undefined,
				    mouseY = undefined;
				if (this._moveInfo.beginX === null) {
					return;
				}
				// 移动端和PC共用event.originalEvent来获取pageX和pageY
				event = this._getRealEvent(event.originalEvent);

				mouseX = event.pageX;
				mouseY = event.pageY;

				xDistance = mouseX - this._moveInfo.beginX;
				yDistance = mouseY - this._moveInfo.beginY;

				this._moveInfo.beginX = mouseX;
				this._moveInfo.beginY = mouseY;

				str = this.$shaftbody[0].style['transform'];

				if (str.length === 0) {
					oldTransX = 0;
					oldTransY = 0;
				} else {
					str = str.replace(/[translate|\(|\)]/g, '');
					var strArr = str.split(',');
					oldTransX = parseFloat(strArr[0]);
					oldTransY = parseFloat(strArr[1]);
				}

				xDistance += oldTransX;
				yDistance += oldTransY;

				if (xDistance > this.$dragrangePadding.right || xDistance < -this.$dragrangePadding.left) {
					return;
				}
				if (yDistance > this.$dragrangePadding.bottom || yDistance < -this.$dragrangePadding.top) {
					return;
				}

				this.$shaftbody.css({
					transform: 'translate(' + xDistance + 'px, ' + yDistance + 'px)'
				});

				// let pos = this.app.shape.getMeasurePointPos();
				// this.app.data.ballPos = pos;
				this.app.data.itemStatus = this.app.data.itemStatus;
			}

			/**
    * 清除移动信息
    */
		}, {
			key: '_clearMove',
			value: function _clearMove() {
				this._moveInfo.beginX = null;
				this._moveInfo.beginY = null;
				this._$canvas.off(this._viewEvt);
			}

			/**
    * 放弃移动
    */
		}, {
			key: '_onMouseUp',
			value: function _onMouseUp() {
				this._clearMove();
			}

			/**
    * 鼠标移出目标
    */
		}, {
			key: '_onMouseOut',
			value: function _onMouseOut(event) {
				this._clearMove();
			}

			// 获取left,top值
		}, {
			key: 'getPos',
			value: function getPos(dom, _css) {
				return parseFloat(dom.css(_css));
			}
		}, {
			key: 'getTranslateXY',
			value: function getTranslateXY(dom) {
				var str = undefined,
				    transX = 0,
				    transY = 0,
				    strArr = undefined;
				str = dom.style['transform'];
				if (str.length > 0) {
					str = str.replace(/[translate|\(|\)]/g, '');
					strArr = str.split(',');
					transX = parseFloat(strArr[0]);
					transY = parseFloat(strArr[1]);
				}
				return [transX, transY];
			}

			// 获取刻度中心点相对于最外层micro-dragrange的left,top
		}, {
			key: 'getThimblePos',
			value: function getThimblePos() {
				var transX = undefined,
				    transY = undefined,
				    thimbleTransX = undefined,
				    paddingLeft = undefined,
				    paddingTop = undefined,
				    str = undefined;

				var _getTranslateXY = this.getTranslateXY(this.$shaftbody[0]);

				var _getTranslateXY2 = _slicedToArray(_getTranslateXY, 2);

				transX = _getTranslateXY2[0];
				transY = _getTranslateXY2[1];

				paddingLeft = this.$dragrangePadding.left;
				paddingTop = this.$dragrangePadding.top;

				//得到this.$thimble的translateX
				str = this.$thimble[0].style['transform'].replace(/[translateX|\(|\)]/g, '');
				thimbleTransX = parseFloat(str);

				return {
					left: this.getPos(this.$thimble, "left") + thimbleTransX + this.getPos(this.$scrollSkin, "left") + this.getPos(this.$equipment, "left") + transX + paddingLeft,
					top: this.getPos(this.$thimble, "top") + this.getPos(this.$scrollSkin, "top") + this.$scrollSkin.height() / 2 + this.getPos(this.$equipment, "top") + transY + paddingTop
				};
			}

			// 旋转值px=>刻度值mm
		}, {
			key: 'changeTomeasureValue',
			value: function changeTomeasureValue(rotateVal) {
				return rotateVal / this.app.config.ruleSizePx * 0.5;
			}

			// 刻度值mm=>移动px
		}, {
			key: 'changeToMoveVal',
			value: function changeToMoveVal(measureValue) {
				return measureValue * this.app.config.measureNumPx;
			}

			// 刻度mm=>旋转px
		}, {
			key: 'changeToRotateVal',
			value: function changeToRotateVal(measureValue) {
				return measureValue * 2 * this.app.config.ruleSizePx;
			}

			// 获取刻度值
		}, {
			key: 'getMeasureVal',
			value: function getMeasureVal(small, big) {
				small = small || this.plugSmall.curVal;
				big = big || this.plugBig.curVal;
				var measureValue = this.changeTomeasureValue(small + big);
				return measureValue;
			}

			/*
    * 功能
    */
			// 刻度数据驱动移动
		}, {
			key: 'setMeasureMove',
			value: function setMeasureMove(val) {
				var rotateVal = this.changeToRotateVal(val);
				var moveVal = this.changeToMoveVal(val);
				this.plugRuler.css('top', this.app.config.rulerTop + rotateVal);
				if (this.isSmall) {
					this.plugSmall.curVal = rotateVal - this.plugBig.curVal;
				} else {
					this.plugBig.curVal = rotateVal - this.plugSmall.curVal;
				}
				this.$thimble.css("left", this.thimbleLeft);
				this.$microscrew.css("left", this.microscrewLeft);
				this.$thimble.css("transform", 'translateX(' + moveVal + 'px)');
				this.$microscrew.css("transform", 'translateX(' + moveVal + 'px)');
			}

			//读数练习时移除小球前所做的动画
		}, {
			key: 'setMeasureAni',
			value: function setMeasureAni(val, callback) {
				var dis = val - this.app.data.measureValue;
				if (dis == 0) {
					callback();
					return;
				}
				var rotateVal = this.changeToRotateVal(val);
				var moveVal = this.changeToMoveVal(dis);
				var animateTime = this.app.config.animateTime;

				// this.plugRuler.curValWithAni = rotateVal;
				if (this.isSmall) {
					this.plugSmall.curValWithAni = rotateVal - this.plugBig.curVal;
				} else {
					this.plugBig.curValWithAni = rotateVal - this.plugSmall.curVal;
				}
				//动画完成后设置数据状态
				this.$thimble.animate({
					'left': this.thimbleLeft + moveVal
				}, animateTime);

				this.$microscrew.animate({
					'left': this.microscrewLeft + moveVal
				}, animateTime);
				this.plugRuler.animate({
					'top': this.app.config.rulerTop + rotateVal
				}, animateTime, callback);
			}
		}, {
			key: 'setMeasureVal',
			value: function setMeasureVal(curVal, preVal) {
				var measureVal = this.getMeasureVal();
				if (curVal > preVal) {
					if (measureVal < this.minVal) {
						var rotateVal = this.changeToRotateVal(this.minVal);
						this.plugSmall.curVal = rotateVal - this.plugBig.curVal;
					}
				}
				measureVal = Number(this.adjustPosAfter(curVal, preVal).toFixed(3));
				if (measureVal !== this.app.data.measureValue) {
					this.app.data.measureValue = measureVal;
				}
			}
		}, {
			key: 'adjustPosAfter',
			value: function adjustPosAfter(curVal, preVal) {
				var measureVal = this.getMeasureVal();
				// 向上
				if (curVal < preVal) {
					if (this.isSmall && measureVal <= this.minVal) {
						var ratateVal = this.changeToRotateVal(this.minVal);
						var adjustVal = ratateVal - this.plugSmall.curVal;
						this.playAudio();
						return this.minVal;
					}
				}
				return measureVal;
			}
		}, {
			key: 'adjustPos',
			value: function adjustPos(curVal, preVal) {
				var measureVal = this.isSmall ? this.getMeasureVal(curVal) : this.getMeasureVal(null, curVal);

				// 小球待测
				if (curVal < preVal) {
					if (this.app.data.itemStatus == 1) {
						if (!this.isSmall && measureVal <= this.minVal) {
							var ratateVal = this.changeToRotateVal(this.minVal);
							var adjustVal = ratateVal - this.plugSmall.curVal;
							return adjustVal;
						}
					} else {
						if (!this.isSmall && measureVal <= this.minVal + 1) {
							this.showTips(".closeto");
							var ratateVal = this.changeToRotateVal(this.minVal + 1);
							var adjustVal = ratateVal - this.plugSmall.curVal;
							var val = curVal;
							if (adjustVal >= preVal) {
								return preVal;
							} else {
								return adjustVal;
							}
						}
					}
				} else {
					if (measureVal > this._maxVal) {
						var ratateVal = this.changeToRotateVal(this._maxVal);
						var adjustVal = this.isSmall ? ratateVal - this.plugBig.curVal : ratateVal - this.plugSmall.curVal;
						return adjustVal <= curVal ? adjustVal : preVal;
					}
				}
				return curVal;
			}
		}, {
			key: 'showTips',
			value: function showTips(_class) {
				var $view = this.$view;
				var _self = this;
				if (_self.timeId) return;
				$view.find(_class).show();
				_self.timeId = setTimeout(function () {
					$(_class).hide();
					_self.timeId = null;
				}, 2000);
			}
		}, {
			key: 'playAudio',
			value: function playAudio() {
				var $view = this.$view;
				var ka = $view.find(".prompt-kaka");
				ka.show();
				$view.find(".audio")[0].play();
				var _self = this;
				if (_self.audioTimeId) return;
				_self.audioTimeId = setTimeout(function () {
					ka.hide();
					_self.audioTimeId = null;
				}, 2000);
			}

			// 切换旋转按钮操作状态
		}, {
			key: 'toggleTouch',
			value: function toggleTouch(bool) {
				if (bool) {
					this.plugBig.enableTouch = false;
					this.plugSmall.enableTouch = false;
				} else {
					this.plugBig.enableTouch = true;
					this.plugSmall.enableTouch = true;
				}
			}
		}, {
			key: 'isLocked',
			value: function isLocked() {
				if (this.app.menu.isAnima) return true;
				if (this.app.data.isLocked) {
					this.showTips(".locked-prompt");
					return true;
				} else {
					return false;
				}
			}
		}, {
			key: 'minVal',
			get: function get() {
				if (this.app.data.itemStatus) {
					this._minVal = 0;
				} else {
					this._minVal = this.app.data.itemSize;
				}
				return this._minVal;
			}
		}], [{
			key: 'getInst',
			value: function getInst() {
				MeasureMain._inst = MeasureMain._inst || new MeasureMain();
				return MeasureMain._inst;
			}
		}]);

		return MeasureMain;
	}(_baseControl2['default']);

	exports['default'] = MeasureMain;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 7 */
/***/function (module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
		} else {
			obj[key] = value;
		}return obj;
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _modelAppConfig = __webpack_require__(5);

	var _modelAppConfig2 = _interopRequireDefault(_modelAppConfig);

	/**
  * 组件:图片平铺
  * @example
  * 		创建一个图片平铺组件，用于拖动图片时，轮回显示这张图片。
  * 		$myDom = $("<div style='background:url("scale.png")'></div>");
  * 		let myPlug = new PlugTileImage(
  * 						$myDom,
  * 						$document,
  * 						...,
  * 						...,
  * 					);
  *		 @author Arvin
  */
	var _ = function _() {
		for (var _len = arguments.length, res = Array(_len), _key = 0; _key < _len; _key++) {
			res[_key] = arguments[_key];
		}

		return console.log.apply(console, ['[PlugTileImage]'].concat(res));
	};

	var PlugTileImage = function () {
		/**
   * 构造
   * @param $target 	  （必须）$target的背景图必须放在 background:url('...')里，其余属性自己设置
   * @param $canvas    （必须）$canvas为mouseMove时经过的节点中最外层的Dom节点。
   * @param isVertical （可选）true||false,方向是否为垂直方向。默认为垂直方向
   * @param cb 		 （可选）回调函数
   */

		function PlugTileImage($target, $canvas, _ref) {
			var _ref$isVertical = _ref.isVertical;
			var isVertical = _ref$isVertical === undefined ? true : _ref$isVertical;
			var _ref$enableTouch = _ref.enableTouch;
			var enableTouch = _ref$enableTouch === undefined ? true : _ref$enableTouch;
			var _ref$cb = _ref.cb;
			var cb = _ref$cb === undefined ? null : _ref$cb;
			var _ref$adjust = _ref.adjust;
			var adjust = _ref$adjust === undefined ? null : _ref$adjust;
			var _ref$isLocked = _ref.isLocked;
			var isLocked = _ref$isLocked === undefined ? null : _ref$isLocked;

			_classCallCheck(this, PlugTileImage);

			this._$target = $target;
			this._$canvas = $canvas;
			this._direction = isVertical ? "y" : "x";
			this._enableTouch = false;
			this._curVal = 0;
			//回调函数
			this._cb = cb;
			this._adjust = adjust;
			//移动信息
			this._moveInfo = { beginX: null, beginY: null };
			this._init();
			this.enableTouch = enableTouch;
			this.isLocked = isLocked;
		}

		/**
   * 析构
   */

		_createClass(PlugTileImage, [{
			key: "destroy",
			value: function destroy() {
				this._eventUnBind();
			}

			/**
    * 初始化
    * @private
    */
		}, {
			key: "_init",
			value: function _init() {
				this._$target.css('background-repeat', "repeat-" + this._direction);
				// this._$target.width(this._$target.width());
			}

			/***************************************************************************
    * 对外接口
    **************************************************************************/
			/**
   /**
    * 对象 dom
    */
		}, {
			key: "_getRealEvent",

			/***************************************************************************
    * 鼠标相关
    **************************************************************************/
			/**
    * 根据事件类型，获取目标
    * 主要是为了pad兼容
    */
			value: function _getRealEvent(event) {
				event = event.originalEvent ? event.originalEvent : event;
				if (event.targetTouches && event.targetTouches.length) {
					return event.targetTouches[0];
				}
				if (event.changedTouches && event.changedTouches.length) {
					return event.changedTouches[0];
				}
				return event;
			}

			/**
    * 事件绑定
   */
		}, {
			key: "_eventBind",
			value: function _eventBind() {
				var _this = this;

				this._$target.on({
					'mousedown touchstart': function mousedownTouchstart(event) {
						return _this._onMouseDown(event);
					}
				});
			}

			/**
    * 事件解绑
    */
		}, {
			key: "_eventUnBind",
			value: function _eventUnBind() {
				this._$target.off();
				this._$canvas.off(this._viewEvt);
			}

			/**
    * 移动开始前的初始化
    */
		}, {
			key: "_initMove",
			value: function _initMove(realEvt) {
				var _this2 = this;

				this._moveInfo.beginX = realEvt.pageX;
				this._moveInfo.beginY = realEvt.pageY;
				this._viewEvt = {
					'mousemove touchmove': function mousemoveTouchmove(event) {
						return _this2._onMouseMove(event);
					},
					'mouseup touchend': function mouseupTouchend(event) {
						return _this2._onMouseUp(event);
					},
					'mouseleave': function mouseleave(event) {
						return _this2._onMouseOut(event);
					}
				};
				this._$canvas.on(this._viewEvt);
			}

			/**
    * 清除移动信息
    */
		}, {
			key: "_clearMove",
			value: function _clearMove() {
				this._moveInfo.beginX = null;
				this._moveInfo.beginY = null;
				this._$canvas.off(this._viewEvt);
			}

			/**
    * 开始点击图形
    */
		}, {
			key: "_onMouseDown",
			value: function _onMouseDown(event) {
				event.preventDefault();
				event.stopPropagation();
				var realEvt = this._getRealEvent(event);
				if (this.isLocked != null && !this.isLocked()) {
					this._initMove(realEvt);
				}
			}

			/**
    * 拖动图形
    */
		}, {
			key: "_onMouseMove",
			value: function _onMouseMove(event) {
				event.preventDefault();
				event.stopPropagation();
				event = this._getRealEvent(event);
				if (this._moveInfo.beginX === null) return;
				var temVal = this.curVal;
				var pagexy = event["client" + this._direction.toUpperCase()];
				var beginxy = this._moveInfo["begin" + this._direction.toUpperCase()];
				var val = pagexy - beginxy + temVal;

				if (Math.abs(val - temVal) < 5) return;
				if (this._adjust !== null) {
					val = this._adjust(val, temVal);
				}
				this._moveInfo["begin" + this._direction.toUpperCase()] = pagexy;
				if (val == temVal) return;
				this.curVal = val;
				if (this._cb !== null) this._cb(this.curVal, temVal);
			}

			/**
    * 放弃移动
    */
		}, {
			key: "_onMouseUp",
			value: function _onMouseUp() {
				event.preventDefault();
				event.stopPropagation();
				this._clearMove();
			}

			/**
    * 鼠标移出目标
    */
		}, {
			key: "_onMouseOut",
			value: function _onMouseOut(event) {
				event.preventDefault();
				event.stopPropagation();
				this._clearMove();
			}
		}, {
			key: "$dom",
			get: function get() {
				return this._$target;
			}

			/**
    * 获取$target当前偏移量
    */
		}, {
			key: "curVal",
			get: function get() {
				return this._curVal;
			},

			/**
    * 设置$target当前偏移量
    */
			set: function set(newVal) {
				this._curVal = newVal;
				this._$target.css("background-position-" + this._direction, newVal + "px");
			}
		}, {
			key: "curValWithAni",
			get: function get() {
				return this._curVal;
			},

			/**
    * 设置$target当前偏移量,带动画效果
    */
			set: function set(newVal) {
				var animateTime = _modelAppConfig2["default"].getInst().animateTime;
				var bgp = this._direction === 'y' ? 'backgroundPositionY' : 'backgroundPositionX';
				this._curVal = newVal;

				this._$target.animate(_defineProperty({}, bgp, newVal + "px"), animateTime);
			}

			/**
    * 获取当前事件状态
    */
		}, {
			key: "enableTouch",
			get: function get() {
				return this._enableTouch;
			},

			/**
    * 设置$target事件状态
    */
			set: function set(flag) {
				if (this._enableTouch === flag) return;
				if (flag === true) {
					this._eventBind();
					this._enableTouch = true;
				} else {
					this._eventUnBind();
					this._enableTouch = false;
				}
			}
		}]);

		return PlugTileImage;
	}();

	exports["default"] = PlugTileImage;
	module.exports = exports["default"];

	/***/
},
/* 8 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var _baseControl = __webpack_require__(4);

	var _baseControl2 = _interopRequireDefault(_baseControl);

	var _plugPlugRod = __webpack_require__(9);

	var _plugPlugRod2 = _interopRequireDefault(_plugPlugRod);

	/**
  * 待测物体控制器
  * 实现功能：缩放，放置
  *
  */

	var MeasureShape = function (_BaseControl) {
		_inherits(MeasureShape, _BaseControl);

		_createClass(MeasureShape, null, [{
			key: 'getInst',
			value: function getInst() {
				MeasureShape._inst = MeasureShape._inst || new MeasureShape();
				return MeasureShape._inst;
			}

			/**
    * 构造
    */
		}]);

		function MeasureShape() {
			_classCallCheck(this, MeasureShape);

			_get(Object.getPrototypeOf(MeasureShape.prototype), 'constructor', this).call(this);
		}

		/**
   * 析构
   */

		_createClass(MeasureShape, [{
			key: 'destroy',
			value: function destroy() {
				this._plugRod && this._plugRod.destroy();
				MeasureShape._inst = null;
			}

			/**
    * 初始化事件
    */
		}, {
			key: 'init',
			value: function init(app) {
				var _this = this;

				this.app = app;
				this.minVal = 5; // 最小mm
				this.maxVal = 14; // 最大mm
				this.ratioNum = this.app.config.ratioNum;
				var $view = this.app.$view;
				this.$view = $view;
				this.$ball = $view.find(".measuringobject");
				this.$container = $view.find(".ball-container");
				this.$measurePoint = $view.find(".measurePoint");
				this.$wrap = $view.find(".micrometer_inner");
				this.$slider = $view.find(".slide");
				this.down = false;
				this.isMove = false;
				this.containerPos = {};
				this.ballInitPos = {
					left: this.$ball.position().left,
					top: this.$ball.position().top
				};

				this.timeId = null;
				this._plugRod = new _plugPlugRod2['default'](0, 9000, function (curVal, curPercent) {
					return _this._onChangeSize(curVal, curPercent);
				}, $view.find(".rangeslider"), $view.find(".rangeslider-handle"), $view, $view.find(".rangeslider-fill"));
				this._ball_downEvent();
				this.isSetBall = false;
				return this;
			}
		}, {
			key: 'resize',
			value: function resize() {
				this.$ball.css({ left: '', top: '' });
				this.ballInitPos = {
					left: this.$ball.position().left,
					top: this.$ball.position().top
				};
				this.$ball.css(this.ballInitPos);
				this._plugRod.resize();
				this.app.data.itemStatus = this.app.data.itemStatus;
			}

			// 调整小球尺寸及滑块,供数据驱动调用
		}, {
			key: 'setBallSize',
			value: function setBallSize(val) {
				this._ballSize = val * this.app.config.measureNumPx;
				this._ballSize *= 1.15;
				this.$ball.css({ width: this._ballSize, height: this._ballSize });
				this._plugRod.curVal = (val - this.minVal) * 1000;
			}
		}, {
			key: 'setBallStatus',
			value: function setBallStatus(val) {
				if (val === 0) {
					this._dropBall();
					return;
				}
				if (val === 1) {
					this._dropBallBack();
				}
			}

			/**
    * 用户拖动拉杆，重新调节了尺寸
    */
		}, {
			key: '_onChangeSize',
			value: function _onChangeSize(curVal, curPercent) {
				this.app.data.itemSize = Number((this.minVal + curVal / 1000).toFixed(3));
			}

			// 获取待测区域
		}, {
			key: '_getContainerPos',
			value: function _getContainerPos() {
				this.containerPos = {
					left: this.$container.offset().left - this.wrapLeft,
					top: this.$container.offset().top - this.wrapTop,
					right: this.$container.offset().left + this.$container.width() - this.wrapLeft,
					bottom: this.$container.offset().top + this.$container.height() - this.wrapTop
				};
			}

			// 获取测量点的位置
		}, {
			key: 'getMeasurePointPos',
			value: function getMeasurePointPos() {
				this.wrapLeft = this.$wrap.offset().left;
				this.wrapTop = this.$wrap.offset().top;
				var left = this.$measurePoint.offset().left - this.wrapLeft - this._ballSize * 2.5 / 73;
				var top = this.$measurePoint.offset().top - this.wrapTop - this.$ball.height() / 2;
				return { left: left, top: top };
			}

			/* 是否移动到待测区域
    *  curX, CurY当前坐标
   */
		}, {
			key: '_isOverContainer',
			value: function _isOverContainer(curX, CurY) {
				if (curX > this.containerPos.left && curX < this.containerPos.right && CurY > this.containerPos.top && CurY < this.containerPos.bottom) {
					return true;
				}
				return false;
			}

			// 小球丢到待测点
		}, {
			key: '_dropBall',
			value: function _dropBall() {
				var obj = this.getMeasurePointPos();
				this.$ball.css({ left: obj.left, top: obj.top });
				this.$slider.hide();
				this._unBindEvent();
				this.isSetBall = true;
			}

			// 小球丢回初始位置
		}, {
			key: '_dropBallBack',
			value: function _dropBallBack() {
				var obj = {
					left: this.ballInitPos.left,
					top: this.ballInitPos.top
				};
				this.$ball.css({ left: obj.left, top: obj.top });
				this.$slider.show();
				this._unBindEvent();
			}

			// 小球鼠标拖拽事件
		}, {
			key: '_ball_downEvent',
			value: function _ball_downEvent() {
				var _this2 = this;

				this.$ball.on("mousedown touchstart", function (event) {
					_this2._downEvent(event);
				});
			}
		}, {
			key: '_bindEvent',
			value: function _bindEvent() {
				var _this3 = this;

				this.$view.on("mousemove touchmove", function (event) {
					_this3._moveEvent(event);
				});
				this.$view.on("mouseleave", function (event) {
					_this3._leaveEvent(event);
				});
				this.$view.on("mouseup touchend", function (event) {
					_this3._upEvent(event);
				});
			}
		}, {
			key: '_downEvent',
			value: function _downEvent(ev) {
				ev.preventDefault();
				ev.stopPropagation();
				ev = this.app.main._getRealEvent(event);
				this.down = true;
				this.wrapLeft = this.$wrap.offset().left;
				this.wrapTop = this.$wrap.offset().top;

				this.left = this.$ball.offset().left;
				this.top = this.$ball.offset().top;
				this.startX = ev.pageX - this.left;
				this.startY = ev.pageY - this.top;
				this.startPageX = ev.pageX;
				this.startPageY = ev.pageY;

				this._getContainerPos();
				this._bindEvent();
			}
		}, {
			key: '_moveEvent',
			value: function _moveEvent(ev) {
				ev.preventDefault();
				ev.stopPropagation();
				ev = this.app.main._getRealEvent(event);
				if (!this.down) {
					return;
				}
				if (!(Math.abs(ev.pageX - this.startPageX) > 5 || Math.abs(ev.pageY - this.startPageY) > 5)) return;
				this.isMove = true;
				if (!this._toOut()) {
					return;
				};
				this.moveX = ev.pageX - this.startX - this.wrapLeft;
				this.moveY = ev.pageY - this.startY - this.wrapTop;
				this.$ball.css("left", this.moveX);
				this.$ball.css("top", this.moveY);
			}
		}, {
			key: '_inOrOut',
			value: function _inOrOut() {
				var _isOverContainer = this._isOverContainer(this.moveX, this.moveY);
				var isSmaller = this.app.data.itemSize < this.app.data.measureValue ? true : false;
				// out => in
				if (_isOverContainer && this.app.data.itemStatus === 1) {
					if (isSmaller) {
						this.app.data.itemStatus = 0;
						this._unBindEvent();
					} else {
						this.showTips(".shortatge_in");
						this.app.data.itemStatus = 1;
						this._unBindEvent();
					}
				}

				// in => out
				if (!_isOverContainer && this.app.data.itemStatus === 0) {
					this.app.data.itemStatus = 1;
					this._unBindEvent();
				}
			}

			// 若空间不足，移出时小球不动
		}, {
			key: '_toOut',
			value: function _toOut() {
				var isSmaller = this.app.data.itemSize < this.app.data.measureValue ? true : false;
				if (this.app.data.itemStatus == 0 && !isSmaller) {
					this.showTips(".shortatge_out");
					this._unBindEvent();
					return false;
				}
				return true;
			}
		}, {
			key: '_upEvent',
			value: function _upEvent(ev) {

				ev.preventDefault();
				ev.stopPropagation();
				if (this.isMove) {
					this._inOrOut();
					this.app.data.itemStatus = this.app.data.itemStatus;
					this._unBindEvent();
					return;
				}
				// 点击
				var isSmaller = this.app.data.itemSize < this.app.data.measureValue ? true : false;
				// out => in
				if (this.app.data.itemStatus === 1) {
					if (isSmaller) {
						this.app.data.itemStatus = 0;
						this._unBindEvent();
					} else {
						this.showTips(".shortatge_in");
						this._unBindEvent();
					}
				} else {
					var _isSmaller = this.app.data.itemSize < this.app.data.measureValue ? true : false;
					if (_isSmaller) {
						this.app.data.itemStatus = 1;
						this._unBindEvent();
					} else {
						this.showTips(".shortatge_out");
						this._unBindEvent();
					}
				}
			}
		}, {
			key: '_leaveEvent',
			value: function _leaveEvent(ev) {
				ev.preventDefault();
				ev.stopPropagation();
				// 换原
				this.app.data.itemStatus = this.app.data.itemStatus;
			}

			// 解绑event
		}, {
			key: '_unBindEvent',
			value: function _unBindEvent() {
				this.down = false;
				this.isMove = false;
				this.$view.off();
			}
		}, {
			key: 'showTips',
			value: function showTips(_class) {
				var _self = this;
				var $view = this.$view;
				if (_self.timeId) return;
				$view.find(_class).show();
				_self.timeId = setTimeout(function () {
					$(_class).hide();
					_self.timeId = null;
				}, 2000);
			}
		}]);

		return MeasureShape;
	}(_baseControl2['default']);

	exports['default'] = MeasureShape;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 9 */
/***/function (module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	var _ = function _() {
		for (var _len = arguments.length, res = Array(_len), _key = 0; _key < _len; _key++) {
			res[_key] = arguments[_key];
		}

		return console.log.apply(console, ['[PlugRod]'].concat(res));
	};
	/**
  * 组件：拉杆
  * @example
  *        创建一个拉杆组件，用于控制音量，在0~100之间
  *        let audioRod = new PlugRod(
  *            0,
  *            100,
  *            (val, pct) => console.log(`当前音量值：${val}, 当前音量百分比:${pct}`),
  *            $myAudioDom
  *        );
  *
  * @author Tiago
  */

	var PlugRod = function () {
		/**
   * 构造
   *
   * @param minVal    取值下限
   * @param maxVal    取值上限
   * @param cb        值变化时的回调，参数是当前值，以及百分比
   * @param $silder   背景 Dom
   * @param $handle   滑块 Dom
   * @param $canver 	 监听鼠标移动的 Dom
   * @param $progress  显示进度的背景Dom
   * @param defVal    默认值，默认是 minVal
   */

		function PlugRod(minVal, maxVal, cb, $silder, $handle, $canver, $progress, defVal) {
			if ($progress === undefined) $progress = null;

			_classCallCheck(this, PlugRod);

			// 设置锁定，锁定后值将不会变化，也无法响应交互
			this._lock = false;
			// 强制 curVal 为 [minVal, maxVal] 间的整数
			this.useInt = true;
			this._cb = cb;
			this._curVal = -1;
			this._minVal = minVal;
			this._maxVal = maxVal;
			this._silderWidth = $silder.outerWidth();
			this._silderLeft;
			this._handleWidth = $handle.outerWidth();
			this._step = (this._silderWidth - this._handleWidth + 4) / (this._maxVal - this._minVal);
			this._$silder = $silder;
			this._$handle = $handle;
			this._$canver = $canver;
			// 移动信息
			this._moveInfo = { beginX: null, beginY: null };
			this._init(defVal != null ? defVal : this._minVal);
			this.$progress = $progress;
		}

		_createClass(PlugRod, [{
			key: 'resize',
			value: function resize() {
				this._silderWidth = this._$silder.outerWidth();
				this._handleWidth = this._$handle.outerWidth();
				this._step = (this._silderWidth - this._handleWidth + 4) / (this._maxVal - this._minVal);
				this._silderLeft = this._$silder.offset().left;
				this.curPercent = this.curPercent;
			}

			/**
    * 析构
    */
		}, {
			key: 'destroy',
			value: function destroy() {
				this._$silder.off();
				this._$handle.off();
				this._$canver.off(this._viewEvt);
			}

			/**
    * 初始化
    * @private
    */
		}, {
			key: '_init',
			value: function _init(defVal) {
				var _this = this;

				this._$handle.css('pointer-events', 'none');
				this._eventBind();
				this._viewEvt = {
					'mousemove touchmove': function mousemoveTouchmove(event) {
						return _this._onMouseMove(event);
					},
					'mouseup touchend': function mouseupTouchend(event) {
						return _this._onMouseUp(event);
					},
					'mouseleave': function mouseleave(event) {
						return _this._onMouseLeave(event);
					}
				};
			}

			/***************************************************************************
    * 对外接口
    **************************************************************************/
			/**
    * 获取当前值
    * 范围：[0, maxVal]
    */
		}, {
			key: '_eventBind',

			/***************************************************************************
    * 鼠标相关
    **************************************************************************/
			value: function _eventBind() {
				var _this2 = this;

				this._$silder.on({ "mousedown touchstart": function mousedownTouchstart(event) {
						return _this2._onMouseDown(event);
					} });
			}
		}, {
			key: '_eventUnBind',
			value: function _eventUnBind() {
				this._$canver.off();
				this._moveInfo.beginX = null;
				this._moveInfo.beginY = null;
			}

			/**
    * 移动开始前的初始化
    */

		}, {
			key: '_initMove',
			value: function _initMove(realEvt) {
				this._moveInfo.beginX = realEvt.pageX;
				this._moveInfo.beginY = realEvt.pageY;
			}

			/**
    * 根据事件类型，获取目标
    * 主要是为了pad兼容
    */
		}, {
			key: '_getRealEvent',
			value: function _getRealEvent(event) {
				event = event.originalEvent ? event.originalEvent : event;
				if (event.targetTouches && event.targetTouches.length) {
					return event.targetTouches[0];
				}
				if (event.changedTouches && event.changedTouches.length) {
					return event.changedTouches[0];
				}
				return event;
			}

			/**
    * 开始点击图形
    */
		}, {
			key: '_onMouseDown',
			value: function _onMouseDown(event) {
				event.preventDefault();
				event.stopPropagation();
				//_( event.type, "0" );
				var realEvt = this._getRealEvent(event);
				if (this.lock == true) {
					return;
				}
				this._initMove(realEvt);

				this._$canver.on(this._viewEvt);
				this.curPercent = (realEvt.pageX - this.silderLeft) / this._silderWidth;
			}

			/**
    * 移动图形
    */
		}, {
			key: '_onMouseMove',
			value: function _onMouseMove(event) {
				event.preventDefault();
				event.stopPropagation();
				var realEvt = this._getRealEvent(event);
				if (this._moveInfo.beginX == null) {
					return;
				}
				this.curPercent = (realEvt.pageX - this.silderLeft) / this._silderWidth;
			}

			/**
    * 放弃移动
    */
		}, {
			key: '_onMouseUp',
			value: function _onMouseUp(event) {
				event.preventDefault();
				event.stopPropagation();
				this._eventUnBind();
			}

			/**
    * 鼠标移出目标
    */
		}, {
			key: '_onMouseLeave',
			value: function _onMouseLeave(event) {
				event.preventDefault();
				event.stopPropagation();
				this._eventUnBind();
			}
		}, {
			key: 'curVal',
			get: function get() {
				return this._curVal;
			},
			set: function set(newVal) {
				if (this._lock == true) {
					return;
				}
				this.useInt && (newVal = Math.floor(newVal));
				newVal = Math.min(Math.max(this._minVal, newVal), this._maxVal);
				var oldVal = this._curVal;
				this._curVal = newVal;

				var size = (newVal - this._minVal) * this._step;
				this._$handle.css('left', size - 4 + 'px');
				if (this.$progress) this.$progress.css('width', size + this._handleWidth / 2);
			}

			/**
    * 获取当前百分比
    * 范围：[0, 1]
    */
		}, {
			key: 'curPercent',
			get: function get() {
				return (this._curVal - this._minVal) / (this._maxVal - this._minVal);
			},
			set: function set(newPercent) {
				this.curVal = this._minVal + newPercent * (this._maxVal - this._minVal);
				if (this._cb) this._cb(this.curVal, this.curPercent);
			}

			/**
    * 能够拉动的最大值
    * @returns {number}
    */
		}, {
			key: 'maxVal',
			get: function get() {
				return this._maxVal;
			}
		}, {
			key: 'silderLeft',
			get: function get() {
				if (!this._silderLeft) {
					this._silderLeft = this._$silder.offset().left;
				}
				return this._silderLeft;
			}
		}]);

		return PlugRod;
	}();

	exports['default'] = PlugRod;
	module.exports = exports['default'];

	/***/
},
/* 10 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x3, _x4, _x5) {
		var _again = true;_function: while (_again) {
			var object = _x3,
			    property = _x4,
			    receiver = _x5;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x3 = parent;_x4 = property;_x5 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var _baseControl = __webpack_require__(4);

	var _baseControl2 = _interopRequireDefault(_baseControl);

	var _ = function _() {
		for (var _len = arguments.length, res = Array(_len), _key = 0; _key < _len; _key++) {
			res[_key] = arguments[_key];
		}

		return console.log.apply(console, ['[BottomMenu]'].concat(res));
	};

	/**
  * 其他功能控制器
  * 功能：结构名称，内部构造，注意事项, 读数练习
  *
  */

	var BottomMenu = function (_BaseControl) {
		_inherits(BottomMenu, _BaseControl);

		_createClass(BottomMenu, null, [{
			key: 'getInst',
			value: function getInst() {
				BottomMenu._inst = BottomMenu._inst || new BottomMenu();
				return BottomMenu._inst;
			}

			/**
    * 构造
    */
		}]);

		function BottomMenu() {
			_classCallCheck(this, BottomMenu);

			_get(Object.getPrototypeOf(BottomMenu.prototype), 'constructor', this).call(this);
		}

		/**
   * 析构
   */

		_createClass(BottomMenu, [{
			key: 'destroy',
			value: function destroy() {
				BottomMenu._inst = null;
			}

			/**
    * 初始化事件
    */
		}, {
			key: 'init',
			value: function init(app) {
				var $MenuItems = app.$view.find('.menu a');
				this.app = app;
				this.$MenuItems = $MenuItems;
				this.map = {
					struNameCls: app.config.struNameViewCls,
					innerStruCls: app.config.innerStruViewCls,
					atteMattCls: app.config.atteMattViewCls,
					struNameBtn: $MenuItems.eq(0),
					innerStruBtn: $MenuItems.eq(1),
					atteMattBtn: $MenuItems.eq(2),
					readPracBtn: $MenuItems.eq(3)
				};

				this.$shaftbody = app.$view.find('.micro-shaftbody');
				this.$interStru = app.$view.find('.scrollcal');

				this.myDown = 'click';
				this._handle = app.$view.find('.menu');
				this.dataMin = this.app.config.min;
				this.dataMax = this.app.config.max;

				this.bindEvent();

				return this;
			}

			/**
    * 绑定事件，底部菜单的事件监听器
    */
		}, {
			key: 'bindEvent',
			value: function bindEvent() {
				var _this = this;

				this._handle.on(this.myDown, 'a', function (event) {
					var e = event;
					if (e.which && e.which !== 1) {
						return;
					}
					var $tab = $(e.currentTarget);
					//更新curBtn,数据驱动
					if ($tab.hasClass('active')) {
						_this.app.data.curBtn = -1;
						return;
					}
					//如果是点击读数练习
					if ($tab.parent().index() === _this.$MenuItems.length - 1) {
						_this.toggleTab($tab.parent().index());
						return;
					}
					//正常流程
					_this.app.data.curBtn = $tab.parent().index();
				});
			}

			/**
    * 作为底部菜单的4个按钮的事件监听器
    * @param tabIndex
    */
		}, {
			key: 'toggleTab',
			value: function toggleTab(tabIndex) {
				var $tab = this.$MenuItems.eq(tabIndex);
				//如果为-1时清除已激活的tab
				if (tabIndex === -1) {
					this._clearTab();
					return;
				}

				//如果点了读数练习,则做一系列操作
				if (tabIndex === this.$MenuItems.length - 1) {
					//this.readPractice();
					this.app.data.isRandom = true;
					return;
				}
				//点前3个而按钮进行的操作
				this._clearTab();
				$tab.toggleClass('active');
				var $class = this._tabToCls($tab);
				this._toggleView($class);
			}

			/**
    * 点击读数练习后需要做的一系列操作
    */
		}, {
			key: 'readPractice',
			value: function readPractice() {
				var _this2 = this;

				this.app.forbideFull(true);
				var _self = this;
				if (_self.isAnima) return;
				_self.isAnima = true;
				//仪器解锁
				if (this.app.data.isLocked) {
					this.app.data.isLocked = false;
				}
				//小球是否正在测试
				this.app.data.preItemStatus = this.app.data.itemStatus;
				var measureValue = this.app.data.randomValue >= 0 ? this.app.data.randomValue : this.getRandomData();
				this.app.data.randomValue = measureValue;
				if (this.app.data.itemStatus === 0) {
					var distance = this.app.data.measureValue - this.app.data.itemSize;
					var gap = this.app.config.aniGap;
					var totalDis = this.app.data.itemSize + gap > this.app.config.max ? this.app.config.max : this.app.data.itemSize + gap;
					//间隔是否小于gap
					if (distance < gap) {
						this.app.main.setMeasureAni(totalDis, function () {
							_this2.app.data.itemStatus = 1;
							_this2.app.main.setMeasureAni(measureValue, function () {
								_this2.app.data.measureValue = measureValue;
								_this2.app.data.isLocked = true;
								_self.isAnima = false;
								_this2.app.data.isRandom = false;
								_this2.app.data.randomValue = -1;
								_this2.app.data.preItemStatus = -1;
								_this2.app.forbideFull(false);
							});
						});
						//在动画回调中已更新数据，所以直接返回
						return;
					}
					this.app.data.itemStatus = 1;
				}
				this.app.main.setMeasureAni(measureValue, function () {
					_this2.app.data.measureValue = measureValue;
					//数据驱动
					_this2.app.data.isLocked = true;
					_self.isAnima = false;
					_this2.app.data.isRandom = false;
					_this2.app.data.randomValue = -1;
					_this2.app.data.preItemStatus = -1;
					_this2.app.forbideFull(false);
				});
			}
		}, {
			key: '_clearTab',
			value: function _clearTab() {
				var activeTab = this.app.$view.find('.menu a.active');

				if (activeTab && activeTab.length > 0) {
					this._deactiveTab(activeTab);
				}
			}

			/**
    * 禁用该tab并隐藏视图`
    * @param $tab 传入被禁用的按钮jq对象
    */
		}, {
			key: '_deactiveTab',
			value: function _deactiveTab($tab) {
				var $class = this._tabToCls($tab);
				$tab.removeClass('active');

				this._hideView($class);
			}

			/**
    * 切换视图
    *
    */
		}, {
			key: '_toggleView',
			value: function _toggleView($class) {
				if ($class === this.map.innerStruCls) {
					console.log(this.$interStru);
					this.$interStru.toggleClass($class);
					return;
				}
				this.$shaftbody.toggleClass($class);
			}

			/**
    * 隐藏视图
    *
    */
		}, {
			key: '_hideView',
			value: function _hideView($class) {
				if ($class === this.map.innerStruCls) {
					this.$interStru.removeClass($class);
					return;
				}
				this.$shaftbody.addClass($class);
			}

			/**
    * 设置随机测量数据, 左闭右闭(min, max)
    */
		}, {
			key: 'getRandomData',
			value: function getRandomData() {
				var min = arguments.length <= 0 || arguments[0] === undefined ? this.dataMin : arguments[0];
				var max = arguments.length <= 1 || arguments[1] === undefined ? this.dataMax : arguments[1];

				var num = undefined;

				num = (Math.random() * (max - min) + min).toFixed(3);

				if (num == min) {
					return arguments.callee(min, max);
				} else {
					return parseFloat(num);
				}
			}

			/**
    * 按钮和视图映射函数
    * @param $tab
    * @returns {*}
    */
		}, {
			key: '_tabToCls',
			value: function _tabToCls($tab) {
				var index = $tab.parent().index();
				switch (index) {
					case 0:
						return this.map.struNameCls;
						break;
					case 1:
						return this.map.innerStruCls;
						break;
					case 2:
						return this.map.atteMattCls;
						break;
					default:
						_('tabToCls function arguments error......');
						return this.map.struNameCls;

				}
			}
		}]);

		return BottomMenu;
	}(_baseControl2['default']);

	exports['default'] = BottomMenu;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 11 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _get = function get(_x, _x2, _x3) {
		var _again = true;_function: while (_again) {
			var object = _x,
			    property = _x2,
			    receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
				var parent = Object.getPrototypeOf(object);if (parent === null) {
					return undefined;
				} else {
					_x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
				}
			} else if ('value' in desc) {
				return desc.value;
			} else {
				var getter = desc.get;if (getter === undefined) {
					return undefined;
				}return getter.call(receiver);
			}
		}
	};

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var _baseControl = __webpack_require__(4);

	var _baseControl2 = _interopRequireDefault(_baseControl);

	var _ = function _() {
		for (var _len = arguments.length, res = Array(_len), _key = 0; _key < _len; _key++) {
			res[_key] = arguments[_key];
		}

		return console.log.apply(console, ['[ZoomTool]'].concat(res));
	};

	/**
  * 读数放大镜和查看读数
  */

	var ZoomTool = function (_BaseControl) {
		_inherits(ZoomTool, _BaseControl);

		_createClass(ZoomTool, null, [{
			key: 'getInst',
			value: function getInst() {
				ZoomTool._inst = ZoomTool._inst || new ZoomTool();
				return ZoomTool._inst;
			}

			/**
    * 构造
    */
		}]);

		function ZoomTool() {
			_classCallCheck(this, ZoomTool);

			_get(Object.getPrototypeOf(ZoomTool.prototype), 'constructor', this).call(this);
		}

		/**
   * 析构
   */

		_createClass(ZoomTool, [{
			key: 'destroy',
			value: function destroy() {
				ZoomTool._inst = null;
			}

			/**
    * 初始化事件
    */
		}, {
			key: 'init',
			value: function init(app) {
				//初始化读数数据
				this.app = app;

				this.$textBtn = app.$view.find('.lookupBtn');
				this.$text = app.$view.find('.lookupText');
				this.$view = app.$view.find('.lookupView');
				this.$lockBtn = app.$view.find('.switchLock');
				this.$lockBtnParent = app.$view.find('.microlocked ');
				this.$bigPic = app.$view.find('.zoomDetail');
				this.$fixRule = this.$bigPic.find('.fixedRuler');
				this.$rulerContain = this.$bigPic.find('.zoom-ruler-contain');
				this.fixRuleInitLeft = this.getPos(this.$fixRule, 'left');
				this.rulerContainInitTop = this.getPos(this.$rulerContain, 'top');
				this.fixRuleWidth = this.$fixRule.width();
				this.rulerHeight = this.$rulerContain.find('.ruler').height();

				this.$highlighted = app.$view.find('.highlighted');
				this.$resultReading = app.$view.find('.resultReading');
				this.$formulaTxt = app.$view.find('.formulaTxt');

				this.myDown = 'click';

				this.lockBtnClass = 'lockedon';
				this.textBtnClass = 'active';
				this.bindEvent();

				return this;
			}
		}, {
			key: 'resize',
			value: function resize() {
				this.fixRuleWidth = this.$fixRule.width();
				this.$fixRule.css('left', '');
				this.fixRuleInitLeft = this.getPos(this.$fixRule, 'left');
				var left = this.app.data.measureValue * this.fixRuleWidth / 20;
				this.$fixRule.css('left', this.fixRuleInitLeft - left);

				this.rulerHeight = this.$rulerContain.find('.ruler').height();
				this.$rulerContain.css('top', '');
				this.rulerContainInitTop = this.getPos(this.$rulerContain, 'top');
				var measureNum = this.app.data.measureValue % 0.5 * 100;
				var top = measureNum * this.rulerHeight / 50;
				this.$rulerContain.css('top', this.rulerContainInitTop + top);
			}
		}, {
			key: 'getPos',
			value: function getPos(dom, _css) {
				return parseFloat(dom.css(_css));
			}

			/**
    * 设置放大镜
    */
		}, {
			key: 'setMagnifier',
			value: function setMagnifier(bool, measureValue) {
				if (!bool) return;
				var left = measureValue * this.fixRuleWidth / 20;
				this.$fixRule.css('left', this.fixRuleInitLeft - left);

				var measureNum = measureValue % 0.5 * 100;
				var top = measureNum * this.rulerHeight / 50;
				console.log(this.rulerContainInitTop, top, this.rulerHeight);
				this.$rulerContain.css('top', this.rulerContainInitTop + top);
			}

			/**
    * 绑定事件，止动按钮，查看读数按钮的事件监听器
    */
		}, {
			key: 'bindEvent',
			value: function bindEvent() {
				var _this = this;

				//点击止动按钮 不触发拖动。
				this.$lockBtn.on('mousedown touchstart', function (event) {
					event.stopPropagation();
				});
				this.$lockBtn.on(this.myDown, function (event) {
					event.preventDefault();
					var e = event;
					if (e.which && e.which !== 1) {
						return;
					}

					var $btn = $(e.currentTarget);
					if ($btn.is(_this.$lockBtn)) {
						_this.app.data.isLocked = !_this.app.data.isLocked;
					}
					if (_this.app.data.isLocked && _this.app.data.itemStatus == 0) {
						if (_this.app.data.itemSize < _this.app.data.measureValue) {
							(function () {
								var _self = _this;
								_this.$highlighted.on("webkitAnimationEnd", function () {
									_self.$highlighted.removeClass("flash");
								});
								_this.$highlighted.addClass("flash");
							})();
						}
					}
				});
				this.$textBtn.on(this.myDown, function (event) {
					var e = event;
					if (e.which && e.which !== 1) {
						return;
					}

					var $btn = $(e.currentTarget);
					if ($btn.is(_this.$textBtn)) {
						_this.app.data.isTextShowed = !_this.app.data.isTextShowed;
					}
				});
			}

			/**
    * 切换显示放大图
    * @param bool
    */
		}, {
			key: 'toggleView',
			value: function toggleView(bool, measureValue) {
				this.$lockBtnParent.toggleClass(this.lockBtnClass, bool);

				this.$view.toggle(bool);
				//设置放大镜
				this.setMagnifier(bool, measureValue);

				//切换视图时需要隐藏读数数据,数据驱动
				if (!this.app.data) {
					return;
				}

				this.app.data.isTextShowed = false;
			}

			/**
    * 切换显示读数数据文本
    * @param bool
    */
		}, {
			key: 'toggleData',
			value: function toggleData(bool) {
				this.$textBtn.toggleClass(this.textBtnClass, bool);
				this.$text.toggle(bool);
			}
		}, {
			key: 'updateText',
			value: function updateText(measureValue) {
				// 6.771mm <br> (6.5mm+0.01mm×27.1)
				var sleeve = undefined,
				    thimble = undefined,
				    decimals = undefined;
				//确保精确计算，保留小数位数正确
				decimals = (measureValue - parseInt(measureValue)).toFixed(3);
				if (decimals >= 0.5) {
					thimble = (decimals - 0.5).toFixed(3);
				} else {
					thimble = decimals;
				}

				sleeve = parseFloat((measureValue - thimble).toFixed(1));
				thimble = (thimble * 100).toFixed(1);
				measureValue = measureValue.toFixed(3);

				this.$resultReading.html('<i>' + measureValue + '</i>mm');
				this.$formulaTxt.html('(<i>' + sleeve + '</i>mm+0.01mm × <i>' + thimble + '</i>)');
			}
		}]);

		return ZoomTool;
	}(_baseControl2['default']);

	exports['default'] = ZoomTool;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 12 */
/***/function (module, exports) {

	// 应用数据
	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var controlData = function () {
		_createClass(controlData, null, [{
			key: "getInst",
			value: function getInst() {
				controlData._inst = controlData._inst || new controlData();
				return controlData._inst;
			}
		}]);

		function controlData() {
			_classCallCheck(this, controlData);

			this._defaultData = {
				curBtn: -1, // 底部菜单索引
				itemSize: 5, // 待测物体尺寸
				itemStatus: 1, // 1：初始位置，0：待测
				measureValue: 0, // 完整刻度值
				isTextShowed: false, //是否显示数据文本
				isLocked: false, // 止动按钮状态
				randomValue: -1,
				isRandom: false,
				preItemStatus: -1
			};

			this.data = {};
		}

		_createClass(controlData, [{
			key: "init",
			value: function init(app, data) {
				this.app = app;
				if (!data) {
					data = this._defaultData;
					data.itemSize = parseInt(Math.random() * 5) + 5;
				}
				for (var key in data) {
					this[key] = data[key];
				}

				return this;
			}
		}, {
			key: "destroy",
			value: function destroy() {
				controlData._inst = null;
			}
		}, {
			key: "clone",
			value: function clone() {
				return JSON.parse(JSON.stringify(this.data));
			}
		}, {
			key: "curBtn",
			get: function get() {
				return this.data.curBtn;
			},
			set: function set(index) {
				this.app.menu.toggleTab(index);
				this.data.curBtn = index;
			}
		}, {
			key: "isLocked",
			get: function get() {
				return this.data.isLocked;
			},
			set: function set(bool) {
				this.app.zoom.toggleView(bool, this.measureValue);
				this.data.isLocked = bool;
			}
		}, {
			key: "isTextShowed",
			get: function get() {
				return this.data.isTextShowed;
			},
			set: function set(bool) {
				this.app.zoom.toggleData(bool);
				this.data.isTextShowed = bool;
			}
		}, {
			key: "measureValue",
			set: function set(val) {
				this.data.measureValue = val;
				this.app.main.setMeasureMove(val);

				//更新读数文本
				this.app.zoom.updateText(val);
			},
			get: function get() {
				return this.data.measureValue;
			}
		}, {
			key: "itemSize",
			get: function get() {
				return this.data.itemSize;
			},
			set: function set(val) {
				this.data.itemSize = val;
				this.app.shape.setBallSize(val);
			}
		}, {
			key: "itemStatus",
			get: function get() {
				return this.data.itemStatus;
			},
			set: function set(val) {
				this.data.itemStatus = val;
				this.app.shape.setBallStatus(val);
			}
		}, {
			key: "isRandom",
			set: function set(val) {
				if (val) this.app.menu.readPractice();
				this.data.isRandom = val;
			},
			get: function get() {
				return this.data.isRandom;
			}
		}, {
			key: "randomValue",
			set: function set(val) {
				this.data.randomValue = val;
			},
			get: function get() {
				return this.data.randomValue;
			}
		}, {
			key: "preItemStatus",
			set: function set(val) {
				this.data.preItemStatus = val;
			},
			get: function get() {
				return this.data.preItemStatus;
			}
		}]);

		return controlData;
	}();

	exports["default"] = controlData;
	module.exports = exports["default"];

	/**
  * 单例
  */

	/***/
},
/* 13 */
/***/function (module, exports) {

	/**
  * 功能控制器
  */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	var i18NControl = function () {
		_createClass(i18NControl, null, [{
			key: 'getInst',
			value: function getInst() {
				i18NControl._inst = i18NControl._inst || new i18NControl();
				return i18NControl._inst;
			}

			/**
    * 构造
    */
		}]);

		function i18NControl() {
			_classCallCheck(this, i18NControl);

			this.i18nData = {};
		}

		/**
   * 析构
   */

		_createClass(i18NControl, [{
			key: 'destroy',
			value: function destroy() {
				i18NControl._inst = null;
			}

			/**
    * 初始化事件
    */
		}, {
			key: 'init',
			value: function init(app) {
				this.app = app;
				//TODO 多语言初始化事件
				var data = this.i18nData;
				//仪器对应的文字
				app.$view.find('.structureName_1 .nameTxt').text(data['MicrometerCaliper_cza']);
				app.$view.find('.structureName_3 .nameTxt').text(data['MicrometerCaliper_cwlgf']);
				app.$view.find('.structureName_4 .nameTxt').text(data['MicrometerCaliper_zdxng']);
				app.$view.find('.structureName_5 .nameTxt').text(data['MicrometerCaliper_gdkdb']);
				app.$view.find('.structureName_6 .nameTxt').text(data['MicrometerCaliper_kdkde']);
				app.$view.find('.structureName_7 .nameTxt').text(data['MicrometerCaliper_xnd']);
				app.$view.find('.structureName_8 .nameTxt').text(data['MicrometerCaliper_wtxnd']);
				app.$view.find('.structureName_2 .nameTxt').text(data['MicrometerCaliper_cjc']);
				app.$view.find('.lookupBtn').text(data['MicrometerCaliper_ckds']);
				app.$view.find('.structureName_9 .nameTxt').text(data['MicrometerCaliper_atten1']);
				app.$view.find('.structureName_11 .nameTxt').text(data['MicrometerCaliper_atten2']);
				app.$view.find('.prompt_1 .nameTxt').text(data['MicrometerCaliper_atten3']);
				app.$view.find('.structureName_10 .nameTxt').text(data['MicrometerCaliper_atten4']);

				//底部菜单文字
				app.$view.find('.menu .btns-primary-txt').eq(0).text(data['MicrometerCaliper_jgmc']);
				app.$view.find('.menu .btns-primary-txt').eq(1).text(data['MicrometerCaliper_nbgz']);
				app.$view.find('.menu .btns-primary-txt').eq(2).text(data['MicrometerCaliper_zysx']);
				app.$view.find('.menu .btns-primary-txt').eq(3).text(data['MicrometerCaliper_dslx']);

				//弹窗对应的文字
				app.$view.find('.shortatge_in .con-detail').text(data['MicrometerCaliper_shortatge_in']);
				app.$view.find('.shortatge_out .con-detail').text(data['MicrometerCaliper_shortatge_out']);
				app.$view.find('.locked-prompt .con-detail').text(data['MicrometerCaliper_locked-prompt']);
				app.$view.find('.prompt-kaka .con-detail').text(data['MicrometerCaliper_prompt-kaka']);
				app.$view.find('.closeto .con-detail').html(data['MicrometerCaliper_closeto']);

				//test

				return this;
			}
		}]);

		return i18NControl;
	}();

	exports['default'] = i18NControl;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 14 */
/***/function (module, exports) {

	/**
  * 功能控制器
  */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function');
		}
	}

	var i18NControl = function () {
		_createClass(i18NControl, null, [{
			key: 'getInst',
			value: function getInst() {
				i18NControl._inst = i18NControl._inst || new i18NControl();
				return i18NControl._inst;
			}

			/**
    * 构造
    */
		}]);

		function i18NControl() {
			_classCallCheck(this, i18NControl);

			this.i18nData = {};
		}

		/**
   * 析构
   */

		_createClass(i18NControl, [{
			key: 'destroy',
			value: function destroy() {
				i18NControl._inst = null;
			}

			/**
    * 初始化事件
    */
		}, {
			key: 'init',
			value: function init(app) {
				this.app = app;
				//TODO 多语言初始化事件
				var data = this.i18nData;
				//仪器对应的文字
				app.$view.find('.structureName_1 .nameTxt').text(data['MicrometerCaliper_cza']);
				app.$view.find('.structureName_3 .nameTxt').text(data['MicrometerCaliper_cwlgf']);
				app.$view.find('.structureName_4 .nameTxt').text(data['MicrometerCaliper_zdxng']);
				app.$view.find('.structureName_5 .nameTxt').text(data['MicrometerCaliper_gdkdb']);
				app.$view.find('.structureName_6 .nameTxt').text(data['MicrometerCaliper_kdkde']);
				app.$view.find('.structureName_7 .nameTxt').text(data['MicrometerCaliper_xnd']);
				app.$view.find('.structureName_8 .nameTxt').text(data['MicrometerCaliper_wtxnd']);
				app.$view.find('.structureName_2 .nameTxt').text(data['MicrometerCaliper_cjc']);
				app.$view.find('.lookupBtn').text(data['MicrometerCaliper_ckds']);
				app.$view.find('.structureName_9 .nameTxt').text(data['MicrometerCaliper_atten1']);
				app.$view.find('.structureName_11 .nameTxt').text(data['MicrometerCaliper_atten2']);
				app.$view.find('.prompt_1 .nameTxt').text(data['MicrometerCaliper_atten3']);
				app.$view.find('.structureName_10 .nameTxt').text(data['MicrometerCaliper_atten4']);

				//底部菜单文字
				app.$view.find('.menu .btns-primary-txt').eq(0).text(data['MicrometerCaliper_jgmc']);
				app.$view.find('.menu .btns-primary-txt').eq(1).text(data['MicrometerCaliper_nbgz']);
				app.$view.find('.menu .btns-primary-txt').eq(2).text(data['MicrometerCaliper_zysx']);
				app.$view.find('.menu .btns-primary-txt').eq(3).text(data['MicrometerCaliper_dslx']);

				//弹窗对应的文字
				app.$view.find('.shortatge_in .con-detail').text(data['MicrometerCaliper_shortatge_in']);
				app.$view.find('.shortatge_out .con-detail').text(data['MicrometerCaliper_shortatge_out']);
				app.$view.find('.locked-prompt .con-detail').text(data['MicrometerCaliper_locked-prompt']);
				app.$view.find('.prompt-kaka .con-detail').text(data['MicrometerCaliper_prompt-kaka']);
				app.$view.find('.closeto .con-detail').html(data['MicrometerCaliper_closeto']);

				//test

				return this;
			}
		}]);

		return i18NControl;
	}();

	exports['default'] = i18NControl;
	module.exports = exports['default'];

	/**
  * 单例
  */

	/***/
},
/* 15 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _modelAppConfig = __webpack_require__(5);

	var _modelAppConfig2 = _interopRequireDefault(_modelAppConfig);

	exports['default'] = function (path) {
		_modelAppConfig2['default'].getInst().basePath = path;
	};

	module.exports = exports['default'];

	/***/
},
/* 16 */
/***/function (module, exports, __webpack_require__) {

	/**
  * 运行环境下, 销毁Module时执行的方法
  * @remark 该方法为Module生命周期方法, 仅在ICPlayer切换页面时执行
  */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _controlAppControl = __webpack_require__(3);

	var _controlAppControl2 = _interopRequireDefault(_controlAppControl);

	exports['default'] = function () {
		//解除绑定的Module事件
		_controlAppControl2['default'].getInst().destroy();
	};

	module.exports = exports['default'];

	/***/
},
/* 17 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _modelAppConfig = __webpack_require__(5);

	var _modelAppConfig2 = _interopRequireDefault(_modelAppConfig);

	exports['default'] = function () {
		_modelAppConfig2['default'].getInst().inStudentMobile = true;
	};

	module.exports = exports['default'];

	/***/
},
/* 18 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	exports['default'] = function () {
		var question_id = '',
		    question_url = '';
		if (_presenter2['default'].model !== undefined) {
			try {
				question_id = _presenter2['default'].model.question_id;
				question_url = JSON.stringify(_presenter2['default'].model.question_url);
			} catch (e) {
				console.log('json stringify failed');
			}
		}
		return {
			id: question_id,
			dispatchOnly: true,
			type_code: 'MicrometerCaliper',
			type_name: '螺旋测微器',
			url: question_url,
			notExistStatistics: true,
			noNeedQuizProgress: true
		};
	};

	module.exports = exports['default'];

	/***/
},
/* 19 */
/***/function (module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { "default": obj };
	}

	var _modelAppData = __webpack_require__(12);

	var _modelAppData2 = _interopRequireDefault(_modelAppData);

	exports["default"] = function () {
		var data = _modelAppData2["default"].getInst().clone();
		if (data.isRandom) data.itemStatus = data.preItemStatus;
		return {
			width: "100%",
			data: data
		};
	};

	module.exports = exports["default"];

	/***/
},
/* 20 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _controlAppControl = __webpack_require__(3);

	var _controlAppControl2 = _interopRequireDefault(_controlAppControl);

	exports['default'] = {
		resizeScreen: function resizeScreen(data) {
			var ratio = String(data.ratio) || '1/1';
			var arr = ratio.split('/');
			if (arr.length != 2) {
				arr = [1, 1];
			}
			_controlAppControl2['default'].getInst().resize(+arr[0] / +arr[1]);
		}
	};
	module.exports = exports['default'];

	/***/
},
/* 21 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _setLangType = __webpack_require__(22);

	var _setLangType2 = _interopRequireDefault(_setLangType);

	exports['default'] = function (urlParams) {
		(0, _setLangType2['default'])(urlParams);
	};

	module.exports = exports['default'];

	/***/
},
/* 22 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	exports['default'] = function (obj) {
		_presenter2['default'].langType = obj._lang_;
	};

	module.exports = exports['default'];

	/***/
},
/* 23 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { 'default': obj };
	}

	var _presenter = __webpack_require__(1);

	var _presenter2 = _interopRequireDefault(_presenter);

	exports['default'] = function (controller) {
		console.log(controller);
		_presenter2['default'].playerController = controller;
		_presenter2['default'].eventBus = _presenter2['default'].playerController.getEventBus();
	};

	module.exports = exports['default'];

	/***/
}
/******/]);]]></presenter><resources><file src="./resources/media/ka.mp3"/><file src="./resources/wood/images/axis_structurebg.png"/><file src="./resources/wood/images/axis.png"/><file src="./resources/wood/images/coverBig.png"/><file src="./resources/wood/images/coverMini.png"/><file src="./resources/wood/images/fixedhod.png"/><file src="./resources/wood/images/fixedRuler.png"/><file src="./resources/wood/images/fixedRuler2.png"/><file src="./resources/wood/images/highlight.png"/><file src="./resources/wood/images/hook.png"/><file src="./resources/wood/images/kaka_l.png"/><file src="./resources/wood/images/kaka_m.png"/><file src="./resources/wood/images/kaka_r.png"/><file src="./resources/wood/images/kaka.png"/><file src="./resources/wood/images/lock.png"/><file src="./resources/wood/images/mobileruler.png"/><file src="./resources/wood/images/mobileruler1.png"/><file src="./resources/wood/images/readbtn.png"/><file src="./resources/wood/images/readbtnon.png"/><file src="./resources/wood/images/redball.png"/><file src="./resources/wood/images/screw.png"/><file src="./resources/wood/images/slidingzonelarge.png"/><file src="./resources/wood/images/slidingzonemini.png"/></resources></addon>