<?xml version='1.0' encoding='UTF-8'?>
<addon id="templateid"><properties/><dependencies><jsDependency><javaScript name="AlamedaRequire" version="0.3.2"/><javaScript name="tools_common" version="1.3.0"/><javaScript name="knockout" version="3.3.0"/></jsDependency></dependencies><css><![CDATA[.exam_skin_wood .leverageAndBalance_wrapper{width:100%;height:100%;position:relative;background:#bfd3e2}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_main{position:absolute;left:0;right:0;height:36em;top:50%;margin-top:-19.5em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom{position:absolute;bottom:0;left:0;background:#cfdee9}.exam_skin_wood .leverageAndBalance_wrapper .spolr_show_cycle .leverageAndBalance_cycle_table{display:-webkit-box;display:-ms-flexbox;display:flex}.exam_skin_wood .leverageAndBalance_wrapper .spolr_show_cycle .leverageAndBalance_tool_box,.exam_skin_wood .leverageAndBalance_wrapper .spolr_show_cycle .leverageAndBalance_tool_btn_box{top:0}.exam_skin_wood .leverageAndBalance_wrapper .spolr_show_cycle .leverageAndBalance_tool_btn_box .btns-primary{top:9.5em}.exam_skin_wood .leverageAndBalance_wrapper .spolr_show_cycle .leverageAndBalance_tool_btn_box .spolr_line{top:-9.5em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_pop{min-width:33.75em;min-height:20.16667em;z-index:1009}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_pop_mask{position:absolute;left:0;top:0;right:0;bottom:0;background:rgba(0,0,0,.4);z-index:1001}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_pop_main{padding:2.5em .41667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_pop_txt{font-size:1.66667em;line-height:1.66667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_pop_btn{margin:.41667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_pop_btn a{min-width:8.33333em;margin:1.25em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_table{display:none;position:absolute;z-index:22;top:0;left:50%;margin-left:-33.79167em;width:67.58333em;height:28.41667em;background:#b2c8dd;border:.16667em solid #6c8395;border-radius:.5em;overflow:hidden}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_table .spolr_cycle_list{float:left;width:20%;border-right:.08333em solid #6c8395;text-align:center}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_table .spolr_cycle_list:last-child{border-right:none}.exam_skin_wood .leverageAndBalance_wrapper .one_line_table{height:9.6em}.exam_skin_wood .leverageAndBalance_wrapper .one_line_table .leverageAndBalance_cycle_title{line-height:9em}.exam_skin_wood .leverageAndBalance_wrapper .one_line_table .leverageAndBalance_cycle_title .uibox_txt{font-size:2em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title{min-width:9.33333em;max-width:16em;border-right:.08333em solid #6c8395;color:#454f57;text-align:center;line-height:28.41667em;vertical-align:middle}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title .uibox_txt_wrap{width:100%;line-height:1;display:inline-block;overflow:hidden;vertical-align:middle}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title .uibox_txt{font-size:3em;line-height:1;max-width:100%;max-height:90%;display:inline-block;vertical-align:middle;text-align:center}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title .clear_btn_wrap{display:inline-block;width:6.25em;height:4.16667em;bottom:3.75em;cursor:pointer;-webkit-tap-highlight-color:rgba(255,255,255,0)}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title .clear_btn{display:inline-block;width:2.5em;height:2.08333em;background:url(resources/wood/images/clear_btn.png);background-size:auto 100%;margin-top:1.04167em;-webkit-tap-highlight-color:rgba(255,255,255,0)}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_main{-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_main.spolr_show_scrollbar .leverageAndBalance_cycle_bd{overflow-y:scroll;margin-right:.25em;padding-right:.25em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_main.spolr_show_scrollbar .spolr_cycle_list:last-child{border-right:.08333em solid #6c8395}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_main.spolr_show_scrollbar .leverageAndBalance_cycle_hd{right:.5em;overflow-y:scroll;pointer-events:none}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_main.spolr_show_scrollbar .leverageAndBalance_cycle_hd::-webkit-scrollbar{width:1em;height:1em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd{position:absolute;left:0;top:0;right:0;z-index:9}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list{height:4.75em;border-bottom:.08333em solid #6c8395;background:#f1ce97}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list .uibox_txt{overflow:hidden;font-size:2em;color:#1b1b1b;max-width:95%;max-height:100%;display:inline-block;vertical-align:middle;line-height:1.2}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_bd{position:relative;padding-top:4.75em;overflow:hidden;position:absolute;top:0;left:0;right:0;bottom:0}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_li{border-bottom:.08333em solid #6c8395;background:#eee;overflow:hidden}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_li.active{box-shadow:inset 0 0 30px #11b1b7}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_li.active .uibox_txt{color:#11b1b7}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_li:last-child{border:none}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_list{height:4.625em;line-height:4.41667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_list .uibox_txt{font-size:2.5em;color:#1b1b1b}.exam_skin_wood .leverageAndBalance_wrapper .lab_range_of_activities{width:53.08333em;height:26.08333em;position:absolute;top:9.83333em;left:50%;margin-left:-26.54167em;-webkit-transform:rotate(0);transform:rotate(0);-webkit-transform-origin:50%;transform-origin:50%}.exam_skin_wood .leverageAndBalance_wrapper .lab_base{display:inline-block;width:13em;height:25.33333em;position:absolute;left:50%;margin-left:-6.5em;top:.83333em;background:url(resources/wood/images/base.png);background-size:auto 100%;z-index:-1000}.exam_skin_wood .leverageAndBalance_wrapper .lab_lever_wrap{width:45.5em;left:3.79167em;background:url(resources/wood/images/lever.png) no-repeat;background-size:100% auto}.exam_skin_wood .leverageAndBalance_wrapper .lab_lever,.exam_skin_wood .leverageAndBalance_wrapper .lab_lever_wrap{height:3.20833em;position:absolute;top:4.16667em;-webkit-transform:rotate(0);transform:rotate(0);-webkit-transform-origin:50%;transform-origin:50%}.exam_skin_wood .leverageAndBalance_wrapper .lab_lever{width:40em;left:6.54167em;z-index:1111}.exam_skin_wood .leverageAndBalance_wrapper .lab_center_point{display:inline-block;width:0;height:100%;border:1px solid #000}.exam_skin_wood .leverageAndBalance_wrapper .lab_left_slider{height:4.45833em;width:2.66667em;position:absolute;top:-.75em;left:17.33333em;background:url(resources/wood/images/slider.png) no-repeat;background-size:auto 100%;cursor:pointer;z-index:1100;-webkit-tap-highlight-color:rgba(255,255,255,0)}.exam_skin_wood .leverageAndBalance_wrapper .lab_left_slider.active,.exam_skin_wood .leverageAndBalance_wrapper .lab_left_slider:hover{background:url(resources/wood/images/slider_active.png) no-repeat;background-size:auto 100%;-webkit-tap-highlight-color:rgba(255,255,255,0)}.exam_skin_wood .leverageAndBalance_wrapper .slider_pre_load{height:4.45833em;width:2.66667em;display:none;background:url(resources/wood/images/slider_active.png) no-repeat}.exam_skin_wood .leverageAndBalance_wrapper .lab_left_slider_point{display:inline-block;height:1px;width:1px;border:1px solid #00f;position:absolute}.exam_skin_wood .leverageAndBalance_wrapper .lab_right_slider{height:4.45833em;width:2.66667em;position:absolute;top:-.75em;left:20em;background:url(resources/wood/images/slider.png) no-repeat;background-size:auto 100%;cursor:pointer;z-index:1100;-webkit-tap-highlight-color:rgba(255,255,255,0)}.exam_skin_wood .leverageAndBalance_wrapper .lab_right_slider.active,.exam_skin_wood .leverageAndBalance_wrapper .lab_right_slider:hover{background:url(resources/wood/images/slider_active.png) no-repeat;background-size:auto 100%;-webkit-tap-highlight-color:rgba(255,255,255,0)}.exam_skin_wood .leverageAndBalance_wrapper .lab_right_slider_point{display:inline-block;height:1px;width:1px;border:1px solid #00f;position:absolute}.exam_skin_wood .leverageAndBalance_wrapper .lab_left_weight_wrap{min-height:1.875em;width:2em;position:absolute;top:7.5em;left:24.16667em;z-index:1}.exam_skin_wood .leverageAndBalance_wrapper .lab_left_weight_shadow,.exam_skin_wood .leverageAndBalance_wrapper .lab_right_weight_shadow{position:absolute;top:.33333em;left:0;right:0;bottom:0;box-shadow:0 0 .83333em #2ee6ed;border-radius:.83333em}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item{height:1.875em;width:2em;background:url(resources/wood/images/weight.png) no-repeat;background-size:auto 100%;margin-top:-.79167em;position:relative}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item1{z-index:1000;margin-top:0}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item2{z-index:999}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item3{z-index:998}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item4{z-index:997}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item5{z-index:996}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item6{z-index:995}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item7{z-index:994}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item8{z-index:993}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item9{z-index:992}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item10{z-index:991}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item11{z-index:990}.exam_skin_wood .leverageAndBalance_wrapper .lab_weight_item.item12{z-index:989}.exam_skin_wood .leverageAndBalance_wrapper .lab_right_weight_wrap{min-height:1.875em;width:2em;position:absolute;top:7.5em;left:26.75em;z-index:1}.exam_skin_wood .spolr_light_scrollbar::-webkit-scrollbar{width:1em;height:1em}.exam_skin_wood .spolr_light_scrollbar::-webkit-scrollbar-thumb{border:1em solid transparent;-webkit-border-image:url(resources/wood/images/scrollbar/vertical-thumb.png) 11 11}.exam_skin_wood .spolr_light_scrollbar::-webkit-scrollbar-button:vertical:decrement{background-image:url(resources/wood/images/scrollbar/vertical-decrement-arrow.png);background-repeat:no-repeat;background-position:50%;background-size:.66667em .66667em}.exam_skin_wood .spolr_light_scrollbar::-webkit-scrollbar-button:vertical:increment{background-image:url(resources/wood/images/scrollbar/vertical-increment-arrow.png);background-repeat:no-repeat;background-position:50%;background-size:.66667em .66667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom{width:100%;padding:0 4.16667em;height:5.70833em!important;vertical-align:middle}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .leverageAndBalance_bottom_middle{display:inline-block;height:100%;width:100%;vertical-align:middle}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .leverageAndBalance_bottom_middle:after{display:inline-block;width:0;height:100%;content:"center";vertical-align:middle;overflow:hidden}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom.switch_drop_module .spolr_controlbtn_com{display:none}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom.switch_drop_module .spolar_com_btns .spolr_play_count,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom.switch_drop_module .spolar_dropbox_com{display:inline-block}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom:after{display:inline-block;width:0;height:100%;content:"center";vertical-align:middle;overflow:hidden}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns{float:right;position:relative;display:inline-block;vertical-align:middle;padding:1.29167em 1.25em 1.25em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .spolr_play_count{display:none;white-space:nowrap;cursor:pointer}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .spolr_reset_btn{cursor:pointer}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns:before{content:"";display:inline-block;width:0;height:100%;border-left:1px solid #e6f3fc;border-right:1px solid #b3c1ca;position:absolute;left:0;top:0}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns{min-width:8.66667em;display:inline-block;overflow:hidden;padding:0 .5em;height:3.16667em;line-height:3.16667em;text-align:center;vertical-align:middle;border-radius:.41667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns .btns-primary-txt{font-size:1.5em;color:#384650;font-family:Microsoft yahei}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary{border:1px solid #397274;background:-webkit-linear-gradient(bottom,#e9e9e9,#fff);background:linear-gradient(0deg,#e9e9e9 0,#fff)}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary.ui_btn_active,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary:active{background:-webkit-linear-gradient(bottom,#76b8ba,#89c5c7);background:linear-gradient(0deg,#76b8ba 0,#89c5c7)}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary.ui_btn_active .btns-primary-txt,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary:active .btns-primary-txt{color:#fff}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary.click_disabled{border-color:#93989a;background:-webkit-linear-gradient(top,#c8d1d7,#c1c8cc);background:linear-gradient(180deg,#c8d1d7 0,#c1c8cc);cursor:default}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .com_btns.btns-primary.click_disabled .btns-primary-txt{color:#969fa4}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com{position:relative;display:none;white-space:nowrap;vertical-align:middle;height:2.83333em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_tip{position:relative;display:inline-block;vertical-align:middle;height:1.5em;padding:.08333em .625em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_tip .tip_text{font-size:1.5em;font-family:Microsoft yahei;color:#384650}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com:after{display:inline-block;width:0;height:100%;content:"center";vertical-align:middle;overflow:hidden}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num{position:relative;display:inline-block;width:6.33333em;height:100%;overflow:hidden;text-align:center;vertical-align:middle;border:1px solid #8b8b8b;border-radius:.58333em;background:-webkit-linear-gradient(bottom,#fff,#e9e9e9);background:linear-gradient(0deg,#fff 0,#e9e9e9);cursor:pointer}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num .num_input{position:absolute;top:.625em;left:1.04167em;width:2em;height:1.5em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num .num_input .num_input_text{font-size:1.5em;font-family:Microsoft yahei;color:#4d4d4d}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num.ui_btn_active .spolar_drop_arrow,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num:active .spolar_drop_arrow{background-position:0 100%}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num.click_disabled{background:#eaebed;cursor:default}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num.click_disabled .num_input_text{color:#9e9fa3}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_num.click_disabled .spolar_drop_arrow{background:url(resources/wood/images/drop_arrow_grey.png) no-repeat;background-size:auto 100%}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_arrow{width:2.25em;height:2.25em;overflow:hidden;background:url(resources/wood/images/drop_arrow.png) no-repeat;background-size:100% 4.91667em;background-position:0 0;position:absolute;right:.375em;top:.25em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_arrow.ui_btn_active,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_arrow:active{background-position:0 100%}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_arrow.arrow_down{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_amplitude{margin-left:-6.25em;margin-right:1.66667em}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_amplitude .spolar_drop_numselect{left:-10%}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_frequency{left:5%}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect{white-space:normal;z-index:100;position:absolute;bottom:3.5em;right:-14%;pointer-events:none}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect .spolar_numselect_wrap{border:1px solid #686868;padding:.58333em .3em;background-color:#ebebeb;display:inline-block;pointer-events:auto;text-align:left}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect.hide_dom{display:none}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect .num_btn{display:inline-block;width:3.66667em;height:2.25em;line-height:2.25em;color:#4d4d4d;background:#fff;text-align:center;border-radius:.16667em;border:1px solid #9c9c9c;margin:.20833em;cursor:pointer}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect .num_btn.ui_btn_active,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect .num_btn:active{background:#31b0ee;color:#fff;border-color:#007ab6}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_numselect .num_btn span{font-size:1.5em;font-family:Microsoft yahei,sans-serif;vertical-align:top}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title .uibox_txt{line-height:1.42;font-size:1.75em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list{padding:.6em .3em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list .uibox_txt{font-size:1.3em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .one_line_table .leverageAndBalance_cycle_title .uibox_txt{padding:1em 0}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom{text-align:left}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com{white-space:normal;text-align:center}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_tip{overflow:hidden;height:3.33333em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_tip .tip_text{font-size:1.5em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_amplitude{margin-left:.41667em;margin-right:.83333em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_amplitude .spolar_drop_tip{width:12.08333em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_frequency{left:0}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_frequency .spolar_drop_tip{width:12.5em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns{padding-right:.41667em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .com_btns{line-height:1.41667em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .com_btns:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .spolr_play_count{max-width:16.875em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .spolr_reset_btn{max-width:8.75em}.typefaces_long .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .btns-primary-txt{display:inline-block;overflow:hidden;width:96%;max-height:100%;vertical-align:middle;white-space:normal}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title .uibox_txt{line-height:1.42;font-size:1.75em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list{padding:.6em .3em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list .uibox_txt{font-size:1.3em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .one_line_table .leverageAndBalance_cycle_title .uibox_txt{padding:1em 0}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom{text-align:left}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com{white-space:normal;text-align:center}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_tip{overflow:hidden;height:3.33333em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com .spolar_drop_tip .tip_text{font-size:1.5em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_amplitude{margin-left:.41667em;margin-right:.83333em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_amplitude .spolar_drop_tip{width:12.08333em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_frequency{left:0}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_dropbox_com.spolar_drop_frequency .spolar_drop_tip{width:12.5em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns{padding-right:.41667em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .com_btns{line-height:1.41667em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .com_btns:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .spolr_play_count{max-width:16.875em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .spolr_reset_btn{max-width:8.75em}.typefaces_ru_RU .exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_bottom .spolar_com_btns .btns-primary-txt{display:inline-block;overflow:hidden;width:96%;max-height:100%;vertical-align:middle;white-space:normal}@media screen and (max-width:1000px){.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_hd .spolr_cycle_list,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_ul .spolr_cycle_li{border-bottom-width:1px}.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_main.spolr_show_scrollbar .spolr_cycle_list:last-child,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_table .spolr_cycle_list,.exam_skin_wood .leverageAndBalance_wrapper .leverageAndBalance_cycle_title{border-right-width:1px}}]]></css><view><![CDATA[<div class="exam_skin_wood"><div class="leverageAndBalance_wrapper"><div class="leverageAndBalance_main js_leverageAndBalance_main"><div class="spolr_show_cycle"><div class="leverageAndBalance_cycle_table one_line_table"><div class="leverageAndBalance_cycle_title"><span class="uibox_txt_wrap"><span class="uibox_txt js_experimental_data_i18n">实<br>验<br>数<br>据</span></span></div><div class="leverageAndBalance_cycle_main"><ul class="leverageAndBalance_cycle_hd"><li class="spolr_cycle_list"><span class="uibox_txt js_number_of_times_i18n">次数</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_left_scale_value_i18n">左刻度值</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_left_hook_code_number_i18n">左钩码数</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_right_scale_value_i18n">右刻度值</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_right_hook_code_number_i18n">右钩码数</span></li></ul><div class="leverageAndBalance_cycle_bd spolr_light_scrollbar js_oneline_table"><ul class="leverageAndBalance_cycle_ul"><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">1</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li></ul></div></div></div><div class="leverageAndBalance_cycle_table ten_lines hide_dom js_table_wrap"><div class="leverageAndBalance_cycle_title"><span class="uibox_txt_wrap"><span class="uibox_txt js_experimental_data_i18n">实<br>验<br>数<br>据</span><br><span class="clear_btn_wrap js_clear_table_data_btn"><span class="clear_btn js_clear_table_data_btn"></span></span></span></div><div class="leverageAndBalance_cycle_main spolr_show_scrollbar"><ul class="leverageAndBalance_cycle_hd"><li class="spolr_cycle_list"><span class="uibox_txt js_number_of_times_i18n">次数</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_left_scale_value_i18n">左刻度值</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_left_hook_code_number_i18n">左钩码数</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_right_scale_value_i18n">右刻度值</span></li><li class="spolr_cycle_list"><span class="uibox_txt js_right_hook_code_number_i18n">右钩码数</span></li></ul><div class="leverageAndBalance_cycle_bd spolr_light_scrollbar js_table"><ul class="leverageAndBalance_cycle_ul"><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">1</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">2</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">3</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">4</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">5</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">6</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">7</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">8</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">9</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li><li class="spolr_cycle_li"><div class="spolr_cycle_list"><span class="uibox_txt">10</span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div><div class="spolr_cycle_list"><span class="uibox_txt"></span></div></li></ul></div></div></div></div><div class="lab_range_of_activities js_range_of_activities"><div class="lab_lever_wrap js_lever_wrap"></div><div class="lab_lever js_lever"><div class="lab_left_slider js_left_slider"></div><div class="slider_pre_load"></div><div class="lab_right_slider js_right_slider"></div></div><div class="lab_left_weight_wrap js_left_weight_wrap"><div class="lab_left_weight_shadow js_weight_shadow hide_dom"></div></div><div class="lab_right_weight_wrap js_right_weight_wrap"><div class="lab_right_weight_shadow js_weight_shadow hide_dom"></div></div><div class="lab_base"></div></div></div><div class="leverageAndBalance_bottom switch_drop_module"><div class="leverageAndBalance_bottom_middle"><div class="spolar_dropbox_com spolar_drop_amplitude"><span class="spolar_drop_tip"><span class="tip_text js_set_left_hook_code_number_i18n">左钩码个数</span> </span><a href="javascript:void(0)" class="spolar_drop_num js_toggle_leftkeyboard_btn"><span class="num_input"><span class="num_input_text js_left_num_input_text">0</span> </span><span class="spolar_drop_arrow js_left_arrow_btn"></span></a><div class="spolar_drop_numselect clearfix hide_dom js_left_number_keyboard_wrap"><div class="spolar_numselect_wrap"><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">0</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">1</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">2</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">3</span></span><br><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">4</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">5</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">6</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">7</span></span><br><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">8</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">9</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">10</span></span><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">11</span></span><br><span class="num_btn js_left_keyboard_num"><span class="js_left_keyboard_num_value">12</span></span></div></div></div><div class="spolar_dropbox_com spolar_drop_frequency"><span class="spolar_drop_tip"><span class="tip_text js_set_right_hook_code_number_i18n">右钩码个数</span> </span><a href="javascript:void(0)" class="spolar_drop_num js_toggle_rightkeyboard_btn"><span class="num_input"><span class="num_input_text js_right_num_input_text">0</span> </span><span href="javascript:;" class="spolar_drop_arrow js_right_arrow_btn"></span></a><div class="spolar_drop_numselect clearfix hide_dom js_right_number_keyboard_wrap"><div class="spolar_numselect_wrap"><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">0</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">1</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">2</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">3</span></span><br><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">4</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">5</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">6</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">7</span></span><br><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">8</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">9</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">10</span></span><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">11</span></span><br><span class="num_btn js_right_keyboard_num"><span class="js_right_keyboard_num_value">12</span></span></div></div></div><div class="spolar_com_btns"><a class="com_btns btns-primary spolr_play_count js_toggle_table_btn" href="javascript:;"><span class="btns-primary-txt js_show_all_data_i18n">查看所有数据</span> </a><a class="com_btns btns-primary spolr_reset_btn js_lab_reset_btn" href="javascript:;"><span class="btns-primary-txt js_reset_btn_i18n">重置</span></a></div></div></div><div class="leverageAndBalance_pop_mask hide_dom js_pop_mask"><div class="com_dialog_wrapper leverageAndBalance_pop hide_dom js_pop"><div class="com_dialog_content leverageAndBalance_pop_main"><div class="txt leverageAndBalance_pop_txt js_clear_data_i18n">是否清空已有实验数据</div><div class="txt leverageAndBalance_pop_txt clear_data_and_record js_clear_data_and_record_i18n">并重新开始记录</div></div><div class="spolar_com_btns leverageAndBalance_pop_btn"><a class="com_btns btns-primary js_determine_btn" href="javascript:;"><span class="btns-primary-txt js_determine_btn_i18n">确定</span> </a><a class="com_btns btns-primary js_cancel_btn" href="javascript:;"><span class="btns-primary-txt js_cancel_btn_i18n">取消</span></a></div></div></div></div></div>]]></view><presenter><![CDATA["use strict";

(function () {
    var Presenter = BasicPresenter.extend({
        metaInfo: {
            name: 'LeverageBalance',
            type: "",
            subtype: ""
        },
        /**
         * Presenter的初始化方法
         * @private
         */
        $init: function $init() {
            this._super();

            this.$view = null;
            this.model = null;
            this.LeverageAndBalance = null;
            this.i18n = null;
        },
        /**
         * Presenter对外暴露的方法
         */
        _service_: {
            constructor: function constructor(parent) {
                this.parent = parent;
            },

            //保存推送到学生端的数据
            getExtendData: function getExtendData() {

                var options = {
                    width: '100%',
                    //实验数据
                    statisticaltable: this.parent.LeverageAndBalance.statisticaltable,
                    //左边刻度数
                    leftScale: this.parent.LeverageAndBalance.leftScale,
                    //左边砝码数
                    leftWeightNum: this.parent.LeverageAndBalance.leftWeightNum,
                    //右边刻度数
                    rightScale: this.parent.LeverageAndBalance.rightScale,
                    //右边砝码数
                    rightWeightNum: this.parent.LeverageAndBalance.rightWeightNum,
                    //杠杆当前旋转的角度
                    currentDegree: this.parent.LeverageAndBalance.currentDegree,
                    //杠杆宽度
                    leverWidth: this.parent.LeverageAndBalance.lever.outerWidth(),
                    //左滑块的坐标
                    leftSliderCoordinate: {
                        X: this.parent.LeverageAndBalance.leftSliderCoordinate.X,
                        Y: this.parent.LeverageAndBalance.leftSliderCoordinate.Y
                    },
                    //右滑块的坐标
                    rightSliderCoordinate: {
                        X: this.parent.LeverageAndBalance.rightSliderCoordinate.X,
                        Y: this.parent.LeverageAndBalance.rightSliderCoordinate.Y
                    },
                    //数字键盘的状态
                    leftKeyboardIsVisible: this.parent.LeverageAndBalance.leftKeyboardIsVisible,
                    rightKeyboardIsVisible: this.parent.LeverageAndBalance.rightKeyboardIsVisible,
                    //切换表格时记录数字键盘之前的默认状态
                    leftNumKeyboardShow: this.parent.LeverageAndBalance.leftNumKeyboardShow,
                    rightNumKeyboardShow: this.parent.LeverageAndBalance.rightNumKeyboardShow,
                    //表格的状态
                    tableIsVisible: this.parent.LeverageAndBalance.tableIsVisible
                    //弹框的状态
                    //popLeverageIsVisible: this.parent.LeverageAndBalance.popLeverageIsVisible
                };

                return options;
            },
            //全屏缩放
            resizeScreen: function resizeScreen(data) {
                //data {ratio:4/3||3/4}
                console.log('data resize', data);
            },
            setLocationProperties: function setLocationProperties(properties) {
                this.i18n = properties;
            },
            //实现这个端口学生端可用
            getQuestionInfo: function getQuestionInfo() {
                return {
                    id: this.parent.model.question_id || '',
                    type_code: 'LeverageBalance',
                    type_name: this.i18n.tool_name || '杠杆平衡',
                    url: JSON.stringify(this.parent.model.question_url),
                    noExistStatistics: true,
                    noNeedQuizProgress: true
                };
            }
        },

        getService: function getService() {
            var self = this;
            self._service_.constructor(self);
            return self._service_;
        },
        /****以下开始为icPlayer的生命周期方法*****/
        run: function run(view, model) {
            var self = this;
            self.$view = $(view);
            self.model = model;
            self.i18n = self._service_.i18n;
            setTimeout(function () {
                require(['LeverageAndBalance'], function (LeverageAndBalance) {
                    self.LeverageAndBalance = new LeverageAndBalance(self.$view, self.i18n, self.model);
                    self.LeverageAndBalance.init();
                    self.LeverageAndBalance.render();
                });
            }, 1);

            self._i18nRender();
            self.__interface = {
                resizeScreen: function resizeScreen(data) {
                    var self = this;
                    //data {ratio:4/3||3/4}
                    console.log('data resize', data);
                    self.LeverageAndBalance.resize(data);
                    //console.log('self.LeverageAndBalance',self.LeverageAndBalance.init);
                }
            };
        },

        pageShow: function pageShow() {},
        pageLeave: function pageLeave() {},
        destroy: function destroy() {
            if (!!this.LeverageAndBalance) {
                this.LeverageAndBalance.destroy();
            }
        },
        /**如果不需要处理icplayer的状态恢复事件, 请将以下两个方法删除掉**/
        getState: function getState() {},
        setState: function setState(state, options) {},
        /****以下开始为Presenter的私有方法*****/
        _bindEvent: function _bindEvent() {},
        _unbindEvent: function _unbindEvent() {},
        _i18nRender: function _i18nRender() {
            var self = this;
            //国际化，读取json文件里的key
            self.$view.find('.js_experimental_data_i18n').html(self.i18n.experimental_data);
            self.$view.find('.js_number_of_times_i18n').text(self.i18n.number_of_times);
            self.$view.find('.js_left_scale_value_i18n').text(self.i18n.left_scale_value);
            self.$view.find('.js_left_hook_code_number_i18n').text(self.i18n.left_hook_code_number);
            self.$view.find('.js_right_scale_value_i18n').text(self.i18n.right_scale_value);
            self.$view.find('.js_right_hook_code_number_i18n').text(self.i18n.right_hook_code_number);
            self.$view.find('.js_set_left_hook_code_number_i18n').text(self.i18n.set_left_hook_code_number);
            self.$view.find('.js_set_right_hook_code_number_i18n').text(self.i18n.set_right_hook_code_number);
            self.$view.find('.js_show_all_data_i18n').text(self.i18n.show_all_data);
            self.$view.find('.js_reset_btn_i18n').text(self.i18n.reset_btn);
            self.$view.find('.js_clear_data_i18n').text(self.i18n.clear_data);
            self.$view.find('.js_clear_data_and_record_i18n').text(self.i18n.clear_data_and_record);
            self.$view.find('.js_determine_btn_i18n').text(self.i18n.determine_btn);
            self.$view.find('.js_cancel_btn_i18n').text(self.i18n.cancel_btn);
        }
    });

    window.AddonLeverageBalance_create = function () {
        return new Presenter('LeverageBalance');
    };
})();
"use strict";

define('LeverageAndBalance', function () {

    function LeverageAndBalance(view, i18n, model) {
        this.$view = view;
        this.$i18n = i18n;
        this.$model = model;
        //统计表数组
        this.statisticaltable = [];
        //左边刻度数
        this.leftScale = 0.4;
        //左边砝码数
        this.leftWeightNum = 0;
        //右边刻度数
        this.rightScale = 0.4;
        //右边砝码数
        this.rightWeightNum = 0;
        //是否允许左滑块移动
        this.leftIsMoving = false;
        //是否允许右滑块移动
        this.rightIsMoving = false;
        //允许倾斜的最大角度
        this.maxDegree = 10;
        //杠杆当前旋转的角度
        this.currentDegree = 0;
        //滑块重量
        this.sliderWeight = 1;
        //每个滑块的重量
        this.everyWeight = 1;
        //每个刻度的值
        this.everyScale = 0;
        //杠杆中心点的坐标
        this.leverCenterCoordinate = { X: 0, Y: 0 };
        //左砝码的坐标
        this.leftWeightCoordinate = { X: 0, Y: 0 };
        //右砝码的坐标
        this.rightWeightCoordinate = { X: 0, Y: 0 };
        //左滑块的坐标
        this.leftSliderCoordinate = { X: 0, Y: 0 };
        //右滑块的坐标
        this.rightSliderCoordinate = { X: 0, Y: 0 };
        //真实的左刻度
        this.realLeftScale = 0;
        //真实的右刻度
        this.realRightScale = 0;
        //表格切换
        this.tableIsVisible = false;
        //数字键盘
        this.leftKeyboardIsVisible = false;
        this.rightKeyboardIsVisible = false;
        //左滑块定位点
        this.leftSliderPointCoordinate = { X: 0, Y: 0 };
        //右滑块定位点
        this.rightSliderPointCoordinate = { X: 0, Y: 0 };
        //超过十一条后的最后一条数据
        this.elevenData = {};
        //切换表格时记录数字键盘之前的默认状态
        this.leftNumKeyboardShow = false;
        this.rightNumKeyboardShow = false;
        //鼠标的X值
        this.mouseX;
        //外围点击区域状态
        this.active = false;
        //教师端和学生端的缩放比例
        this.scalingrRatio = 0;
        //全屏
        this.ratio = 3 / 4;
        this.lastRatio = 3 / 4;
        //弹框状态
        this.popLeverageIsVisible = false;
        //左滑块的宽度
        this.leftSliderWidth = 0;
        //右滑块的宽度
        this.rightSliderWidth = 0;
        //左砝码的宽度
        this.leftWeightWrapWidth = 0;
        //右砝码的宽度
        this.rightWeightWrapWidth = 0;
        //高光是否可操作
        this.operableHighLight = true;
        //滑块高度
        this.sliderHeight = 0;
    }

    LeverageAndBalance.prototype = {

        init: function init() {
            var self = this;
            self.i18n = this.$i18n;
            self.model = this.$model;
            self.view = self.$view;
            self.table = self.$view.find(".js_table");
            self.tableWrap = self.$view.find(".js_table_wrap");
            self.oneLineTable = self.$view.find(".js_oneline_table");
            self.leftSlider = self.$view.find(".js_left_slider");
            self.rightSlider = self.$view.find(".js_right_slider");
            self.lever = self.$view.find(".js_lever");
            self.leverWrap = self.$view.find(".js_lever_wrap");
            self.rangeOfActivities = self.$view.find(".js_range_of_activities");
            self.leftWeightWrap = self.$view.find(".js_left_weight_wrap");
            self.weightItem = self.$view.find(".js_weight_item");
            self.rightWeightWrap = self.$view.find(".js_right_weight_wrap");
            self.leftNumberKeyboardWrap = self.$view.find(".js_left_number_keyboard_wrap");
            self.rightNumberKeyboardWrap = self.$view.find(".js_right_number_keyboard_wrap");
            self.LeftKeyboardNum = self.$view.find(".js_left_keyboard_num");
            self.clearTableDataBtn = self.$view.find(".js_clear_table_data_btn");
            self.toggleTableBtn = self.$view.find(".js_toggle_table_btn");
            self.toggleLeftKeyboardBtn = self.$view.find(".js_toggle_leftkeyboard_btn");
            self.toggleRightKeyboardBtn = self.$view.find(".js_toggle_rightkeyboard_btn");
            self.leftSliderPoint = self.$view.find(".js_left_slider_point");
            self.rightSliderPoint = self.$view.find(".js_right_slider_point");
            self.leftNumInputText = self.$view.find(".js_left_num_input_text");
            self.rightNumInputText = self.$view.find(".js_right_num_input_text");
            self.labResetBtn = self.$view.find(".js_lab_reset_btn");
            self.popLeverageMask = self.$view.find(".js_pop_mask");
            self.popLeverage = self.$view.find(".js_pop");
            self.leftArrowBtn = self.$view.find(".js_left_arrow_btn");
            self.rightArrowBtn = self.$view.find(".js_right_arrow_btn");
            self.determineBtn = self.$view.find(".js_determine_btn");
            self.cancelBtn = self.$view.find(".js_cancel_btn");
            self.weightShadow = self.$view.find(".js_weight_shadow");
            self.recordTxt = self.$view.find(".js_clear_data_and_record_i18n");
        },
        render: function render() {
            var self = this;
            //计算杠杆中心点
            self.leverCenterCoordinate.X = self.lever.position().left + self.lever.outerWidth() / 2;
            self.leverCenterCoordinate.Y = self.lever.position().top + self.lever.outerHeight() / 2;
            self.initBasic();
            //获取大表格高度
            self.tableWrap.removeClass('hide_dom');
            self.tableWrapHeight = self.tableWrap.outerHeight();
            self.tableWrap.addClass('hide_dom');
            //初始化页面
            self._resetPage();
            self._resetBtnStatus();
            //self._drawTickmarks();
            self._sliderPointPosition();
            //绑定事件
            self._bindEvent();
            //初始化学生端
            self._initializeStudentEnd();
        },
        initBasic: function initBasic() {
            var self = this;
            if (this.ratio !== this.lastRatio) {
                self.leverCenterCoordinate.X *= this.ratio;
                self.leverCenterCoordinate.Y *= this.ratio;
            }
            this.lastRatio = this.ratio;
            //左滑块的宽度
            self.leftSliderWidth = self.leftSlider.outerWidth();
            //右滑块的宽度
            self.rightSliderWidth = self.rightSlider.outerWidth();
            //左砝码宽度
            self.leftWeightWrapWidth = self.leftWeightWrap.outerWidth();
            //右砝码宽度
            self.rightWeightWrapWidth = self.rightWeightWrap.outerWidth();
            //滑块高度
            self.sliderHeight = self.leftSlider.outerHeight();
        },
        resize: function resize(data) {
            this.ratio = eval(data.ratio);
            console.log('全屏缩放');
            var self = this;
            self.initBasic();
            //初始化刻度
            self.everyScale = self.lever.outerWidth() / 24;
            //杠杆倾斜
            self._leverRotate();
            //左滑块坐标
            self.leftSliderCoordinate = {
                X: self.leftSliderCoordinate.X * this.ratio,
                Y: self.leftSliderCoordinate.Y * this.ratio
            };
            //右滑块坐标
            self.rightSliderCoordinate = {
                X: self.rightSliderCoordinate.X * this.ratio,
                Y: self.rightSliderCoordinate.Y * this.ratio
            };
            //滑块初始化
            self._adsorption();
            //0刻度特殊处理
            self._oneScaleSpecial();
            //设置滑块定位点的位置
            self._sliderPointPosition();
            //砝码位置初始化
            self._setWeightPos();
        },
        destroy: function destroy() {
            var self = this;
            self._unBindEvent();
        },
        /********************************************************/

        //事件绑定
        _bindEvent: function _bindEvent() {
            var self = this;
            //滑块
            self.view.on("mousedown touchstart", ".js_left_slider , .js_right_slider", this._eventHandler.bind(this));
            self.view.on("mousemove touchmove", ".js_left_slider ,.js_right_slider ,.js_lever,.js_range_of_activities ", this._eventHandler.bind(this));
            self.view.on("mouseup touchend", ".js_left_slider ,.js_right_slider  , .js_lever,.js_range_of_activities, .js_leverageAndBalance_main", this._eventHandler.bind(this));

            //在杠杆或者active区域放开鼠标，不允许滑块滑动
            self.rangeOfActivities.on("mouseup touchend", this._setSliderMoveFalse.bind(this));
            self.lever.on("mouseup touchend", this._setSliderMoveFalse.bind(this));

            //弹出询问弹框
            self.clearTableDataBtn.on("touchstart click", this._clearTableDataPop.bind(this));
            //清除数据按钮键
            self.determineBtn.on(" click", this._clearTableData.bind(this));
            //取消按钮
            self.cancelBtn.on(" click", this._hidePop.bind(this));
            //显示和隐藏
            self.toggleTableBtn.on(" click", this._showAndHideData.bind(this));
            self.toggleLeftKeyboardBtn.on(" click", this._leftToggleBtn.bind(this));
            self.toggleRightKeyboardBtn.on(" click", this._rightToggleBtn.bind(this));
            //重置按钮
            self.labResetBtn.on(" click", this._resetPage.bind(this));
            //判断重置按钮的状态
            self.view.on(" click", ".js_toggle_leftkeyboard_btn", this._resetBtnStatus.bind(this));
            self.view.on(" click", ".js_toggle_rightkeyboard_btn", this._resetBtnStatus.bind(this));
            //数字键盘绑定click事件
            self.view.on("click", ".js_left_keyboard_num ,.js_right_keyboard_num", this._seriesOfEvents.bind(this));
            //滑块加高亮
            self.view.on("mouseover mouseleave", ".js_left_slider , .js_right_slider", this._addAndRemoveHighlight.bind(this));
        },
        //解绑事件
        _unBindEvent: function _unBindEvent() {
            var self = this;
            self.view.off("mousedown", ".js_left_slider , .js_right_slider", this._eventHandler.bind(this));
            self.view.off("mousemove", this._eventHandler.bind(this));
            self.view.off("mouseup", this._eventHandler.bind(this));
            self.view.off("touchstart", ".js_left_slider , .js_right_slider", this._eventHandler.bind(this));
            self.view.off("touchmove", this._eventHandler.bind(this));
            self.view.off("touchend", this._eventHandler.bind(this));
        },

        _eventHandler: function _eventHandler(event) {
            var self = this;
            var eventType = this.eventMapping(event);
            switch (eventType) {
                case "start":
                    //滑块状态判定
                    self._setSliderMoveStatus(event);
                    self.active = true;
                    //event.preventDefault();
                    if ($(event.currentTarget).hasClass('')) break;
                case "move":
                    event.preventDefault();
                    if (!this.leftIsMoving && !this.rightIsMoving) {
                        return;
                    }
                    //拖动滑块
                    self._sliderMove(event);
                    //改变砝码位置
                    self._setWeightPos();
                    //滑块移动中也要有高亮
                    self._moveHighLight();
                    //滑块吸附
                    break;
                case "end":
                    event.preventDefault();
                    //系列事件
                    self._seriesOfEvents(event);
                    break;
            }
        },

        //对事件类型做处理
        eventMapping: function eventMapping(event) {
            var eventType = event.type;
            var self = this;
            var type;
            //判断不同的事件获取鼠标的x值
            if (eventType == "mousemove" || eventType == "mousedown") {
                self.mouseX = event.pageX;
            } else if (eventType == "touchmove" || eventType == "touchstart") {
                self.mouseX = event.originalEvent.touches[0].clientX;
            }
            //滑块的点击态
            switch (eventType) {
                case "touchstart":
                case "mousedown":
                    type = "start";
                    break;
                case "mousemove":
                case "touchmove":
                    type = "move";
                    break;
                case "mouseup":
                case "touchend":
                    type = "end";
                    break;
            }
            return type;
        },

        //初始化学生端
        _initializeStudentEnd: function _initializeStudentEnd() {
            var self = this;
            if (self.model.__ExtendModel && !$.isEmptyObject(self.model.__ExtendModel)) {
                //初始化学生端的值
                //缩放比例
                self.scalingrRatio = self.lever.outerWidth() / self.model.__ExtendModel.leverWidth;
                //实验数据
                self.statisticaltable = self.model.__ExtendModel.statisticaltable;
                //左边刻度数
                self.leftScale = self.model.__ExtendModel.leftScale;
                //左边砝码数
                self.leftWeightNum = self.model.__ExtendModel.leftWeightNum;
                //右边刻度数
                self.rightScale = self.model.__ExtendModel.rightScale;
                //右边砝码数
                self.rightWeightNum = self.model.__ExtendModel.rightWeightNum;
                //左滑块坐标
                self.leftSliderCoordinate = {
                    X: self.model.__ExtendModel.leftSliderCoordinate.X * self.scalingrRatio,
                    Y: self.model.__ExtendModel.leftSliderCoordinate.Y * self.scalingrRatio
                };
                //右滑块坐标
                self.rightSliderCoordinate = {
                    X: self.model.__ExtendModel.rightSliderCoordinate.X * self.scalingrRatio,
                    Y: self.model.__ExtendModel.rightSliderCoordinate.Y * self.scalingrRatio
                };
                //数字键盘的状态
                self.leftKeyboardIsVisible = self.model.__ExtendModel.leftKeyboardIsVisible;
                self.rightKeyboardIsVisible = self.model.__ExtendModel.rightKeyboardIsVisible;
                //切换表格时记录数字键盘之前的默认状态
                self.leftNumKeyboardShow = self.model.__ExtendModel.leftNumKeyboardShow;
                self.rightNumKeyboardShow = self.model.__ExtendModel.rightNumKeyboardShow;
                //表格的状态
                self.tableIsVisible = self.model.__ExtendModel.tableIsVisible;
                //弹框的状态
                //self.popLeverageIsVisible = self.model.__ExtendModel.popLeverageIsVisible;
                //初始化表格数据
                self._writeInTable();
                //初始化一行表格
                self._onelineTableData();
                //初始化学生端数字键盘部分
                self._setWeightNumKeyBoardInStudent();
                //杠杆倾斜
                self._leverRotate();
                //滑块初始化
                self._adsorption();
                //渲染出砝码
                self._setWeightNumInStudent();
                //设置滑块定位点的位置
                self._sliderPointPosition();
                //砝码位置初始化
                self._setWeightPos();
                //初始化表格的显示与隐藏,执行两次才会正常
                self._showAndHideData();
                self._showAndHideData();
                //判断弹框状态
                self._popStatus();
            }
        },
        //初始化学生端数字键盘部分
        _setWeightNumKeyBoardInStudent: function _setWeightNumKeyBoardInStudent() {
            var self = this;
            self.leftNumInputText.text(self.model.__ExtendModel.leftWeightNum);
            self.rightNumInputText.text(self.model.__ExtendModel.rightWeightNum);

            //数字键盘恢复之前状态
            if (self.leftKeyboardIsVisible) {
                self._leftToggleBtn();
                self._leftToggleBtn();
            }
            if (self.rightKeyboardIsVisible) {
                self._rightToggleBtn();
                self._rightToggleBtn();
            }
        },
        //渲染出砝码
        _setWeightNumInStudent: function _setWeightNumInStudent() {
            var self = this;
            self.$view.find('.js_left_item').remove();
            for (var i = 0; i < parseInt(self.model.__ExtendModel.leftWeightNum); i++) {
                var weight_dom = "<div class='lab_weight_item js_left_item item" + (i + 1) + "'></div>";
                self.leftWeightWrap.append(weight_dom);
            }
            self.$view.find('.js_right_item').remove();
            for (var i = 0; i < parseInt(self.model.__ExtendModel.rightWeightNum); i++) {
                var weight_dom = "<div class='lab_weight_item js_right_item item" + (i + 1) + "'></div>";
                self.rightWeightWrap.append(weight_dom);
            }
        },
        //判断弹框状态
        _popStatus: function _popStatus() {
            var self = this;
            if (self.popLeverageIsVisible) {
                //弹出弹框
                self.popLeverageMask.removeClass('hide_dom');
                self.popLeverage.removeClass('hide_dom');

                if (self.statisticaltable.length > 10) {
                    self.recordTxt.removeClass('hide_dom');
                } else {
                    self.recordTxt.addClass('hide_dom');
                }
            } else {
                //隐藏弹框
                self.popLeverageMask.addClass('hide_dom');
                self.popLeverage.addClass('hide_dom');
            }
        },
        //系列事件
        _seriesOfEvents: function _seriesOfEvents(event) {
            var self = this;
            //滑块状态
            self.leftIsMoving = false;
            self.rightIsMoving = false;
            if ($(event.target).hasClass('js_left_keyboard_num') || $(event.target).hasClass('js_left_keyboard_num_value') || $(event.target).hasClass('js_right_keyboard_num') || $(event.target).hasClass('js_right_keyboard_num_value')) {
                self.active = true;
            }
            //设置砝码数
            self._setWeightNum(event);
            //设置刻度数
            self._setScaleNum();
            //将数据插入数组
            self._pushDataToArr(event);
            //判断重置按钮是否可用
            self._resetBtnStatus();
            //杠杆倾斜
            self._leverRotate();
            //0刻度特殊处理
            self._oneScaleSpecial();
            //滑块吸附
            self._adsorption();
            //学生端去掉高亮
            if (event.type == "touchend") {
                if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum) || self.leftWeightNum == 0 || self.rightWeightNum == 0 || self.leftScale == 0.4 || self.rightScale == 0.4) {
                    self.leftSlider.removeClass('active');
                    self.rightSlider.removeClass('active');
                }
            }
            if (event.type == "mouseup" && !$(event.target).hasClass('js_left_slider') && !$(event.target).hasClass('js_right_slider')) {
                if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum) || self.leftWeightNum == 0 || self.rightWeightNum == 0 || self.leftScale == 0.4 || self.rightScale == 0.4) {
                    self.leftSlider.removeClass('active');
                    self.rightSlider.removeClass('active');
                }
            }
            if (event.type == "mouseup" && !$(event.target).hasClass('js_left_slider') && $(event.target).hasClass('js_right_slider') && self.leftScale == 0.4 && self.rightScale == 0.4) {
                if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum) || self.leftWeightNum == 0 || self.rightWeightNum == 0 || self.leftScale == 0.4 || self.rightScale == 0.4) {
                    self.leftSlider.removeClass('active');
                }
            }
            if (event.type == "mouseup" && $(event.target).hasClass('js_left_slider') && !$(event.target).hasClass('js_right_slider') && self.leftScale == 0.4 && self.rightScale == 0.4) {
                if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum) || self.leftWeightNum == 0 || self.rightWeightNum == 0 || self.leftScale == 0.4 || self.rightScale == 0.4) {
                    self.rightSlider.removeClass('active');
                }
            }
            self.active = false;
        },

        //画刻度线
        _drawTickmarks: function _drawTickmarks() {
            var self = this;
            for (var i = 0; i < 24; i++) {
                var mark = "<span style='display: inline-block;width:0;height:100%;border: 1px solid yellow;position: absolute;top:0 ;left:" + self.everyScale * i + "px;'></span>";
                self.lever.append(mark);
            }
        },
        //滑块状态判定
        _setSliderMoveStatus: function _setSliderMoveStatus(event) {
            var self = this;
            if ($(event.target).hasClass('js_left_slider')) {
                if (event.type == "touchstart" || event.type == "mousedown") {
                    self.leftSlider.addClass('active');
                }
                self.leftIsMoving = true;
                self.rightIsMoving = false;
            }
            if ($(event.target).hasClass('js_right_slider')) {
                if (event.type == "touchstart" || event.type == "mousedown") {
                    self.rightSlider.addClass('active');
                }
                self.rightIsMoving = true;
                self.leftIsMoving = false;
            }
        },
        //移动过程中的高亮
        _moveHighLight: function _moveHighLight() {
            var self = this;
            if (self.leftIsMoving) {
                self.leftSlider.addClass('active');
            }

            if (self.rightIsMoving) {
                self.rightSlider.addClass('active');
            }
        },
        //mouseover和mouseleave增加或者去掉高亮
        _addAndRemoveHighlight: function _addAndRemoveHighlight(event) {
            var self = this;
            if (event.type == "mouseover") {
                if ($(event.target).hasClass('js_left_slider')) {
                    self.leftSlider.addClass('active');
                }
                if ($(event.target).hasClass('js_right_slider')) {
                    self.rightSlider.addClass('active');
                }
            }
            if (event.type == "mouseleave") {
                if ($(event.target).hasClass('js_left_slider')) {
                    if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum) || self.leftWeightNum == 0 || self.rightWeightNum == 0 || self.leftScale == 0.4 || self.rightScale == 0.4) {
                        self.leftSlider.removeClass('active');
                    } else if (self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum && self.operableHighLight) {
                        self.leftSlider.removeClass('active');
                    }
                }
                if ($(event.target).hasClass('js_right_slider')) {
                    if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum) || self.leftWeightNum == 0 || self.rightWeightNum == 0 || self.leftScale == 0.4 || self.rightScale == 0.4) {
                        self.rightSlider.removeClass('active');
                    } else if (self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum && self.operableHighLight) {
                        self.rightSlider.removeClass('active');
                    }
                }
            }
        },
        //不允许滑块滑动
        _setSliderMoveFalse: function _setSliderMoveFalse() {
            //是否允许左滑块移动
            this.leftIsMoving = false;
            //是否允许右滑块移动
            this.rightIsMoving = false;
        },
        //重置按钮的状态
        _resetBtnStatus: function _resetBtnStatus() {
            var self = this;

            //满足初始状态
            if (self.leftScale == 0.4 && self.leftWeightNum == 0 && self.rightScale == 0.4 && self.rightWeightNum == 0 && self.leftNumberKeyboardWrap.hasClass('hide_dom') && self.rightNumberKeyboardWrap.hasClass('hide_dom')) {
                self.labResetBtn.addClass('click_disabled');
            } else {
                self.labResetBtn.removeClass('click_disabled');
            }
            //大表格存在的状态
            if (self.tableIsVisible) {
                self.labResetBtn.addClass('click_disabled');
            }
        },
        //重置杠杆
        _resetPage: function _resetPage() {
            var self = this;
            //如果大表格显示，return
            if (self.tableIsVisible || self.labResetBtn.hasClass('click_disabled')) {
                return;
            }
            //清空砝码
            self.$view.find('.js_left_item').remove();
            self.$view.find('.js_right_item').remove();

            //数字键盘初始化
            self.leftNumInputText.text('0');
            self.rightNumInputText.text('0');
            if (self.leftArrowBtn.hasClass('arrow_down')) {
                self._leftToggleBtn();
            }

            if (self.rightArrowBtn.hasClass('arrow_down')) {
                self._rightToggleBtn();
            }
            //初始化刻度
            self.currentDegree = 0;
            //左边刻度数
            self.leftScale = 0.4;
            //左边砝码数
            self.leftWeightNum = 0;
            //右边刻度数
            self.rightScale = 0.4;
            //右边砝码数
            self.rightWeightNum = 0;
            //左滑块的位置
            self.leftSliderCoordinate.X = self.lever.outerWidth() / 2 - self.leftSliderWidth * 7 / 8;
            //右滑块的位置
            self.rightSliderCoordinate.X = self.lever.outerWidth() / 2 - self.rightSliderWidth * 1 / 8;
            //左砝码位置
            self.leftWeightCoordinate.X = self.leverCenterCoordinate.X - self.leftWeightWrapWidth;
            self.leftWeightCoordinate.Y = self.leverCenterCoordinate.Y + self.lever.outerHeight() * 21 / 40;
            //右砝码位置
            self.rightWeightCoordinate.X = self.leverCenterCoordinate.X;
            self.rightWeightCoordinate.Y = self.leverCenterCoordinate.Y + self.lever.outerHeight() * 21 / 40;
            //初始化滑块位置
            self.leftSlider.css({ left: self.leftSliderCoordinate.X, top: -self.sliderHeight / 6 });
            self.rightSlider.css({ left: self.rightSliderCoordinate.X, top: -self.sliderHeight / 6 });
            //初始化砝码位置
            self.leftWeightWrap.css({ left: self.leftWeightCoordinate.X, top: self.leftWeightCoordinate.Y });
            self.rightWeightWrap.css({ left: self.rightWeightCoordinate.X, top: self.rightWeightCoordinate.Y });
            //初始化刻度
            self.everyScale = self.lever.outerWidth() / 24;
            //让杠杆倾斜
            self.lever.css({ transform: 'rotate(' + self.currentDegree + 'deg)' });
            self.leverWrap.css({ transform: 'rotate(' + self.currentDegree + 'deg)' });
            //页面为初始状态
            self._resetBtnStatus();
            self.labResetBtn.addClass('click_disabled');
        },
        //数据插入需要满足的条件
        _conditionOfData: function _conditionOfData(event) {
            var self = this;
            //判断有没有出现重复的值
            for (var i = 0; i < self.statisticaltable.length; i++) {
                var dataRepeat = self.leftScale == self.statisticaltable[i].left.scale && self.leftWeightNum == self.statisticaltable[i].left.weight && self.rightScale == self.statisticaltable[i].right.scale && self.rightWeightNum == self.statisticaltable[i].right.weight;
                if (dataRepeat && self.active == true) {
                    //高亮状态
                    self.leftSlider.addClass('active');
                    self.rightSlider.addClass('active');
                    self.weightShadow.removeClass('hide_dom');
                    self.table.find('li:eq(' + i + ')').addClass('active');
                    self.oneLineTable.find('li:eq(0)').addClass('active');
                    self.operableHighLight = false;
                    //一行表格显示重复的数据
                    self.oneLineTable.find("li:eq(0)").find("span:eq(0)").text(i + 1);
                    self.oneLineTable.find("li:eq(0)").find("span:eq(1)").text(self.statisticaltable[i].left.scale);
                    self.oneLineTable.find("li:eq(0)").find("span:eq(2)").text(self.statisticaltable[i].left.weight);
                    self.oneLineTable.find("li:eq(0)").find("span:eq(3)").text(self.statisticaltable[i].right.scale);
                    self.oneLineTable.find("li:eq(0)").find("span:eq(4)").text(self.statisticaltable[i].right.weight);
                    //两秒后恢复正常
                    setTimeout(function () {
                        //去掉高亮状态
                        self.leftSlider.removeClass('active');
                        self.rightSlider.removeClass('active');
                        self.weightShadow.addClass('hide_dom');
                        self.table.find('li:eq(' + i + ')').removeClass('active');
                        self.oneLineTable.find('li:eq(0)').removeClass('active');
                        //显示最新数据
                        self._onelineTableData();
                        self.operableHighLight = true;
                    }, 1000);
                    break;
                }
            }
            return dataRepeat;
        },
        //将数据插入到数组中
        _pushDataToArr: function _pushDataToArr(event) {
            var self = this;
            //去掉高亮
            if (!(self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum)) {
                //显示最新数据
                self._onelineTableData();
            }
            //判断是否满足条件
            var dataRepeat = self._conditionOfData(event);
            //判断使表格中不能出现0,并插入数据
            if (!dataRepeat && self.leftScale * self.leftWeightNum == self.rightScale * self.rightWeightNum && self.active == true) {
                if (self.leftWeightNum != 0 && self.rightWeightNum != 0) {
                    if (self.leftScale != 0.4 && self.rightScale != 0.4) {
                        //插入数据
                        self.statisticaltable.push({
                            left: {
                                scale: self.leftScale,
                                weight: self.leftWeightNum
                            },
                            right: {
                                scale: self.rightScale,
                                weight: self.rightWeightNum
                            }
                        });
                        //滑块和砝码高亮
                        self.leftSlider.addClass('active');
                        self.rightSlider.addClass('active');
                        self.weightShadow.removeClass('hide_dom');
                        self.operableHighLight = false;
                        //两秒后高亮消失
                        setTimeout(function () {
                            self.leftSlider.removeClass('active');
                            self.rightSlider.removeClass('active');
                            self.weightShadow.addClass('hide_dom');
                            self.operableHighLight = true;
                        }, 1000);

                        //渲染表格
                        self._writeInTable();
                        //渲染一行表格
                        if (!dataRepeat) {
                            self._onelineTableData();
                        }

                        //当数据条数超过10的时候弹出弹框
                        if (self.statisticaltable.length > 10) {
                            //弹出弹框
                            self.popLeverageMask.removeClass('hide_dom');
                            self.popLeverage.removeClass('hide_dom');
                            self.recordTxt.removeClass('hide_dom');
                            self.popLeverageIsVisible = true;
                        }
                    }
                }
            }
        },
        //弹出是否清空实验数据的弹窗
        _clearTableDataPop: function _clearTableDataPop() {
            var self = this;
            self.popLeverageMask.removeClass('hide_dom');
            self.popLeverage.removeClass('hide_dom');
            self.recordTxt.addClass('hide_dom');
            self.popLeverageIsVisible = true;
        },

        //隐藏弹框,并清除最后条数据
        _hidePop: function _hidePop() {
            var self = this;
            if (self.statisticaltable.length > 10) {
                //清除最后一条数据
                self.statisticaltable.pop();
            }
            self.popLeverageMask.addClass('hide_dom');
            self.popLeverage.addClass('hide_dom');
            self.popLeverageIsVisible = false;
        },

        //插入第十一条数据
        _inputElevenData: function _inputElevenData() {
            var self = this;
            //插入数据
            self.statisticaltable.push({
                left: {
                    scale: self.elevenData.left.scale,
                    weight: self.elevenData.left.weight
                },
                right: {
                    scale: self.elevenData.right.scale,
                    weight: self.elevenData.right.weight
                }
            });
            //滑块和砝码高亮
            self.leftSlider.addClass('active');
            self.rightSlider.addClass('active');
            self.weightShadow.removeClass('hide_dom');

            //两秒后高亮消失
            setTimeout(function () {
                self.leftSlider.removeClass('active');
                self.rightSlider.removeClass('active');
                self.weightShadow.addClass('hide_dom');
            }, 1000);
        },

        //一键清除所有记录
        _clearTableData: function _clearTableData() {
            var self = this;
            if (self.statisticaltable.length > 10) {
                //保存最后一条数据
                self.elevenData = self.statisticaltable[self.statisticaltable.length - 1];
                //清除所有数据
                $.each(self.statisticaltable, function (n, value) {
                    self.statisticaltable.pop();
                });
                //渲染表格
                self._writeInTable();
                self._onelineTableData();
                //将最后一条数据插入表格
                self._inputElevenData();
            } else {
                $.each(self.statisticaltable, function (n, value) {
                    self.statisticaltable.pop();
                });
            }

            //渲染表格
            self._writeInTable();
            self._onelineTableData();
            self.popLeverageMask.addClass('hide_dom');
            self.popLeverage.addClass('hide_dom');
            self.recordTxt.addClass('hide_dom');
            self.popLeverageIsVisible = false;
        },

        //实验界面的表格显示最新数据
        _onelineTableData: function _onelineTableData() {
            var self = this;
            if (self.statisticaltable.length == 0) {
                self.oneLineTable.find("li:eq(0)").find("span:eq(0)").text('1');
                self.oneLineTable.find("li:eq(0)").find("span:eq(1)").text('');
                self.oneLineTable.find("li:eq(0)").find("span:eq(2)").text('');
                self.oneLineTable.find("li:eq(0)").find("span:eq(3)").text('');
                self.oneLineTable.find("li:eq(0)").find("span:eq(4)").text('');
            } else {
                self.oneLineTable.find("li:eq(0)").find("span:eq(0)").text(self.statisticaltable.length);
                self.oneLineTable.find("li:eq(0)").find("span:eq(1)").text(self.statisticaltable[self.statisticaltable.length - 1].left.scale);
                self.oneLineTable.find("li:eq(0)").find("span:eq(2)").text(self.statisticaltable[self.statisticaltable.length - 1].left.weight);
                self.oneLineTable.find("li:eq(0)").find("span:eq(3)").text(self.statisticaltable[self.statisticaltable.length - 1].right.scale);
                self.oneLineTable.find("li:eq(0)").find("span:eq(4)").text(self.statisticaltable[self.statisticaltable.length - 1].right.weight);
            }

            if (self.statisticaltable.length > 10) {
                self.oneLineTable.find("li:eq(0)").find("span:eq(0)").text(self.statisticaltable.length - 1);
                self.oneLineTable.find("li:eq(0)").find("span:eq(1)").text(self.statisticaltable[self.statisticaltable.length - 2].left.scale);
                self.oneLineTable.find("li:eq(0)").find("span:eq(2)").text(self.statisticaltable[self.statisticaltable.length - 2].left.weight);
                self.oneLineTable.find("li:eq(0)").find("span:eq(3)").text(self.statisticaltable[self.statisticaltable.length - 2].right.scale);
                self.oneLineTable.find("li:eq(0)").find("span:eq(4)").text(self.statisticaltable[self.statisticaltable.length - 2].right.weight);
            }
        },

        //将数据填充到表格中
        _writeInTable: function _writeInTable() {
            var self = this;
            if (self.statisticaltable.length == 0) {
                for (var i = 0; i < self.table.find('li').length; i++) {
                    self.table.find("li:eq(" + i + ")").find("span:eq(1)").text('');
                    self.table.find("li:eq(" + i + ")").find("span:eq(2)").text('');
                    self.table.find("li:eq(" + i + ")").find("span:eq(3)").text('');
                    self.table.find("li:eq(" + i + ")").find("span:eq(4)").text('');
                }

                for (var i = 0; i < self.table.find('li').length; i++) {
                    self.oneLineTable.find("li:eq(0)").find("span:eq(1)").text('');
                    self.oneLineTable.find("li:eq(0)").find("span:eq(2)").text('');
                    self.oneLineTable.find("li:eq(0)").find("span:eq(3)").text('');
                    self.oneLineTable.find("li:eq(0)").find("span:eq(4)").text('');
                }
            } else {
                for (var i = 0; i < self.statisticaltable.length; i++) {
                    self.table.find("li:eq(" + i + ")").find("span:eq(1)").text(self.statisticaltable[i].left.scale);
                    self.table.find("li:eq(" + i + ")").find("span:eq(2)").text(self.statisticaltable[i].left.weight);
                    self.table.find("li:eq(" + i + ")").find("span:eq(3)").text(self.statisticaltable[i].right.scale);
                    self.table.find("li:eq(" + i + ")").find("span:eq(4)").text(self.statisticaltable[i].right.weight);
                }
            }
        },

        //设置砝码个数
        _setWeightNum: function _setWeightNum(event) {
            var self = this;

            if ($(event.target).hasClass('js_left_keyboard_num') || $(event.target).hasClass('js_left_keyboard_num_value')) {
                self.leftWeightNum = parseInt($(event.target).text());
                self.leftNumInputText.text(self.leftWeightNum);
                self.$view.find('.js_left_item').remove();
                // self.$view.find('.js_left_item').css({"display":"none"});
                for (var i = 0; i < parseInt($(event.target).text()); i++) {
                    var weight_dom = "<div class='lab_weight_item js_left_item item" + (i + 1) + "'></div>";
                    self.leftWeightWrap.append(weight_dom);
                }
            } else if ($(event.target).hasClass('js_right_keyboard_num') || $(event.target).hasClass('js_right_keyboard_num_value')) {
                self.rightWeightNum = parseInt($(event.target).text());
                self.rightNumInputText.text(self.rightWeightNum);
                self.$view.find('.js_right_item').remove();
                for (var i = 0; i < parseInt($(event.target).text()); i++) {
                    var weight_dom = "<div class='lab_weight_item js_right_item item" + (i + 1) + "'></div>";
                    self.rightWeightWrap.append(weight_dom);
                }
            }
        },

        //改变砝码位置
        _setWeightPos: function _setWeightPos() {
            var self = this;
            //横向偏差Cos
            var leftCos = self.leftScale * (1 - Math.cos(self.currentDegree / 360 * 2 * Math.PI)) * self.everyScale;
            var rightCos = self.rightScale * (1 - Math.cos(self.currentDegree / 360 * 2 * Math.PI)) * self.everyScale;
            if (self.currentDegree < 0) {
                self.leftWeightCoordinate.X = self.lever.position().left + self.leftSliderPointCoordinate.X * Math.cos(self.currentDegree / 360 * 2 * Math.PI) - self.sliderHeight * Math.sin(self.currentDegree / 360 * 2 * Math.PI) - self.leftWeightWrapWidth / 2;
                self.rightWeightCoordinate.X = self.lever.position().left + self.rightSliderPointCoordinate.X * Math.cos(self.currentDegree / 360 * 2 * Math.PI) - self.sliderHeight * Math.sin(self.currentDegree / 360 * 2 * Math.PI) - self.rightWeightWrapWidth / 2;
            }

            if (self.currentDegree >= 0) {
                self.leftWeightCoordinate.X = self.lever.position().left + self.leftSliderPointCoordinate.X * Math.cos(self.currentDegree / 360 * 2 * Math.PI) - self.leftWeightWrapWidth / 2;
                self.rightWeightCoordinate.X = self.lever.position().left + self.rightSliderPointCoordinate.X * Math.cos(self.currentDegree / 360 * 2 * Math.PI) - self.rightWeightWrapWidth / 2;
            }
            var leftTan = -(self.leverCenterCoordinate.X - self.leftWeightCoordinate.X) * Math.tan(self.currentDegree / 360 * 2 * Math.PI);
            var rightTan = -(self.leverCenterCoordinate.X - self.rightWeightCoordinate.X) * Math.tan(self.currentDegree / 360 * 2 * Math.PI);
            //砝码的Y坐标
            self.leftWeightCoordinate.Y = leftTan + self.leverCenterCoordinate.Y + self.lever.outerHeight() * 21 / 40 / Math.cos(self.currentDegree / 360 * 2 * Math.PI) + self.leftSliderWidth * Math.sin(self.currentDegree / 360 * 2 * Math.PI) / 2;
            self.rightWeightCoordinate.Y = rightTan + self.leverCenterCoordinate.Y + self.lever.outerHeight() * 21 / 40 / Math.cos(self.currentDegree / 360 * 2 * Math.PI) + self.rightSliderWidth * Math.sin(self.currentDegree / 360 * 2 * Math.PI) / 2;
            //设置砝码的top和left
            self.leftWeightWrap.css({ left: self.leftWeightCoordinate.X, top: self.leftWeightCoordinate.Y });
            self.rightWeightWrap.css({ left: self.rightWeightCoordinate.X, top: self.rightWeightCoordinate.Y });
        },
        //设置刻度数
        _setScaleNum: function _setScaleNum() {
            var self = this;
            self.realLeftScale = (self.lever.outerWidth() / 2 - self.leftSliderCoordinate.X - self.leftSliderWidth / 2) / self.everyScale;
            self.realRightScale = (self.rightSliderCoordinate.X - self.lever.outerWidth() / 2 + self.rightSliderWidth / 2) / self.everyScale;
            //0刻度数特殊处理
            if (self.leftSliderCoordinate.X + self.leftSliderWidth / 2 > self.lever.outerWidth() / 2 - self.everyScale * 4 / 5) {
                self.realLeftScale = 0;
            }
            if (self.rightSliderCoordinate.X + self.rightSliderWidth / 2 < self.lever.outerWidth() / 2 + self.everyScale * 4 / 5) {
                self.realRightScale = 0;
            }
            self.leftScale = Math.round(self.realLeftScale);
            self.rightScale = Math.round(self.realRightScale);
            if (self.leftScale == 0) {
                self.leftScale = 0.4;
            }
            if (self.rightScale == 0) {
                self.rightScale = 0.4;
            }
        },
        //杠杆倾斜
        _leverRotate: function _leverRotate() {
            var self = this;
            //右边砝码数
            var RWN = self.rightWeightNum;
            //右边刻度
            var RS = self.rightScale;
            //左边砝码数
            var LWN = self.leftWeightNum;
            //左边刻度
            var LS = self.leftScale;
            //最小旋转角度
            var minDegree = self.maxDegree / [(self.sliderWeight + self.everyWeight * 12) * 12];
            //实时角度
            if (RWN * RS - LWN * LS == 0 && RWN != 0 && LWN != 0 && RS >= 1 && LS >= 1) {
                self.currentDegree = 0;
            } else {
                self.currentDegree = minDegree * [RWN * RS + self.sliderWeight * RS - (LWN * LS + self.sliderWeight * LS)];
            }
            //让杠杆倾斜
            self.lever.css({ transform: 'rotate(' + self.currentDegree + 'deg)' });
            self.leverWrap.css({ transform: 'rotate(' + self.currentDegree + 'deg)' });
        },
        //拖动滑块
        _sliderMove: function _sliderMove(event) {
            var self = this;
            //父容器的x坐标
            var offset_x = self.lever.offset().left;
            //自身宽度的一半
            var LSW = self.leftSliderWidth / 2;
            var RSW = self.rightSliderWidth / 2;
            /* 获取当前鼠标的坐标 */
            if (self.leftIsMoving) {
                if ($(event.target).hasClass('js_left_slider') || $(event.target).hasClass('js_lever') || $(event.target).hasClass('js_range_of_activities')) {
                    self.leftSliderCoordinate.X = self.mouseX - offset_x - LSW;
                    //滑块的x坐标
                    self.leftSlider.css({ left: self.leftSliderCoordinate.X, top: -self.sliderHeight / 6 });
                    //判断滑块在相应范围内没有
                    if (parseInt(self.leftSlider.position().left) > self.lever.outerWidth() / 2 - self.leftSliderWidth) {
                        if (parseInt(self.leftSlider.position().left) > self.lever.outerWidth() / 2) {
                            self.leftIsMoving = false;
                            self.rightIsMoving = false;
                        }
                        //左滑块的位置
                        self.leftSliderCoordinate.X = self.lever.outerWidth() / 2 - self.leftSliderWidth * 7 / 8;
                        self.leftSlider.css({ left: self.leftSliderCoordinate.X, top: -self.sliderHeight / 6 });
                    } else if (parseInt(self.leftSlider.position().left) < -self.leftSliderWidth * 11 / 20) {
                        if (parseInt(self.leftSlider.position().left) < -self.leftSliderWidth) {
                            self.leftIsMoving = false;
                            self.rightIsMoving = false;
                        }
                        self.leftSliderCoordinate.X = -self.leftSliderWidth / 2;
                        self.leftSlider.css({ left: self.leftSliderCoordinate.X, top: -self.sliderHeight / 6 });
                    }
                }
            }
            if (self.rightIsMoving) {
                if ($(event.target).hasClass('js_right_slider') || $(event.target).hasClass('js_lever') || $(event.target).hasClass('js_range_of_activities')) {
                    self.rightSliderCoordinate.X = self.mouseX - offset_x - RSW;
                    //滑块的x坐标
                    self.rightSlider.css({ left: self.rightSliderCoordinate.X, top: -self.sliderHeight / 6 });
                    //判断滑块在相应范围内没有
                    if (parseInt(self.rightSlider.position().left) < self.lever.outerWidth() / 2 - self.rightSliderWidth * 1 / 8) {
                        if (parseInt(self.rightSlider.position().left) < self.lever.outerWidth() / 2 - self.rightSliderWidth) {
                            self.leftIsMoving = false;
                            self.rightIsMoving = false;
                        }
                        //右滑块的位置
                        self.rightSliderCoordinate.X = self.lever.outerWidth() / 2 - self.rightSliderWidth * 1 / 8;
                        self.rightSlider.css({ left: self.rightSliderCoordinate.X, top: -self.sliderHeight / 6 });
                    } else if (parseInt(self.rightSlider.position().left) > self.lever.outerWidth() - self.leftSliderWidth) {
                        if (parseInt(self.rightSlider.position().left) > self.lever.outerWidth()) {
                            self.leftIsMoving = false;
                            self.rightIsMoving = false;
                        }
                        self.rightSliderCoordinate.X = self.lever.outerWidth() - self.leftSliderWidth / 2;
                        self.rightSlider.css({ left: self.rightSliderCoordinate.X, top: -self.sliderHeight / 6 });
                    }
                }
            }
            //定位点改变
            self._sliderPointPosition();
        },

        //滑块吸附
        _adsorption: function _adsorption() {
            var self = this;
            //左滑块
            if (self.leftScale == 0.4) {} else {
                self.leftSliderCoordinate.X = self.lever.outerWidth() / 2 - self.leftScale * self.everyScale - self.leftSliderWidth / 2;
            }
            //右滑块
            if (self.rightScale == 0.4) {} else {
                self.rightSliderCoordinate.X = self.lever.outerWidth() / 2 + self.rightScale * self.everyScale - self.rightSliderWidth / 2;
            }
            //滑块的x坐标
            self.leftSlider.css({ left: self.leftSliderCoordinate.X, top: -self.sliderHeight / 6 });
            self.rightSlider.css({ left: self.rightSliderCoordinate.X, top: -self.sliderHeight / 6 });
            //改变定点位置
            self._sliderPointPosition();
            //改变砝码位置
            self._setWeightPos();
        },
        //0刻度特殊处理
        _oneScaleSpecial: function _oneScaleSpecial() {
            var self = this;
            if (self.leftSliderCoordinate.X + self.leftSliderWidth / 2 > self.lever.outerWidth() / 2 - 1 * self.everyScale) {
                self.leftSliderCoordinate.X = self.lever.outerWidth() / 2 - self.leftSliderWidth * 7 / 8;
            }
            if (self.rightSliderCoordinate.X + self.rightSliderWidth / 2 < self.lever.outerWidth() / 2 + 1 * self.everyScale) {
                self.rightSliderCoordinate.X = self.lever.outerWidth() / 2 - self.rightSliderWidth * 1 / 8;
            }
            //滑块的x坐标
            self.leftSlider.css({ left: self.leftSliderCoordinate.X, top: -self.sliderHeight / 6 });
            self.rightSlider.css({ left: self.rightSliderCoordinate.X, top: -self.sliderHeight / 6 });
            //改变砝码位置
            self._setWeightPos();
        },

        //显示或者隐藏表格
        _showAndHideData: function _showAndHideData() {
            var self = this;
            if (self.tableIsVisible) {
                //隐藏大表格
                self.tableWrap.addClass('hide_dom');
                //self.tableWrap.stop(true ,false).animate({'height':0 } ,500);
                self.toggleLeftKeyboardBtn.removeClass('click_disabled');
                self.toggleRightKeyboardBtn.removeClass('click_disabled');
                self.toggleTableBtn.find('span').text(self.i18n.show_all_data);
                self.tableIsVisible = false;
                //数字键盘恢复之前状态
                if (self.leftNumKeyboardShow) {
                    self._leftToggleBtn();
                }
                if (self.rightNumKeyboardShow) {
                    self._rightToggleBtn();
                }
                //重置按钮恢复
                self._resetBtnStatus();
            } else {
                //显示大表格
                self.tableWrap.removeClass('hide_dom');
                self.table.scrollTop(0);
                //按钮箭头状态及之前数字键盘状态的保存
                if (self.leftArrowBtn.hasClass('arrow_down')) {
                    self._leftToggleBtn();
                    self.leftNumKeyboardShow = true;
                } else {
                    self.leftNumKeyboardShow = false;
                }
                if (self.rightArrowBtn.hasClass('arrow_down')) {
                    self._rightToggleBtn();
                    self.rightNumKeyboardShow = true;
                } else {
                    self.rightNumKeyboardShow = false;
                }
                //设置勾码数的面板不可用
                self.toggleLeftKeyboardBtn.addClass('click_disabled');
                self.toggleRightKeyboardBtn.addClass('click_disabled');
                self.toggleTableBtn.find('span').text(self.i18n.hide_all_data);
                self.leftNumberKeyboardWrap.addClass('hide_dom');
                self.rightNumberKeyboardWrap.addClass('hide_dom');
                self.tableIsVisible = true;
                //重置按钮置灰
                self.labResetBtn.addClass('click_disabled');
            }
        },

        //数字键盘状态切换与保存
        _leftToggleBtn: function _leftToggleBtn() {
            var self = this;
            if (self.leftKeyboardIsVisible) {
                if (!self.toggleLeftKeyboardBtn.hasClass('click_disabled')) {
                    self.leftNumberKeyboardWrap.addClass('hide_dom');
                    self.leftArrowBtn.removeClass('arrow_down');
                    self.leftKeyboardIsVisible = false;
                }
            } else {
                if (!self.toggleLeftKeyboardBtn.hasClass('click_disabled')) {
                    self.leftNumberKeyboardWrap.removeClass('hide_dom');
                    self.leftArrowBtn.addClass('arrow_down');
                    self.leftKeyboardIsVisible = true;
                }
            }
        },

        //滑动显示与隐藏左勾码数和右勾码数
        _rightToggleBtn: function _rightToggleBtn(event) {
            var self = this;
            if (self.rightKeyboardIsVisible) {
                if (!self.toggleRightKeyboardBtn.hasClass('click_disabled')) {
                    self.rightNumberKeyboardWrap.addClass('hide_dom');
                    self.rightArrowBtn.removeClass('arrow_down');
                    self.rightKeyboardIsVisible = false;
                }
            } else {

                if (!self.toggleRightKeyboardBtn.hasClass('click_disabled')) {
                    self.rightNumberKeyboardWrap.removeClass('hide_dom');
                    self.rightArrowBtn.addClass('arrow_down');
                    self.rightKeyboardIsVisible = true;
                }
            }
        },
        //设置滑块定位点的位置
        _sliderPointPosition: function _sliderPointPosition() {
            var self = this;
            self.leftSliderPointCoordinate.X = self.leftSliderCoordinate.X + self.leftSliderWidth / 2;
            self.leftSliderPointCoordinate.Y = self.sliderHeight;
            self.rightSliderPointCoordinate.X = self.rightSliderCoordinate.X + self.rightSliderWidth / 2;
            self.rightSliderPointCoordinate.Y = self.sliderHeight;
            self.leftSliderPoint.css({ left: self.leftSliderPointCoordinate.X, top: self.leftSliderPointCoordinate.Y });
            self.rightSliderPoint.css({ left: self.rightSliderPointCoordinate.X, top: self.rightSliderPointCoordinate.Y });
        }
    };
    return LeverageAndBalance;
});]]></presenter><resources><file src="./resources/wood/images/base.png"/><file src="./resources/wood/images/clear_btn.png"/><file src="./resources/wood/images/drop_arrow_grey.png"/><file src="./resources/wood/images/drop_arrow.png"/><file src="./resources/wood/images/lever.png"/><file src="./resources/wood/images/scrollbar/vertical-decrement-arrow.png"/><file src="./resources/wood/images/scrollbar/vertical-increment-arrow.png"/><file src="./resources/wood/images/scrollbar/vertical-thumb.png"/><file src="./resources/wood/images/slider_active.png"/><file src="./resources/wood/images/slider.png"/><file src="./resources/wood/images/weight.png"/></resources></addon>