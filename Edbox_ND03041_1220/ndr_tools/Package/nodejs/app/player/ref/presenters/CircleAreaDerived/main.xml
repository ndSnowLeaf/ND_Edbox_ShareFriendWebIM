<?xml version='1.0' encoding='UTF-8'?><addon id="templateid"><properties/><dependencies><jsDependency><javaScript name="kitty" version="2.0.4.1"/><javaScript name="tools_common" version="1.0.0"/><javaScript name="AlamedaRequire" version="0.3.2"/></jsDependency></dependencies><css><![CDATA[.exam_skin_wood .circleareaderived_wrapper{position:relative;width:100%;height:100%;background:#bfd3e2}.exam_skin_wood .circleareaderived_wrapper #letterR,.exam_skin_wood .circleareaderived_wrapper #letterRc{font-style:italic;font-family:Bell MT,Times New Roman,serif}.font_style,.font_style_equal{font-style:italic!important;font-family:Bell MT,"Times New Roman",serif!important}.font_weight{font-weight:900}.text_farmily{font-size:87px}.exam_skin_wood .circleareaderived_wrapper .com_btns{min-width:6.25em;height:3.08333em;line-height:2.91667em}.exam_skin_wood .circleareaderived_wrapper .com_btns .btns-primary-txt{font-size:1.5em}.exam_skin_wood .circleareaderived_wrapper .com_btns.btns-primary.click_disabled{background:linear-gradient(180deg,#dae0e5 0,#e7eef4)}.exam_skin_wood .circleareaderived_wrapper .hide_dom{display:none}.exam_skin_wood .circleareaderived_wrapper .tool_operate_img{display:block;margin:.54167em auto 0;width:2.41667em;height:2.41667em;background:url(resources/wood/images/tool_operate_sprites.png) 0 -5.66667em no-repeat;background-size:auto 8.08333em}.exam_skin_wood .circleareaderived_wrapper .tool_operate_text{padding:0 1em;text-align:center;color:#292525;display:block;font-size:1.16667em;margin-top:.54167em}.exam_skin_wood .circleareaderived_wrapper .circleareaderived_inner{position:absolute;width:69.7em;height:34.4em;top:50%;left:50%;margin-top:-18.7em;margin-left:-34.9em;overflow:hidden;background:#b8cdde}.exam_skin_wood .circleareaderived_wrapper .circleareaderived_main{width:100%;height:100%;padding-bottom:4em;text-align:center}.exam_skin_wood .circleareaderived_wrapper .circleareaderived_main:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_initial{display:inline-block;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_open{padding-top:1.41667em}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_left_area,.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area{position:relative;display:inline-block;height:24.66667em}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_left_area:after,.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_left_area .cp_left_svg,.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_left_area .cp_right_svg,.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .cp_left_svg,.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .cp_right_svg{display:inline-block;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_left_area{width:20.33333em}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_left_area:before{content:"";position:absolute;display:block;height:3.58333em;width:5.58333em;background:url(resources/wood/images/icon_arrow.png) no-repeat;background-size:100% 100%;right:-4.16667em;top:10.54167em}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area{position:relative;width:44.58333em}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .cp_right_svg:after{content:"";position:absolute;display:block;height:2.5em;width:28em;background:url(resources/wood/images/icon_bracket.png) no-repeat;background-size:100% 100%;left:8.16667em;bottom:2.91667em}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .bracket_and_formula{min-width:33.33333em;position:absolute;bottom:-1.25em;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .bracket_and_formula .text_size{font-size:2.5em;color:#e1492b}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .bracket_and_formula .text_with_fraction{position:relative}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .bracket_and_formula .text_with_fraction:after{content:"";position:absolute;left:100%;top:-35%;display:block;width:1.47367em;height:2.26313em;background:url(resources/wood/images/icon_fraction.png) no-repeat;background-size:100% 100%}.exam_skin_wood .circleareaderived_wrapper .circle_open .cp_right_area .bracket_and_formula .text_indent{margin-left:1.47367em}.exam_skin_wood .circleareaderived_wrapper .circle_over{padding-top:.83333em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_left_area,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area{display:inline-block;height:28.25em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_left_area:after,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_left_area .cv_left_svg,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_left_area .cv_right_text,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_left_svg,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text{display:inline-block;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_left_area{position:absolute;left:6.25em;max-width:40.875em;min-width:37.5em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_left_area .cv_left_svg svg{display:block}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area{position:absolute;right:1.45833em;min-width:25.16667em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text{min-width:24.16667em;height:24.16667em;background:rgba(87,143,184,.15);color:#333;border-radius:.41667em;white-space:nowrap;padding:0 2.91667em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .right_text_box{display:inline-block;vertical-align:middle}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .circle_area_formula{margin-bottom:2.5em;text-align:left}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .circle_area_formula.formula_line2{margin-bottom:5em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .circle_area_formula.formula_line3{margin-bottom:0}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow1,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow2{position:relative}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow1:after,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow2:after{content:"";position:absolute;top:1.25em;left:40%;display:block;height:.89655em;width:.74138em;background:url(resources/wood/images/icon_arrow.png) no-repeat;background-size:100% 100%;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow1 .text_equal1,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow1 .text_equal2,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow2 .text_equal1,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow2 .text_equal2{font-size:1.25em;position:absolute;left:36%;top:1.5em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow1 .text_equal2,.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow2 .text_equal2{left:10%}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_with_arrow2:after{left:0}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_red{color:#e1492b}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_big{font-size:3.95833em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_middle{font-size:2.41667em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_small{font-size:1.75em}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_sub{vertical-align:sub}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_sup{vertical-align:super}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_top2{position:relative}.exam_skin_wood .circleareaderived_wrapper .circle_over .cv_right_area .cv_right_text .text_top2:after{content:"2";font-size:.41667em;position:absolute;top:.83333em;right:-.83333em}.exam_skin_wood .circleareaderived_wrapper .ccd_action_bar{position:absolute;left:0;bottom:0;width:100%;padding:1em 2.08333em;text-align:center}.exam_skin_wood .circleareaderived_wrapper .ccd_action_bar:after,.exam_skin_wood .circleareaderived_wrapper .ccd_action_bar:before{content:"";position:absolute;top:-.66667em;width:5.16667em;height:5.33333em;background:url(resources/wood/images/mask.png) no-repeat;background-size:100% 100%}.exam_skin_wood .circleareaderived_wrapper .ccd_action_bar:before{left:0}.exam_skin_wood .circleareaderived_wrapper .ccd_action_bar:after{right:-.16667em;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.exam_skin_wood .circleareaderived_wrapper .ccd_action_bar .action_button_list{display:inline-block;height:100%;min-width:22.41667em;white-space:nowrap}.exam_skin_wood .circleareaderived_wrapper .circleareaderived_foot{position:absolute;left:0;bottom:0;height:5.75em;width:100%;background:#cfdee9;padding:0 4em;text-align:center;overflow:hidden}.exam_skin_wood .circleareaderived_wrapper .circle_size_list{display:inline-block;height:100%;min-width:33.33333em;padding-top:.04167em}.exam_skin_wood .circleareaderived_wrapper .circle_size_list .item,.exam_skin_wood .circleareaderived_wrapper .circle_size_list .reset{min-width:5.41667em;height:5.83333em;padding-top:.16667em;display:inline-block}.exam_skin_wood .circleareaderived_wrapper .circle_size_list .item.ui_btn_active,.exam_skin_wood .circleareaderived_wrapper .circle_size_list .item:active{background:url(resources/wood/images/bg_foot_item.png) no-repeat;background-size:100% 100%}.exam_skin_wood .circleareaderived_wrapper .circle_size_list .item_1 .tool_operate_img{background-position:0 0}.exam_skin_wood .circleareaderived_wrapper .circle_size_list .item_2 .tool_operate_img{background-position:0 -2.83333em}.exam_skin_wood .circleareaderived_wrapper .circle_size_list .reset{position:absolute;right:4.6em;top:0}.exam_skin_wood .circleareaderived_wrapper .popup-guide{position:absolute;top:52%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:57.5em;height:38.08333em;border-radius:.33333em;background-color:#edf1f4;text-align:center}.exam_skin_wood .circleareaderived_wrapper .popup-guide__title{text-align:center;font-size:1.66667em;padding:1.45833em}.exam_skin_wood .circleareaderived_wrapper .popup-guide__tip{text-align:center;font-size:1.04167em;padding:1.45833em}.exam_skin_wood .circleareaderived_wrapper .popup-guide__button{position:relative;width:12em;height:4.125em;line-height:4.125em;border-radius:.41667em;border:1px solid #397274;background:#f4f4f4}.exam_skin_wood .circleareaderived_wrapper .popup-guide__btntext{font-size:1.75833em!important}.exam_skin_wood .circleareaderived_wrapper .popup-guide-cnt{width:100%;height:100%}.exam_skin_wood .circleareaderived_wrapper .popup-guide__mask{position:absolute;top:0;left:0;right:0;bottom:0;background:#6e7b85;opacity:.4}.exam_skin_wood .circleareaderived_wrapper .content{display:inline-block;position:relative;width:44.91667em;height:23.33333em;border:2px solid #95b7d1;border-radius:.33333em;text-align:left;background:#b8cdde}.exam_skin_wood .circleareaderived_wrapper .content__img{display:inline-block;width:15.83333em;height:15.83333em;vertical-align:middle;margin-top:3.33333em;margin-left:1.66667em;background:url(resources/wood/images/circle.png) 50% no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .content__img_red{background:url(resources/wood/images/circle_on.png) 50% no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .formula{display:inline-block;position:absolute;-webkit-transform:translateY(-50%);transform:translateY(-50%);padding-left:2.5em;padding-right:1em;border-radius:.33333em;text-align:left;font-weight:700;cursor:pointer;background:rgba(87,143,184,.15)}.exam_skin_wood .circleareaderived_wrapper .formula__show-btn{position:absolute;bottom:.41667em;right:.41667em;width:3em;height:3em;background:url(resources/wood/images/one-key.png) center center no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .formula__show-btn:active{background:url(resources/wood/images/one-key-active.png) center center no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .formula__packup-btn{background:url(resources/wood/images/pack-up.png) center center no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .formula__packup-btn:active{background:url(resources/wood/images/pack-up-active.png) center center no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .circle_over__formula{right:2.08333em;top:42%;min-width:24.83333em;min-height:24.83333em}.exam_skin_wood .circleareaderived_wrapper .content__formula{right:2.08333em;top:50%;min-width:20.83333em;height:20.83333em}.exam_skin_wood .circleareaderived_wrapper .formula__item{padding-top:2.29167em}.exam_skin_wood .circleareaderived_wrapper .formula__item-last{margin-top:3.28333em}.exam_skin_wood .circleareaderived_wrapper .formula__hand{position:absolute;top:4.15em;left:2.61667em;width:5.04167em;height:3.70833em;background:url(resources/wood/images/hand.png) 50% no-repeat;background-size:65%;pointer-events:none;transition:all .5s ease-in .1s;transform:rotate(30deg)}.exam_skin_wood .circleareaderived_wrapper .formula__text{color:#1b5db7;font-size:3.33333em}.exam_skin_wood .circleareaderived_wrapper .formula__text:active{color:#e1492b}.exam_skin_wood .circleareaderived_wrapper .formula__text sub{font-size:.41667em}.exam_skin_wood .circleareaderived_wrapper .formula__equal{font-size:2.70833em}.exam_skin_wood .circleareaderived_wrapper .formula__right{display:inline-block;vertical-align:top}.exam_skin_wood .circleareaderived_wrapper .formula__right-special{margin-top:-.41666em}.exam_skin_wood .circleareaderived_wrapper .formula__question{display:inline-block;width:2.5em;height:2.5em;background:url(resources/wood/images/question_normal.png) 50% no-repeat;background-size:100%;margin-top:.85em}.exam_skin_wood .circleareaderived_wrapper .formula__question:active{background:url(resources/wood/images/question_click.png) 50% no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .formula__question-first{margin-top:.35em}.exam_skin_wood .circleareaderived_wrapper .textbo{position:relative}.exam_skin_wood .circleareaderived_wrapper .textbo:after{position:absolute;content:"";left:50%;bottom:-1.91667em;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:1.83333em;height:2.20833em;background:url(resources/wood/images/icon_arrow_s.png) 50% no-repeat;background-size:100%}.exam_skin_wood .circleareaderived_wrapper .textbo__text{font-size:2.5em;white-space:nowrap}.exam_skin_wood .circleareaderived_wrapper .textbo__text-big{font-size:4em;font-weight:500}.exam_skin_wood .circleareaderived_wrapper .textbo__text-big sup{display:inline-block;margin:.25em;vertical-align:super;font-size:.33333em;font-weight:600}.exam_skin_wood .circleareaderived_wrapper .formula__question-pos{position:absolute;bottom:-4.66667em;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}]]></css><view><![CDATA[<div class="exam_skin_wood"><div class="circleareaderived_wrapper @@studentClassName"><div class="circleareaderived_inner"><div class="circleareaderived_main _js_main_cnt"><div class="circle_over hide_dom _js_circle_over"><div class="formula circle_over__formula"><button class="formula__show-btn _js_formula__show"></button><div class="formula__item"><span class="formula__text nd_NewRoman_italic formula__text-red _js_formula">S<sub class="_js_sub_circle">圆</sub></span> <span class="formula__equal">=</span> <i class="formula__right"><i class="formula__question formula__question-first _js_question" data-question-index="1"></i> <span class="formula__text nd_NewRoman_italic hide_dom _js_parallelogram_shine">S<sub class="_js_sub_palle">长</sub></span></i></div><div class="formula__item hide_dom _js_formula__item-1"><span class="formula__text nd_NewRoman_italic formula__text-red _js_parallelogram_shine">S<sub class="_js_sub_palle">长</sub></span> <span class="formula__equal">=</span> <i class="formula__right formula__right-special"><i class="formula__question _js_question" data-question-index="2"></i> <span class="hide_dom formula__text-special"><span class="textbo"><span class="textbo__text _js_bottomedge_shine _js_boedgelen">底边长</span> <i class="formula__question formula__question-pos _js_question" data-question-index="3"></i> <span class="formula__question-pos hide_dom"><span class="textbo__text-big nd_NewRoman_italic _js_bigcurve_shine">πr</span> </span></span><span class="formula__equal">×</span> <span class="textbo"><span class="textbo__text-big nd_NewRoman_italic _js_height_shine">h</span> <i class="formula__question formula__question-pos _js_question" data-question-index="4"></i> <span class="formula__question-pos hide_dom"><span class="textbo__text-big nd_NewRoman_italic _js_radiu_shine">r</span></span></span></span></i></div><div class="formula__item hide_dom _js_formula__item-1 formula__item-last"><span class="formula__text nd_NewRoman_italic formula__text-red _js_formula">S<sub class="_js_sub_circle">圆</sub></span> <span class="formula__equal">=</span> <i class="formula__right formula__right-special"><i class="formula__question _js_question" data-question-index="5"></i> <span class="textbo__text-big nd_NewRoman_italic hide_dom _js_area">πr<sup>2</sup></span></i></div></div></div></div><div class="ccd_action_bar hide_dom _js_btn_cnt"><div class="action_button_list"><a href="javascript:;" class="com_btns btns-primary _js_open" data-btn="1"><span class="btns-primary-txt">展开</span> </a><a href="javascript:;" class="com_btns btns-primary _js_merge" data-btn="2"><span class="btns-primary-txt">组合</span> </a><a href="javascript:;" class="com_btns btns-primary _js_circleFomulate" data-btn="3"><span class="btns-primary-txt">公式推导</span></a></div></div></div><div class="circleareaderived_foot"><div class="circle_size_list _js_circle_size"><a href="javascript:;" class="item item_1" data-segn="8"><i class="tool_operate_img"></i> <span class="tool_operate_text">8份</span> </a><a href="javascript:;" class="item item_2" data-segn="12"><i class="tool_operate_img"></i> <span class="tool_operate_text">12份</span> </a><a href="javascript:;" class="item item_3" data-segn="16"><i class="tool_operate_img"></i> <span class="tool_operate_text">16份</span> </a><a href="javascript:;" class="item item_4" data-segn="24"><i class="tool_operate_img"></i> <span class="tool_operate_text">24份</span> </a><a href="javascript:;" class="item item_5" data-segn="32"><i class="tool_operate_img"></i> <span class="tool_operate_text">32份</span> </a><a href="javascript:;" class="item item_6" data-segn="128" id="item_6"><i class="tool_operate_img"></i> <span class="tool_operate_text">128份</span> </a><a href="javascript:;" class="tool_operate_bar reset"><span class="tool_operate_imgcnt"><i class="tool_operate_icon tool_reset"></i> </span><span class="tool_operate_text _js_reset">重置</span></a></div></div><div class="popup-guide-cnt hide_dom _js_popup-guide"><div class="popup-guide__mask"></div><div class="popup-guide"><h3 class="popup-guide__title _js_operate_guide">操作引导</h3><div class="content popup-guide__content"><div class="content__img _js_content__img"></div><div class="formula content__formula"><div class="formula__hand _js_formula__hand"></div><div class="formula__item"><span class="formula__text nd_NewRoman_italic formula__text-red _js_formula">S<sub class="_js_sub_circle">圆</sub></span> <span class="formula__equal">=</span> <i class="formula__right"><i class="formula__question formula__question-first _js_question1" data-question-index="1"></i> <span class="formula__text nd_NewRoman_italic hide_dom">S<sub class="_js_sub_palle">长</sub></span></i></div></div></div><p class="popup-guide__tip _js_click_tips">点击公式高亮对应的图形</p><button class="popup-guide__button _js_i_know com_btns btns-primary"><span class="btns-primary-txt popup-guide__btntext">我知道了</span></button></div></div></div><svg class="hide_dom"><g fill="#e1492b" id="bottom_formula_group-en"><text class="font_weight text_farmily _js_boedgelen" x="-100" y="0">底边长</text><text class="font_weight text_farmily" x="420" y="0">=</text><text class="text_farmily _js_question" x="510" y="0">?</text><g display="none" id="bottom_formula"><text class="text_farmily" x="510" y="0"><tspan dy="-40" dx="0">1</tspan><tspan dy="0" rotate="90" dx="-45">|</tspan><tspan dy="90" dx="-28">2</tspan></text><text class="font_style text_farmily" x="600" y="0">C</text><text class="font_weight text_farmily" x="660" y="0">=</text><text class="text_farmily text_farmily" x="750" y="0"><tspan dy="-40" dx="0">1</tspan><tspan dy="0" rotate="90" dx="-45">|</tspan><tspan dy="90" dx="-28">2</tspan></text><text class="font_weight text_farmily" x="830" y="0">×</text><text class="text_farmily" x="890" y="0">2</text><text class="font_style text_farmily" style="font-size: 113.222px" x="940" y="0">πr</text><text class="font_weight text_farmily" x="1040" y="0">=</text><text class="font_style text_farmily" style="font-size: 113.222px" x="1110" y="0">πr</text></g></g><g fill="#e1492b" id="bottom_formula_group"><text class="text_farmily font_weight _js_boedgelen" style="font-weight: 600" x="0" y="0">底边长</text><text class="font_weight text_farmily" x="260" y="0">=</text><text class="text_farmily _js_question" x="350" y="0">?</text><g display="none" id="bottom_formula"><text class="text_farmily" x="350" y="0"><tspan dy="-40" dx="0">1</tspan><tspan dy="0" rotate="90" dx="-45">|</tspan><tspan dy="90" dx="-28">2</tspan></text><text class="font_style text_farmily" x="440" y="0">C</text><text class="font_weight text_farmily" x="500" y="0">=</text><text class="text_farmily text_farmily" x="590" y="0"><tspan dy="-40" dx="0">1</tspan><tspan dy="0" rotate="90" dx="-45">|</tspan><tspan dy="90" dx="-28">2</tspan></text><text class="font_weight text_farmily" x="670" y="0">×</text><text class="text_farmily" x="730" y="0">2</text><text class="font_style text_farmily" style="font-size: 113.222px" x="780" y="0">πr</text><text class="font_weight text_farmily" x="880" y="0">=</text><text class="font_style text_farmily" style="font-size: 113.222px" x="950" y="0">πr</text></g></g><g fill="#de00ff" id="height_equal_radiu_group" transform="matrix(1, 0, 0, 1, -130, 260)"><text class="text_farmily font_style" style="font-size: 113.222px" x="0" y="0">h</text><text class="font_weight text_farmily" x="67" y="0">=</text><text class="text_farmily _js_question" x="140" y="0">?</text><text class="text_farmily font_style" id="height_radiu" style="font-size: 113.222px; display: none" x="140" y="0">r</text></g></svg></div>]]></view><presenter><![CDATA[(function () {
  var Presenter = BasicPresenter.extend({
    metaInfo: {
      name: 'CircleAreaDerived',
      type: '',
      subtype: ''
    },
    /**
     * Presenter的初始化方法
     * @private
     */
    $init: function () {
      this._super()

      this.$view = null
      this.model = null
      this.controller = null

      this.i18n = null

      this.basePath = ''
    },
    /**
     * Presenter对外暴露的方法
     */
    _service_: {
      constructor: function (parent) {
        this.parent = parent
      },
      getExtendData: function () {
        var options = {}
        options = this.parent.controller.getSegState()
        return options
      },

      setLocationProperties: function (properties) {
        this.i18n = properties
      },

      getQuestionInfo: function () {
        return {
          id: this.parent.model.question_id || '',
          type_code: 'CircleAreaDerived',
          type_name: '圆面积公式推导',
          url: '',
          noExistStatistics: true,
          noNeedQuizProgress: true
        }
      }
    },
    setBasePath: function (path) {
      var self = this
      self.basePath = path
    },
    getService: function () {
      var self = this
      self._service_.constructor(self)
      return self._service_
    },
    /** **以下开始为icPlayer的生命周期方法*****/
    run: function (view, model) {
      var self = this
      self.$view = $(view)
      self.model = model

      self.i18n = self._service_.i18n
      var langType = self.currentLanguage
      var $deferred = $.Deferred()


      require(['Controller'], function (Controller) {
        self.controller = Controller.init(self.$view, model, self.basePath, self.i18n, langType);
      }).then(function () {
        $deferred.resolve()
      })
    },
    pageShow: function () {},
    pageLeave: function () {},
    destroy: function () {
      this.controller.destroy()
    },
    /** 如果不需要处理icplayer的状态恢复事件, 请将以下两个方法删除掉**/
    getState: function () {

    },
    setState: function (state, options) {

    }
  })
  window.AddonCircleAreaDerived_create = function () {
    return new Presenter()
  }
})()

define('AnimateView', ['GeometricCalcul', 'SvgElement'],
  function (GeometricCalcul, svgEle) {
    var n = 8
    var RADIU = 500
    var basePath = null
    var a, b

    var coordArray = GeometricCalcul.getCoordinate(n, RADIU)
    var transInfo = GeometricCalcul.getTrxRotA(n, RADIU) // 每个扇形的旋转角度和平移距离
    // svg DOM对象
    var paper = null,
      initCircle = null,
      centerP = null,
      segR = null,
      segRDash = null,
      letterR = null,
      bigSegCurve = null,
      segCurve = null,
      $redCirclec = null,
      $bottomFormula = null,
      $heightEqualRadiu = null,
      $bigSegCurvec = null,
      $segRc = null,
      $segSectorLight = null

    // 首页加载时svg对象容器
    var initView = null
    var initState = null
    var sectorgA = []
    var curveA = []
    var curveBigA = []

    var aniSclaleTransL = null // 往左平移并缩小
    var animateA = [] // 每个扇形变换动画器数组
    // 分母的水平位置dx
    var initR = 500,
      centerR = 17.5

    var bxA = {
      '8': -665,
      '12': -625,
      '16': -605,
      '24': -585,
      '32': -575,
      '128': -575
    }
    var PI = Math.PI
    // timeLine
    var initStateT = null,
      segT = [],
      segRDashT
    var formulaId = '#bottom_formula_group'

    var $view,
      model

    var isFirst = true

    function fadeIn($ele, t) {
      $ele.fadeTo(t, 0.4).fadeTo(t, 0.1).fadeTo(t, 0.5).fadeTo(t, 0)
    }

    function fadeOut($ele, t) {
      $ele.fadeTo(t, 0.2).fadeTo(t, 1).fadeTo(t, 0.2).fadeTo(t, 1)
    }
    var animateview = {
      create: function (_$view, _model, _path, _i18n_text, _langType) {
        var ins = Object.create(this)
        $view = _$view
        model = _model
        basePath = _path
        _$view.on('CHANGE_SEGNUM', function (type, _n) {
          n = _n || 8
          coordArray = GeometricCalcul.getCoordinate(n, RADIU)
          transInfo = GeometricCalcul.getTrxRotA(n, RADIU)
          a = RADIU * 2 * Math.sin(PI / n)
          b = RADIU * (1 - Math.cos(PI / n))
        })
        if (_langType === 'en_us') {
          formulaId = '#bottom_formula_group-en'
        }
        isFirst = true        
        return ins
      },
      destroy: function () {
        isFirst = true
        this.clear()
        this.animateClear()
      },
      clear: function () {
        $view.find('._js_circle_over').addClass('hide_dom')
        $view.find('#segCloneSecGc').remove()
        $bottomFormula.hide()
        $heightEqualRadiu.hide()
        paper.removeShape(initState)
        bigSegCurve = null
        initState = null
        sectorgA = []
        curveA = []
        curveBigA = []
        aniSclaleTransL = null
        animateA = []
      },
      animateClear: function () {
        if (initStateT) {
          initStateT.stop()
        }
        if (segRDashT) {
          segRDashT.stop().off('finish')
        }
        if (segT) {
          segT.forEach(function (item) {
            item.stop()
          })
        }
      },
      reset: function () {
        initView = new kity.Group().setId('initView')
        initCircle = new kity.Circle(RADIU).pipe(function () {
          this.fill('#efe984')
          this.stroke('#6c8395', '0.533em')
        })
        centerP = new kity.Circle(centerR).pipe(function () {
          this.fill('#de00ff')
        }).setId('centerP')
        // 圆半径
        segR = svgEle.getSegLine(0, 0, RADIU, 0, 22, '#de00ff').setId('segR')
        // 半径字母r
        letterR = new kity.Text('r').fill('#de00ff').setId('letterR')
          .setPosition(150, -30)
          .setFontSize('265px')
        initView.addShapes([initCircle, centerP, segR, letterR])
        paper.addShape(initView)
      },
      render: function () {
        var svgCnt = $view.find('._js_main_cnt')[0]
        paper = new kity.Paper(svgCnt).pipe(function () {
          this.setWidth('100%').setHeight('100%')
          this.setViewBox(-600, -600, 1200, 1200)
        })
        this.reset()

        $bottomFormula = $view.find(formulaId).hide()
        $heightEqualRadiu = $view.find('#height_equal_radiu_group').hide()
        $(paper.getNode()).append($bottomFormula, $heightEqualRadiu)
      },
      /**
       * [_getCurFomuRedy 初始化圆弧和公式文本]
       */
      getCurFomuRedy: function () {
        var cA = coordArray
        //高亮圆
        redCircle = new kity.Circle(RADIU).pipe(function () {
          this.fill('#fff')
        }).setId('redCircle')
        redCircle.setVisible(false)

        curveA = cA.map(function (item, i, array) {
          var segCurve
          if (i === n - 1) {
            segCurve = svgEle.getCurve(RADIU, item.x, item.y, array[0].x, array[0].y, 12, '#e1492b')
          } else {
            segCurve = svgEle.getCurve(RADIU, item.x, item.y, array[i + 1].x, array[i + 1].y, 12, '#e1492b')
          }
          segCurve.setVisible(false)
          if (n < 12) {
            // segCurve.setAttr('filter', 'url(#filter)')
          }
          return segCurve
        })
      },
      /**
       * [_initNumState 初始化状态]
       */
      initNumState: function () {
        this.clear()
        var cA = coordArray
        paper.removeShape(initView)
        sectorgA = []
        initState = null
        initState = new kity.Group().setId('initState')
        this.getCurFomuRedy()
        // 画扇形
        var lineW = n > 24 ? 1 : '0.333em',
          segSector = null,
          segSectorLight = null,
          segNum = null
        sectorgA = cA.map(function (item, index, array) {
          var fill = index < n / 2 ? '#efe984' : '#4bc7ec'
          var segCnt = new kity.Group()
          if (index === n - 1) {
            segSectorLight = svgEle.getSegSector(RADIU, 0, 0, item.x, item.y, array[0].x, array[0].y, lineW, '#fff', '#fff')            
            segSector = svgEle.getSegSector(RADIU, 0, 0, item.x, item.y, array[0].x, array[0].y, lineW, fill)
          } else {
            segSectorLight = svgEle.getSegSector(RADIU, 0, 0, item.x, item.y, array[index + 1].x, array[index + 1].y, lineW, '#fff', '#fff')            
            segSector = svgEle.getSegSector(RADIU, 0, 0, item.x, item.y, array[index + 1].x, array[index + 1].y, lineW, fill)
          }
          if (n < 24) {
            // 逆转长度大于1的数字
            var reverseNum = ((index + 1) + n / 2)
            if (reverseNum.toString().length > 1) {
              reverseNum = reverseNum.toString().split('').reverse().join('')
            }
            segNum = index < n / 2 ? svgEle.getNumText(reverseNum, segSector, 'rotate(180,' + 0 + ',' + 0 + ')', 970) : svgEle.getNumText((index + 1) - n / 2, segSector, 'rotate(0,0,0)', 155)
            segCnt.addShapes([segSector, segNum])
          } else {
            segCnt.addShape(segSector)
          }
          
          segSectorLight.node.setAttribute('class', 'segSectorLight')
          segSectorLight.setVisible(false)
          segCnt.addShapes([curveA[index], segSectorLight])
          initState.addShape(segCnt)
          return segCnt
        })
        // sectorgA.unshift(sectorgA.pop())
        // 半圆弧
        bigSegCurve = svgEle.getCurve(RADIU, cA[0].x + 5, cA[0].y, cA[n / 2].x - 5, cA[n / 2].y, 12, '#e1492b').setId('bigSegCurve')
        bigSegCurve.setVisible(false)
        // bigSegCurve.setAttr('filter', 'url(#filter)')
        // 扇形分割虚线
        segRDash = svgEle.getDashLine(n, RADIU, 0, 0, 10, '#de00ff').setVisible(false).setId('segRDash')
        svgEle.setVisible([centerP, segR, letterR], true)
        initState.addShapes([centerP, segR, letterR, segRDash, bigSegCurve, redCircle])
        paper.addShape(initState)
      },
      /**
       * [_openSetPos 对展开平移组合直接设置坐标]
       * @param  {[type]} step3 [跳到平移]
       * @param  {[type]} step4 [跳到组合]
       */
      openSetPos: function () {
        var self = this
        var posX = 2.5 * RADIU - 800
        initState.setMatrix(new kity.Matrix(0.8, 0, 0, 0.8, -800, -150))
        this.openCallback()
        initState.setMatrix(new kity.Matrix(0.8, 0, 0, 0.8, posX, -150))
        sectorgA.forEach(function (item, index, array) {
          var θ = transInfo.Rota[index]
          item.setMatrix(new kity.Matrix(Math.cos(θ), Math.sin(θ), -Math.sin(θ), Math.cos(θ), transInfo.trax[index], 0))
          self.dashCurveSetPos(index, θ)
        })
      },
      mergeSetPos: function () {
        var self = this
        sectorgA.forEach(function (item, index, array) {
          var θ = transInfo.Rota[index]
          var tranX = (index > n / 2 - 1) ? a / 2 : 0
          var tranY = (index < n / 2) ? -RADIU / 2 + b / 2 : RADIU / 2 - b * 2 / 3
          item.setMatrix(new kity.Matrix(Math.cos(θ), Math.sin(θ), -Math.sin(θ), Math.cos(θ), transInfo.trax[index] + tranX, 0 + tranY))
          self.dashCurveSetPos(index, θ)
        })
      },
      dashCurveSetPos: function (i, θ) {
        if (i === n - 1) {
          segRDash.setMatrix(new kity.Matrix(Math.cos(θ), Math.sin(θ), -Math.sin(θ), Math.cos(θ), a / 2 + transInfo.trax[i], RADIU / 2 - b / 2))
        }
      },
      /**
       * [_openAnimaReady 创建展开步骤要用到的动画器]
       */
      openAnimaReady: function () {
        animateA = []
        aniSclaleTransL = []
        // 往左边平移，并缩小
        aniSclaleTransL = new kity.Animator(new kity.Matrix(1, 0, 0, 1, 0, 0),
          new kity.Matrix(0.8, 0, 0, 0.8, -800, -150),
          function (target, value) {
            target.setMatrix(value)
          })
        for (var i = 0; i < n; i++) {
          var θ = transInfo.Rota[i]
          animateA.push(new kity.Animator(new kity.Matrix(1, 0, 0, 1, 0, 0),
            new kity.Matrix(Math.cos(θ), Math.sin(θ), -Math.sin(θ), Math.cos(θ), transInfo.trax[i], 0),
            function (target, value) {
              target.setMatrix(value)
            }))
        }
      },
      /**
       * [_openCallback 往右平移缩小后回调，主要用于复制当前状态]
       */
      openCallback: function () {
        // 箭头出现
        var arrow = new kity.Image(basePath + '/resources/wood/images/icon_arrow.png', 330, 180, 480, -90).setId('arrow');
        initState.addShape(arrow)
        var segCloneSecG = $(initState.getNode()).clone()[0]
        segCloneSecG.id = 'segCloneSecGc';
        [].slice.call(segCloneSecG.childNodes).forEach(function (item, ind) {
          var pathDom = item.childNodes[0]
          var textPathDom = $(item).find('textPath')[1]
          if (textPathDom !== undefined) {
            var textPaId = textPathDom.id.split('_')[2] - 2
            textPathDom.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '#kity_path_' + textPaId + 'c')
          }
          pathDom && (pathDom.id = pathDom.id + 'c')
          item && (item.id = item.id + 'c')
        })
        $(paper.getNode()).append(segCloneSecG)
        svgEle.setVisible([centerP, segR, letterR, arrow], false)
      },
      /**
       * [_openStart 启动动画]
       * @return {[type]}    [description]
       */
      openStart: function (t1, t2, t3) {
        this.openAnimaReady()
        $view.trigger('ANIMATE_STATE_CHANGE.CIRCLEAREADERIVED', true)
        segT = []
        $view.find('._js_open').siblings().addClass('click_disabled')
        initStateT = aniSclaleTransL.start(initState, t1 || 0, 'ease', 0, this.openCallback.bind(this))
        initState.fxTranslate(2.5 * RADIU, 0, t2 || 0, 'ease', t1)
        sectorgA.forEach(function (item, index, array) {
          segT[index] = animateA[index].start(item, t3 || 0, 'ease', t1 + t2)
          if (index === n - 1) {
            segRDashT = animateA[index].start(segRDash, t3 || 0, 'ease', t1 + t2, function () {
              $view.trigger('ANIMATE_STATE_CHANGE.CIRCLEAREADERIVED', false)
              $view.find('._js_open').siblings().removeClass('click_disabled')
            })
          }
        })
      },
      /**
       * [_transx 上半部分往右平移]
       * @param  {[type]} t [description]
       */
      merge: function (t) {
        var self = this
        $view.trigger('ANIMATE_STATE_CHANGE.CIRCLEAREADERIVED', true)
        segT = []
        $view.find('._js_merge').siblings().addClass('click_disabled')
        sectorgA.slice(n / 2, n).forEach(function (item, index, array) {
          segT[index] = item.fxTranslate(a / 2, 0, t || 0, 'ease', 0, function () {
            if (index === n / 2 - 1) {
              self.mergeStart(t)
            }
          })
        })
      },
      /**
       * [_merge 组合动画]
       */
      mergeStart: function (t) {
        var self = this
        var transY = 0
        var b = initR * (1 - Math.cos(Math.PI / n))
        segT = []
        segRDash.fxTranslate(0, 0, t)
        sectorgA.forEach(function (item, index, array) {
          transY = index < array.length / 2 ? -initR / 2 + b / 2 : initR / 2 - b * 2 / 3
          segT[index] = item.fxTranslate(0, transY, t || 0, 'ease', 0, function () {
            $view.find('._js_merge').siblings().removeClass('click_disabled')
            $view.trigger('ANIMATE_STATE_CHANGE.CIRCLEAREADERIVED', false)
          })
        })
      },
      circleFomulate: function () {
        $view.find('._js_circle_over').removeClass('hide_dom')
        var gEle = $view.find('#initState g')
        gEle.eq(n / 2).insertBefore(gEle.eq(n / 2 - 1))
        var x1 = bxA[n] + 535
        var x2 = bxA[n] + -525
        $heightEqualRadiu[0].setAttribute('transform', 'matrix(1, 0, 0, 1,' + x1 + ',260)')
        $bottomFormula[0].setAttribute('transform', 'matrix(1, 0, 0, 1,' + x2 + ',460)')
        $view.find('#segCloneSecGc')[0].setAttribute('transform', 'matrix(0.55, 0, 0, 0.55,-550, -300)')
        $view.find('#initState')[0].setAttribute('transform', 'matrix( 0.6 0 0 0.6 ' + bxA[n] + ' 170 )')

        $view.find('#arrowc').hide()
        $redCirclec = $view.find('#redCirclec').hide()

        $segSectorLight = $view.find('#initState .segSectorLight')
        
        $bigSegCurvec = $view.find('#bigSegCurvec').hide()
        $segRc = $view.find('#segRc')

        svgEle.setVisible(segRDash, true)
        $(segRDash.node).fadeOut(0)

        if (isFirst) {
          this.createCustomEvent()
          isFirst = false
        }
      },
      createCustomEvent: function () {
        var t = 400
        $view.on('CIRCLE_SHINE.CIRCLEAREADERIVED', function (type) {
          $redCirclec.finish()
          fadeIn($redCirclec, t)
        })

        $view.on('PARALLELOGRAM_SHINE.CIRCLEAREADERIVED', function (type, isDirectShow) {
          $segSectorLight.finish()          
          if (!isDirectShow) {
            fadeIn($segSectorLight, t)
          }
        })

        $view.on('BOTTOMEDGE_SHINE.CIRCLEAREADERIVED', function (type, isDirectShow) {
          curveA.slice(0, n / 2).forEach(function (item, index) {
            $(item.node).finish()
            if (isDirectShow) {
              $(item.node).show()
            } else {
              fadeOut($(item.node), t)
            }
          })
        })

        $view.on('FORMULA_QUESTION_SHOW.CIRCLEAREADERIVED', function (type, isDirectShow) {
          curveA.slice(0, n / 2).forEach(function (item, index) {
            if (isDirectShow) {
              $(item.node).show()
            } else {
              fadeOut($(item.node), t)
            }
          })
          if (isDirectShow) {
            $(segRDash.node).show()
          } else {
            fadeOut($(segRDash.node), t)
          }
          $bottomFormula.show()
          $heightEqualRadiu.show()

        })

        $view.on('HEIGHT_SHINE.CIRCLEAREADERIVED', function (type) {
          $(segRDash.node).finish()
          fadeOut($(segRDash.node), t)
        })

        $view.on('RADIU_SHINE.CIRCLEAREADERIVED', function (type) {
          $segRc.finish()
          fadeOut($segRc, t)
        })

        $view.on('BIGCURVE_SHINE.CIRCLEAREADERIVED', function (type) {
          $bigSegCurvec.finish()
          fadeOut($bigSegCurvec, t)
        })

        $view.on('SHOW_BIGCURVE.CIRCLEAREADERIVED', function (type, isDirectShow) {
          if (isDirectShow) {
            $bigSegCurvec.show()
          } else {
            fadeOut($bigSegCurvec, t)
          }

          $bottomFormula.find('._js_question').hide()
          $bottomFormula.find('#bottom_formula').show()
        })
        $view.on('SHOW_RADIU.CIRCLEAREADERIVED', function (type, isDirectShow) {
          if (isDirectShow) {
            $segRc.show()
          } else {
            fadeOut($segRc, t)
          }
          $heightEqualRadiu.find('._js_question').hide()
          $heightEqualRadiu.find('#height_radiu').show()
        })

        $view.on('CIRCLE_RESET.CIRCLEAREADERIVED', function (type) {
          $bigSegCurvec.hide()
          $heightEqualRadiu.hide()
          $bottomFormula.hide()
          $(segRDash.node).hide()
          $heightEqualRadiu.find('._js_question').show()
          $heightEqualRadiu.find('#height_radiu').hide()
          $bottomFormula.find('._js_question').show()
          $bottomFormula.find('#bottom_formula').hide()
          curveA.slice(0, n / 2).forEach(function (item, index) {
            $(item.node).hide()
          })
        })

        $view.on('SHOW_ALL.CIRCLEAREADERIVED', function (type) {
          $bigSegCurvec.show()
          $heightEqualRadiu.show()
          $bottomFormula.show()
          $(segRDash.node).show()
          $heightEqualRadiu.find('._js_question').hide()
          $heightEqualRadiu.find('#height_radiu').show()
          $bottomFormula.find('._js_question').hide()
          $bottomFormula.find('#bottom_formula').show()
          curveA.slice(0, n / 2).forEach(function (item, index) {
            $(item.node).show()
          })
        })
      }
    }
    return animateview
  })

define('Controller', [
  'AnimateView', 'Guide', 'Formula'
], function (AnimateView, Guide, Formula) {
  var clickFuns = [],
    backClickFuns = [],
    segLastState = -1,
    currentState = -1,
    isAnimate = false,
    segN = 0,
    formulaState = 0,
    isGuideShow = false,
    guideShowOne = false,
    guideShowTwo = false


  var $view, i18n
  var ins = {}

  // [{fn:function(){},args:[],scope:this}]
  function runFunctionSeq(fns, seqs) {
    if (typeof seqs === 'number') seqs = [seqs]
    seqs.forEach(function (seq) {
      var item = fns[seq]
      var callArgs = item.args || arguments
      if (typeof item.fn === 'function') {
        item.fn.apply(item.scope || window, callArgs)
      }
    });
  }

  function bindEvent() {
    $view.on('click touchStart', '._js_btn_cnt a', function (e) {
      e.preventDefault()
      if ($(e.currentTarget).hasClass('ui_btn_active') || isAnimate) {
        return
      } else {
        $(e.currentTarget).addClass('ui_btn_active').siblings().removeClass('ui_btn_active')
        var btnNum = $(e.currentTarget).data('btn')
        currentState = btnNum
        derivedHandler()
        if (btnNum < 3) {
          $view.trigger('OPEN_MERGE_CLICK')
        }
        segLastState = btnNum
      }
    })
    segChooseHandler()
    resetEvent()
  }

  function segChooseHandler() {
    $view.on('click touchStart', '._js_circle_size .item', function (e) {
      e.preventDefault()
      var target = $(e.currentTarget)
      if (target.hasClass('ui_btn_active')) {
        return
      } else {
        if (isAnimate) {
          ins.animateClear()
        }
        segLastState = -1
        if (currentState === -1) currentState = 0
        target.addClass('ui_btn_active').siblings().removeClass('ui_btn_active')
        $view.find('._js_btn_cnt').removeClass('hide_dom')
        segN = target.data('segn')
        $view.trigger('CHANGE_SEGNUM', segN)
        derivedHandler({
          'isAnimate': isAnimate
        })
        Formula.render({'formulaState': formulaState})

      }
    })
  }

  function resetEvent() {
    $view.on('click touchStart', '._js_circle_size .reset', function (e) {
      e.preventDefault()
      if (segN === 0) return
      ins.clear && ins.clear()
      ins.animateClear && ins.animateClear()
      ins.reset && ins.reset()

      $(e.currentTarget).siblings().removeClass('ui_btn_active')
      $view.find('._js_btn_cnt').addClass('hide_dom').find('a').removeClass('ui_btn_active click_disabled')
      segLastState = -1
      currentState = -1
      isAnimate = false
      segN = 0
      formulaState = 0
      $view.trigger('OPEN_MERGE_CLICK')
    })
  }

  function unbindEvent() {
    $view.find('._js_btn_cnt a').off('click touchStart')
    $view.find('._js_circle_size a').off('click touchStart')
  }

  function derivedHandler(obj) {
    if (currentState < segLastState) {
      if (currentState === 1) {
        runFunctionSeq(clickFuns, [0, 1])
      } else {
        runFunctionSeq(backClickFuns, [0, 1])
        runFunctionSeq(clickFuns, 2)
      }
    } else {
      for (var j = segLastState + 1; j <= currentState; j++) {
        if (obj) {
          if (obj.isAnimate) {
            if (j < currentState) {
              runFunctionSeq(backClickFuns, j)
            } else {
              runFunctionSeq(clickFuns, j)
            }
          } else {
            runFunctionSeq(backClickFuns, j)
          }
          continue
        }
        if (j < currentState) {
          runFunctionSeq(backClickFuns, j)
        } else {
          runFunctionSeq(clickFuns, j)
        }
      }
    }
    segLastState = currentState
  }

  function i18nRender() {
    i18n.open_btn && $view.find('._js_open span').text(i18n.open_btn)
    i18n.merge_btn && $view.find('._js_merge span').text(i18n.merge_btn)
    i18n.circlearea_btn && $view.find('._js_circleFomulate span').text(i18n.circlearea_btn)
    i18n.reset && $view.find('._js_reset').text(i18n.reset)
    i18n.operate_guide && $view.find('._js_operate_guide').text(i18n.operate_guide)
    i18n.click_tips && $view.find('._js_click_tips').text(i18n.click_tips)
    i18n.i_know && $view.find('._js_i_know span').text(i18n.i_know)
    i18n.bo_parallelogram && $view.find('._js_sub_palle').text(i18n.bo_parallelogram)
    i18n.bo_circle && $view.find('._js_sub_circle').text(i18n.bo_circle)
    i18n.bo_length && $view.find('._js_boedgelen').text(i18n.bo_length)
    $view.find('.item .tool_operate_text').each(function (i, item) {
      i18n.unit && $(item).text(parseInt($(item).text()) + i18n.unit)
    })
  }

  function stateRecover(obj) {
    if (obj.segN > 0) {
      $view.trigger('CHANGE_SEGNUM', obj.segN)
      if (obj.currentState >= 0) {
        var index = obj.currentState !== 0 ? obj.currentState : 100
        $view.find('._js_btn_cnt').removeClass('hide_dom')
            .find('a').removeClass('ui_btn_active')
            .eq(index - 1).addClass('ui_btn_active')
        
        currentState = obj.currentState
        segLastState = -1
        derivedHandler(obj)
        if (currentState === 3) {
          Formula.render(obj)
          // Guide.render(obj)
        }
      }
      $.each($('._js_circle_size a'), function (i, ele) {
        if ($(ele).data('segn') === (obj.segN || 8)) {
          $(ele).addClass('ui_btn_active')
        }
      })
      segN = obj.segN
      formulaState = obj.formulaState
    }

  }

  var controller = {
    init: function (_$view, _model, _path, _i18n, _langType) {
      $view = _$view
      i18n = _i18n
      i18nRender()

      $view.on('ANIMATE_STATE_CHANGE.CIRCLEAREADERIVED', function (type, value) {
        isAnimate = value
      })
      $view.on('FORMULA_STATE.CIRCLEAREADERIVED', function (type, value) {
        formulaState = value
      })
      $view.on('IS_GUIDE_SHOW.CIRCLEAREADERIVED', function (type, value) {
        isGuideShow = value
      })
      $view.on('GUIDE_SHOW_ONE.CIRCLEAREADERIVED', function (type, value) {
        guideShowOne = value
      })
      $view.on('GUIDE_SHOW_TWO.CIRCLEAREADERIVED', function (type, value) {
        guideShowTwo = value
      })

      ins = AnimateView.create(_$view, _model, _path, _i18n.bo_length, _langType)
      ins.render()
      Formula.init(_$view)

      clickFuns = [{
          fn: ins.initNumState,
          args: [],
          scope: ins
        },
        {
          fn: ins.openStart,
          args: [2000, 2000, 2000],
          scope: ins
        },
        {
          fn: ins.merge,
          args: [2000],
          scope: ins
        },
        {
          fn: ins.circleFomulate,
          args: [],
          scope: ins
        }
      ]
      backClickFuns = [{
          fn: ins.initNumState,
          args: [],
          scope: ins
        },
        {
          fn: ins.openSetPos,
          args: [],
          scope: ins
        },
        {
          fn: ins.mergeSetPos,
          args: [],
          scope: ins
        },
        {
          fn: ins.circleFomulate,
          args: [],
          scope: ins
        }
      ]
      bindEvent()
      // stateRecover({
      //   'currentState': 3,
      //   'formulaState': 6,
      //   'guideShowOne': false,
      //   'guideShowTwo': false,
      //   'isAnimate': true,
      //   'isGuideShow': false,
      //   'segN': 8,
      // })
      var isStudent = false
      if (_model.__ExtendModel && !$.isEmptyObject(_model.__ExtendModel)) {
        stateRecover(_model.__ExtendModel)
        isStudent = true
      }
      Guide.init(_$view, isStudent)
      
      return this
    },
    getSegState: function () {
      return {
        'segN': segN,
        'currentState': currentState,
        'isAnimate': isAnimate,
        'formulaState': formulaState,
        'isGuideShow': isGuideShow,
        'guideShowOne': guideShowOne,
        'guideShowTwo': guideShowTwo
      }
    },
    destroy: function () {
      $view.off()
      unbindEvent()
      Formula.destroy()
      Guide.destroy()
      ins.destroy()
      segLastState = -1
      currentState = -1
      segN = 0
      formulaState = 0
      isAnimate = false
    }

  }
  return controller
})

define('Formula', [], function () {
  var $view = null
  var questionDOM = null
  var formulaItemDOM = null
  var formulaShowDOM = null
  var isAdopt = false;

  function autoAdopt() {
    var mainCtnWidth = $view.find('._js_main_cnt').width()
    var boCnt = $view.find('.circle_over__formula')
    var boCntW = parseInt(boCnt.css('width'))
    var boCntFontSize = parseInt(boCnt.css('font-size'))
    while (boCntW > mainCtnWidth * 0.4) {
      boCntFontSize -= 0.5
      boCnt.css('font-size', boCntFontSize + 'px')
      boCntW = parseInt(boCnt.css('width'))
    }
  }

  function _questionEvent(index, isDirectShow) {
    switch (index) {
    case 1:
      formulaItemDOM.eq(1).removeClass('hide_dom')
      $view.trigger('PARALLELOGRAM_SHINE', isDirectShow)
      $view.trigger('FORMULA_STATE', 1)
      break
    case 2:
      $view.trigger('FORMULA_QUESTION_SHOW', isDirectShow)
      $view.trigger('FORMULA_STATE', 2)
      if (!isAdopt) {
        autoAdopt()
        isAdopt = true
      }
      break
    case 3:
      $view.trigger('SHOW_BIGCURVE', isDirectShow)
      $view.trigger('FORMULA_STATE', 3)
      if (questionDOM.eq(4).hasClass('hide_dom')) {
        formulaShowDOM.addClass('formula__packup-btn')
        
      }
      if (questionDOM.eq(3).hasClass('hide_dom')) {
        formulaItemDOM.eq(2).removeClass('hide_dom')
        $view.trigger('FORMULA_STATE', 4) 
      }
      break
    case 4:
      if (questionDOM.eq(2).hasClass('hide_dom')) {
        formulaItemDOM.eq(2).removeClass('hide_dom')
        $view.trigger('FORMULA_STATE', 4)
      } else {
        $view.trigger('FORMULA_STATE', 6)        
      }
      $view.trigger('SHOW_RADIU', isDirectShow)
      break
    case 5:
      if (questionDOM.eq(2).hasClass('hide_dom')) {
        formulaShowDOM.addClass('formula__packup-btn')
      }
      $view.trigger('FORMULA_STATE', 5)
      break
    default:

    }
  }

  function bindEvent() {
    questionDOM.on('click touchStart', function (e) {
      var $target = $(e.currentTarget)
      var questionIndex = $target.data('questionIndex')
      $target.addClass('hide_dom').next().removeClass('hide_dom')
      _questionEvent(questionIndex)
    })

    formulaShowDOM.on('click touchStart', function () {
      if (formulaShowDOM.hasClass('formula__packup-btn')) {
        formulaItemDOM.slice(1).addClass('hide_dom')
        questionDOM.removeClass('hide_dom').next().addClass('hide_dom')
        $(this).removeClass('formula__packup-btn')
        $view.trigger('CIRCLE_RESET')
        $view.trigger('FORMULA_STATE', 0)

      } else {
        formulaItemDOM.removeClass('hide_dom')
        questionDOM.addClass('hide_dom').next().removeClass('hide_dom')
        $(this).addClass('formula__packup-btn')
        $view.trigger('SHOW_ALL')
        $view.trigger('FORMULA_STATE', 5)
        if (!isAdopt) {
          autoAdopt()
          isAdopt = true
        }
      }
    })

    $view.on('click touchStart', '.circle_over__formula ._js_formula', function () {
      $view.trigger('CIRCLE_SHINE')
    })

    $view.on('click touchStart', '._js_parallelogram_shine', function () {
      $view.trigger('PARALLELOGRAM_SHINE')
    })

    $view.on('click touchStart', '._js_bottomedge_shine', function () {
      $view.trigger('BOTTOMEDGE_SHINE')
    })

    $view.on('click touchStart', '._js_height_shine', function () {
      $view.trigger('HEIGHT_SHINE')
    })

    $view.on('click touchStart', '._js_radiu_shine', function () {
      $view.trigger('RADIU_SHINE')
    })

    $view.on('click touchStart', '._js_bigcurve_shine', function () {
      $view.trigger('BIGCURVE_SHINE')
    })

    $view.on('click touchStart', '._js_area', function () {
      $view.trigger('CIRCLE_SHINE')
      $view.trigger('PARALLELOGRAM_SHINE')      
    })

    $view.on('OPEN_MERGE_CLICK.CIRCLEAREADERIVED', function () {
      if (!formulaShowDOM.hasClass('formula__packup-btn')) formulaShowDOM.addClass('formula__packup-btn')
      formulaShowDOM.trigger('click')
      $view.trigger('FORMULA_STATE', 0)
    })

  }

  function init(_$view) {
    $view = _$view
    formulaItemDOM = _$view.find('.circle_over__formula .formula__item')
    questionDOM = _$view.find('.formula ._js_question')
    formulaShowDOM = _$view.find('._js_formula__show')
    bindEvent()
  }

  function render(obj) {
    var state = obj.formulaState
    if (state === 0) return
    if (state === 5) {
      formulaItemDOM.removeClass('hide_dom')
      questionDOM.addClass('hide_dom').next().removeClass('hide_dom')
      formulaShowDOM.addClass('formula__packup-btn')
      $view.trigger('SHOW_ALL')
      return
    }
    if (state === 6) {
      formulaItemDOM.eq(1).removeClass('hide_dom')
      questionDOM.slice(0, 2).addClass('hide_dom').next().removeClass('hide_dom')
      questionDOM.eq(3).addClass('hide_dom').next().removeClass('hide_dom')
      $view.trigger('FORMULA_QUESTION_SHOW', true)
      $view.trigger('SHOW_RADIU', true)
      return
    }

    if (state < 5) {
      for (var i = 1; i <= state; i++) {
        questionDOM.eq(i - 1).addClass('hide_dom').next().removeClass('hide_dom')
        _questionEvent(i,  true)
      }
    }
  }

  function destroy() {
    questionDOM.off('click touchStart')
    formulaShowDOM.off('click touchStart')
    $view.off('click touchStart', '.circle_over__formula ._js_formula')
    $view.off('click touchStart', '_js_parallelogram_shine')
    $view.off('click touchStart', '_js_bottomedge_shine')
    $view.off('click touchStart', '_js_height_shine')
    $view.off('click touchStart', '_js_radiu_shine')
    $view.off('click touchStart', '_js_bigcurve_shine')
    $view = null
    questionDOM = null
    formulaItemDOM = null
    formulaShowDOM = null
  }
  return {
    init: init,
    render: render,
    destroy: destroy
  }
});

define('GeometricCalcul', [], function (require, factory) {
  var geometricCalcul = {
    /**
     * [getCoordinate 计算等分点的坐标]
     * @param  {[type]} num [等分数]
     * @param  {[type]} num [半径]
     * @return {[type]} object [坐标数组]
     */
    getCoordinate: function (n, radiu) {
      var r = radiu,
        degN = 360 / n

      var coordArray = []
      for (var i = 0; i < n; i++) {
        var rad = (degN * i / 360) * 2 * Math.PI;
        coordArray[i] = {
          'x': r * Math.cos(rad),
          'y': r * Math.sin(rad)
        }
      }
      return coordArray
    },
    /**
     * [getTrxRotA 计算每个分割扇形的旋转角度与平移距离]
     */
    getTrxRotA: function (n, radiu) {
      var rotaDegA = [],
        transxA = [],
        a = radiu * 2 * Math.sin(Math.PI / n) // 8>---->1.05
      for (var i = 0; i < n / 2; i++) {
        if (i < n / 4) {
          rotaDegA[i] = rotaDegA[i + n / 2] = (90 - (i * 360 / n + 360 / (2 * n))) * Math.PI / 180
          transxA[i] = transxA[n - 1 - i] = a * n / 4 - (i * a + a / 2)
        } else {
          rotaDegA[i] = rotaDegA[i + n / 2] = -((i * 360 / n + 360 / (2 * n)) - 90) * Math.PI / 180
          transxA[i] = transxA[n - 1 - i] = -((i + 1 - n / 4) * a - a / 2)
        }
      }
      return {
        'trax': transxA,
        'Rota': rotaDegA
      }
    }

  }

  return geometricCalcul
})

define('Guide', [ ], function() {
  'use strict'
    
  var isShowed = false
  var $view = null
  function bindEvent (_$view, isStudent) {
    $view = _$view
    isShowed = isStudent
    $view.on('click touchStart', '._js_circleFomulate', function (e) {
      if ($(e.currentTarget).hasClass('click_disabled')) return
      if (!isShowed) {
        $view.find('._js_popup-guide').removeClass('hide_dom')
        $view.trigger('IS_GUIDE_SHOW', true)
        isShowed = true
      }
    })

    $view.on('click touchStart', '._js_i_know', function (e) {
      $view.find('._js_popup-guide').addClass('hide_dom') 
      $view.trigger('IS_GUIDE_SHOW', false) 
    })

    $view.on('click touchStart', '._js_formula', function (e) {
      $view.find('._js_content__img').addClass('content__img_red')
      var subWidth = $view.find('._js_sub_circle').width()

      $view.find('._js_formula__hand').css({
        'top': '4.15em',
        'left': 8 + (subWidth - 20) / 24 + 'em'
      })
      $view.trigger('GUIDE_SHOW_ONE', true)
    })

    $view.one('click touchStart', '._js_question1', function (e) {
      $(e.currentTarget).addClass('hide_dom').next().removeClass('hide_dom')   
      $view.find('._js_formula__hand').addClass('hide_dom')
      $view.trigger('GUIDE_SHOW_TWO', true)
    })
  }

  // function render (stateObj) {
  //   if(stateObj.segN > 0 && stateObj.currentState === 3 && stateObj.isGuideShow) {
  //     $view.find('._js_popup-guide').removeClass('hide_dom')
  //     isShowed = true
  //     if (stateObj.guideShowOne) {
  //       $view.find('._js_content__img').addClass('content__img_red')
  //       $view.find('._js_formula__hand').addClass('formula__hand-another')
  //     }
  //     if (stateObj.guideShowTwo) {
  //       $view.find('._js_question1').addClass('hide_dom').next().removeClass('hide_dom')   
  //       $view.find('._js_formula__hand').addClass('hide_dom')
  //     } 
  //   }
  // }
  function destroy () {
    // isShowed = false
    $view = null
  }
  return {
    'init': bindEvent,
    // 'render': render,
    'destroy': destroy
  } 

});

    
define('SvgElement', [], function (require, factory) {
  var svgElement = {
    getText: function (content, x, color, size, clas) {
      return new kity.Text(content).pipe(function () {
        this.setAttr('x', x)
        this.fill(color)
        this.setFontSize(size)
        this.addClass(clas)
      })
    },
    getSegLine: function (x0, y0, x1, y1, w, color) {
      var SegLine = kity.createClass('segLine', {
        base: kity.Path,
        constructor: function (x0, y0, x1, y1, w, color) {
          this.callBase()
          this.draw(x0, y0, x1, y1)
          this.stroke(color, w)
        },
        draw: function (x0, y0, x1, y1) {
          var d = this.getDrawer()
          d.moveTo(x0, y0)
          d.lineTo(x1, y1)
        }
      })
      return new SegLine(x0, y0, x1, y1, w, color)
    },
    getDashLine: function (n, radiu, x0, y0, w, color) {
      var dashX = radiu * Math.cos(Math.PI / n),
        dashY = -radiu * Math.sin(Math.PI / n),
        segRDash = new kity.Line(x0, y0, dashX, dashY).pipe(function () {
          this.setAttr('stroke-dasharray', '21,14')
          this.stroke(color, w) 
        })
      return segRDash
    },
    /**
     * [_getCurve 画圆弧]
     * @param  {[type]} w     [圆弧的线宽]
     */
    getCurve: function (radiu, x0, y0, x1, y1, w, color) {
      var SegCurve = kity.createClass('SegCurve', {
        base: kity.Path,
        constructor: function (x0, y0, x1, y1, w, color) {
          this.callBase()
          this.draw(x0, y0, x1, y1)
          this.stroke(color, w)
        },
        draw: function (x0, y0, x1, y1) {
          var d = this.getDrawer()
          d.moveTo(x0, y0)
          d.arcTo(radiu, radiu, 0, 0, 1, x1, y1)
        }
      })
      return new SegCurve(x0, y0, x1, y1, w, color)
    },
    /**
     * [_getNumText 返回一个数字kity对象]
     * @param  {[type]} num  [数字]
     * @param  {[type]} path [数字路径]
     * @param  {[type]} deg  [数字要旋转的角度]
     * @param  {[type]} dy   [description]
     * @return {[type]}      [description]
     */
    getNumText: function (num, path, deg, dy) {
      var segNumDom = new kity.Text(num)
      segNumDom.setFontSize('150px').setTextAnchor('middle').setPath(path).setStartOffset(0.5)
      segNumDom.setAttr('transform', deg)
      segNumDom.whenPaperReady(function () {
        segNumDom.node.setAttribute('dy', dy)
      })
      return segNumDom
    },
    /**
     * [_getSegSector 创建一个扇形kity对象]
     */
    getSegSector: function (radiu, x0, y0, x1, y1, x2, y2, w, color, stroke) {
      var SegSector = kity.createClass('SegSector', {
        base: kity.Path,
        constructor: function (x0, y0, x1, y1, x2, y2, w, color) {
          this.callBase()
          this.draw(x0, y0, x1, y1, x2, y2)
          this.stroke(stroke ||　'#6c8395', w)
          this.fill(color)
        },
        draw: function (x0, y0, x1, y1, x2, y2) {
          var d = this.getDrawer()
          d.moveTo(x0, y0)
          d.lineTo(x1, y1)
          d.arcTo(radiu, radiu, 0, 0, 1, x2, y2)
          d.close()
        }
      })
      return new SegSector(x0, y0, x1, y1, x2, y2, w, color)
    },
    setVisible: function (ele, bool) {
      if (Array.isArray(ele)) {
        ele.forEach(function (item) {
          item.setVisible(bool)
        })
      } else {
        ele.setVisible(bool)
      }
    }
  }
  return svgElement
})
]]></presenter><resources><file src="./resources/wood/images/bg_foot_item.png"/><file src="./resources/wood/images/circle_on.png"/><file src="./resources/wood/images/circle.png"/><file src="./resources/wood/images/hand.png"/><file src="./resources/wood/images/icon_arrow_s.png"/><file src="./resources/wood/images/icon_arrow.png"/><file src="./resources/wood/images/icon_bracket.png"/><file src="./resources/wood/images/icon_fraction.png"/><file src="./resources/wood/images/mask.png"/><file src="./resources/wood/images/one-key-active.png"/><file src="./resources/wood/images/one-key.png"/><file src="./resources/wood/images/pack-up-active.png"/><file src="./resources/wood/images/pack-up.png"/><file src="./resources/wood/images/question_click.png"/><file src="./resources/wood/images/question_normal.png"/><file src="./resources/wood/images/tool_operate_sprites.png"/></resources></addon>