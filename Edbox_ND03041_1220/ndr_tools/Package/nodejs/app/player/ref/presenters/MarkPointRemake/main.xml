<?xml version='1.0' encoding='UTF-8' ?>
<addon id='MarkPointRemake'>
<properties>



</properties>

<dependencies>

</dependencies>

<css>

<![CDATA[.exam_skin_wood .punctuation{position:relative}.exam_skin_wood .punctuation .com_layout_main{left:.625em;right:.625em;bottom:.75em}.exam_skin_wood .punctuation .punctuation_container{overflow-y:auto;position:absolute;top:.83333em;left:1.66667em;right:1.66667em;padding-right:.41667em;height:24.16667em;overflow-x:hidden}.exam_skin_wood .punctuation .punctuation_text_main{min-height:100%;line-height:4em;background:url(resources/wood/images/iocn_pun_bg.png) left -.20833em;background-size:auto 4em}.exam_skin_wood .punctuation .punctuation_text_main p{font-size:1.66667em;color:#5d390d}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list{display:inline-block;margin:0 .20833em;min-width:1.25em;height:1.5em;line-height:1.5em;border:2px solid #643602;vertical-align:middle;text-align:center;color:#5d390d}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list.on{border-color:#71d073}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list.error{border-color:#f83536}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list_sp{line-height:100%}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list_sp .symbol_list_sp_txt{position:relative;top:50%;-webkit-transform:translate(0,-50%);transform:translate(0,-50%);display:inline-block}.exam_skin_wood .punctuation .punctuation_bottom{position:absolute;left:0;right:0;bottom:0;height:7.5em;padding:0 7.5em 0 12.5em;background:rgba(111,75,27,.2);border-bottom-left-radius:.41667em;border-bottom-right-radius:.41667em}.exam_skin_wood .punctuation .punctuation_bottom .answer_title{display:inline-block;position:absolute;left:1.41667em;top:1.75em;font-size:1.66667em;color:#603300}.exam_skin_wood .punctuation .punctuation_bottom .icon_turn{position:absolute;top:50%;margin-top:-1.04167em;width:1.66667em;height:2.08333em}.exam_skin_wood .punctuation .punctuation_bottom .icon_turn.prev{left:10.83333em;background:url(resources/wood/images/icon_g_l.png) center center no-repeat;background-size:contain}.exam_skin_wood .punctuation .punctuation_bottom .icon_turn.next{right:5.58333em;background:url(resources/wood/images/icon_g_r.png) center center no-repeat;background-size:contain}.exam_skin_wood .punctuation .punctuation_bottom .icon_turn.disabled,.exam_skin_wood .punctuation .punctuation_bottom .icon_turn:active{opacity:.6}.exam_skin_wood .punctuation .punctuation_bottom .icon_turn.disabled{cursor:not-allowed}.exam_skin_wood .punctuation .punctuation_bottom .pun_answer_box{height:100%}.exam_skin_wood .punctuation .punctuation_bottom.click_disabled .list_btn{cursor:default}.exam_skin_wood .punctuation .punctuation_bottom.click_disabled .list_btn:active{background-image:url(resources/wood/images/btn_b_normal.png)}.exam_skin_wood .punctuation .punctuation_list{overflow:hidden;width:100%;height:100%;white-space:nowrap}.exam_skin_wood .punctuation .punctuation_list li{float:left;margin-left:1.16667em;margin-top:2.08333em}.exam_skin_wood .punctuation .list_btn{display:inline-block;position:relative;width:3.08333em;height:3.33333em;background:url(resources/wood/images/btn_b_normal.png) center center no-repeat;background-size:contain}.exam_skin_wood .punctuation .list_btn:active{background-image:url(resources/wood/images/btn_b_press.png)}.exam_skin_wood .punctuation .list_btn:before{content:'';position:absolute;left:0;top:.08333em;width:3.08333em;height:3.08333em;background-position:center center;background-repeat:no-repeat;background-size:contain}.exam_skin_wood .punctuation .list_btn.on:after{content:'';position:absolute;left:1px;top:2px;right:1px;bottom:2px;border:3px solid #00bdf4;border-radius:.5em}.exam_skin_wood .punctuation .pun_i_1:before{background-image:url(resources/wood/images/icon_pun1.png)}.exam_skin_wood .punctuation .pun_i_2:before{background-image:url(resources/wood/images/icon_pun2.png)}.exam_skin_wood .punctuation .pun_i_3:before{background-image:url(resources/wood/images/icon_pun3.png)}.exam_skin_wood .punctuation .pun_i_4:before{background-image:url(resources/wood/images/icon_pun4.png)}.exam_skin_wood .punctuation .pun_i_5:before{background-image:url(resources/wood/images/icon_pun5.png)}.exam_skin_wood .punctuation .pun_i_6:before{background-image:url(resources/wood/images/icon_pun6.png)}.exam_skin_wood .punctuation .pun_i_7:before{background-image:url(resources/wood/images/icon_pun7.png)}.exam_skin_wood .punctuation .pun_i_8:before{background-image:url(resources/wood/images/icon_pun8.png)}.exam_skin_wood .punctuation .pun_i_9:before{background-image:url(resources/wood/images/icon_pun9.png)}.exam_skin_wood .punctuation .pun_i_10:before{background-image:url(resources/wood/images/icon_pun10.png)}.exam_skin_wood .punctuation .pun_i_11:before{background-image:url(resources/wood/images/icon_pun11.png)}.exam_skin_wood .punctuation .pun_i_12:before{background-image:url(resources/wood/images/icon_pun12.png)}.exam_skin_wood .punctuation .pun_i_13:before{background-image:url(resources/wood/images/icon_pun13.png)}.exam_skin_wood .punctuation .pun_i_14:before{background-image:url(resources/wood/images/icon_pun14.png)}.exam_skin_wood .punctuation .pun_i_15:before{background-image:url(resources/wood/images/icon_pun15.png)}.exam_skin_wood .punctuation .pun_i_16:before{background-image:url(resources/wood/images/icon_pun16.png)}.exam_skin_wood .punctuation .pun_i_17:before{background-image:url(resources/wood/images/icon_pun17.png)}.exam_skin_wood .punctuation .pun_i_18:before{background-image:url(resources/wood/images/icon_pun18.png)}.exam_skin_wood .punctuation .pun_i_19:before{background-image:url(resources/wood/images/icon_pun19.png)}.exam_skin_wood .punctuation .pun_i_20:before{background-image:url(resources/wood/images/icon_pun20.png)}.exam_skin_wood .punctuation .pun_i_21:before{background-image:url(resources/wood/images/icon_pun21.png)}.exam_skin_wood .punctuation .pun_i_22:before{background-image:url(resources/wood/images/icon_pun22.png)}.exam_skin_wood .punctuation .pun_i_23:before{background-image:url(resources/wood/images/icon_pun23.png)}.exam_skin_wood .punctuation .pun_i_24:before{background-image:url(resources/wood/images/icon_pun24.png)}.exam_skin_wood .punctuation .pun_i_25:before{background-image:url(resources/wood/images/icon_pun25.png)}.exam_skin_wood .punctuation .pun_i_26:before{background-image:url(resources/wood/images/icon_pun26.png)}.exam_skin_wood .punctuation .pun_i_27:before{background-image:url(resources/wood/images/icon_pun27.png)}.exam_skin_wood .punctuation .pun_i_28:before{background-image:url(resources/wood/images/icon_pun28.png)}.punctuation_text_main div.mark_punctuation{display:inline-block}.exam_skin_wood .punctuation .answer_item .list_btn{text-indent:-20000px}.exam_skin_wood .punctuation .punctuation_bottom .list_btn,.exam_skin_wood .punctuation .punctuation_text_main .symbol_list,.exam_skin_wood .punctuation .punctuation_text_main .symbol_list .list_btn{cursor:pointer}.drag-answer{display:inline-block;position:absolute;width:3.08333em;height:3.08333em;text-indent:0}.exam_skin_wood .punctuation .punctuation_container .ui-draggable-dragging .list_btn{text-indent:-20000px;background-size:50%}.exam_skin_wood .punctuation .ui-draggable-dragging .list_btn{text-indent:-20000px;background-size:75%}.exam_skin_wood .punctuation .punctuation_container .ui-draggable-dragging .list_btn:before{background-size:50%}.exam_skin_wood .punctuation .ui-draggable-dragging .list_btn:before{background-size:75%}.exam_skin_wood .punctuation .punctuation_text_main .drop-select{border-color:#71d073}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list.sequence_on{background:0 0;color:#71d073}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list span.sequence{display:inline-block;vertical-align:top;margin:-.1em .1em 0}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list.answer_right{border:1px solid green}.exam_skin_wood .punctuation .punctuation_text_main .symbol_list.answer_wrong{border:1px solid red}.exam_skin_wood .punctuation .com_layout_main{overflow:hidden}.empty_text{text-indent:-20000px}]]>

</css>


<view>

<![CDATA[<div class="com_layout_exam_content punctuation"><div class="com_layout_main_exam"><div class="com_layout_tit"><h2 class="tit title"></h2></div><div class="com_layout_main"><div class="punctuation_board"><div class="punctuation_container scrollbar_style_default"><div class="punctuation_text_main"><div style="font-size: 1.66667em;color: #5d390d" class="mk_content"></div></div></div><div class="punctuation_bottom"><span class="answer_title js_lang_support" data-lang-key="option_bar_text"></span> <a href="###" class="icon_turn prev disabled"></a><div class="pun_answer_box"><ul class="punctuation_list clearfix"><li><a class="list_btn pun_i_1 on" href="###"></a></li><li><a class="list_btn pun_i_2" href="###"></a></li><li><a class="list_btn pun_i_3" href="###"></a></li><li><a class="list_btn pun_i_4" href="###"></a></li><li><a class="list_btn pun_i_5" href="###"></a></li><li><a class="list_btn pun_i_6" href="###"></a></li><li><a class="list_btn pun_i_7" href="###"></a></li><li><a class="list_btn pun_i_8" href="###"></a></li><li><a class="list_btn pun_i_9" href="###"></a></li><li><a class="list_btn pun_i_10" href="###"></a></li><li><a class="list_btn pun_i_11" href="###"></a></li><li><a class="list_btn pun_i_12" href="###"></a></li><li><a class="list_btn pun_i_13" href="###"></a></li><li><a class="list_btn pun_i_14" href="###"></a></li><li><a class="list_btn pun_i_15" href="###"></a></li><li><a class="list_btn pun_i_16" href="###"></a></li><li><a class="list_btn pun_i_17" href="###"></a></li><li><a class="list_btn pun_i_18" href="###"></a></li><li><a class="list_btn pun_i_19" href="###"></a></li><li><a class="list_btn pun_i_20" href="###"></a></li><li><a class="list_btn pun_i_21 on" href="###"></a></li><li><a class="list_btn pun_i_22" href="###"></a></li><li><a class="list_btn pun_i_23" href="###"></a></li><li><a class="list_btn pun_i_24" href="###"></a></li><li><a class="list_btn pun_i_25" href="###"></a></li><li><a class="list_btn pun_i_26" href="###"></a></li><li><a class="list_btn pun_i_27" href="###"></a></li><li><a class="list_btn pun_i_28" href="###"></a></li></ul></div><a href="###" class="icon_turn next"></a></div></div></div></div></div>]]>
</view>


<presenter>

<![CDATA[/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

function shuffle(array) {
    var currentIndex = array.length, temporaryValue, randomIndex;

    //While there remain elements to shuffle...
    while (0 !== currentIndex) {

        // Pick a remaining element...
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;

        //And swap it with the current element.
        temporaryValue = array[currentIndex];
        array[currentIndex] = array[randomIndex];
        array[randomIndex] = temporaryValue;
    }
    return array;
}
var utils = {
    parseAnswer: function (text) {
        var specialchars = ['…', '—', '|']
        var values = [];
        for (var i = 0; text && i < text.length; i++) {
            if (specialchars.indexOf(text[i]) != -1 && text[i] == text[i + 1]) {
                values.push(text[i] + text[i]);
                i++;
            }
            else {
                values.push(text[i]);
            }
        }
        return values;
    },
    findAnswer : function (content) {
        var div = $("<div></div>").html(content);
        var result = [];
        div.find(".as_answer").each(function () {
            result.push($(this).text());
        });
        return result;
    },
    mix : function (answer, confuse_answer) {
        var answers = [];
        for (var i = 0; i < answer.length; i++) {
            var c = answer[i];
            if (answers.indexOf(c) == -1) {
                answers.push(c);
            }
        }
        for (var i = 0; i < confuse_answer.length; i++) {
            var c = confuse_answer[i];
            if (answers.indexOf(c) == -1) {
                answers.push(c);
            }
        }
        //乱序
        return shuffle(answers);
    },
    findCharCss:function(text) {
        text = this.toChinesePunctuation(text) || text;
        var maps = {
            "，": "pun_i_1",
            "。": "pun_i_2",
            "、": "pun_i_3",
            "？": "pun_i_4",
            "！": "pun_i_5",
            "：": "pun_i_6",
            "；": "pun_i_7",
            "…": "pun_i_8",
            "……": "pun_i_9",
            "·": "pun_i_10",
            "—": "pun_i_11",
            "——": "pun_i_12",
            "||": "pun_i_13",
            "|": "pun_i_14",
            "“": "pun_i_15",
            "”": "pun_i_16",
            "‘": "pun_i_17",
            "’": "pun_i_18",
            "《": "pun_i_19",
            "》": "pun_i_20",
            "<": "pun_i_21",
            ">": "pun_i_22",
            "（": "pun_i_23",
            "）": "pun_i_24",
            "【": "pun_i_25",
            "】": "pun_i_26",
            "[": "pun_i_27",
            "]": "pun_i_28",
        };
        return maps[text] || '';
    },
    toChinesePunctuation:function(str) {
        var enPuncations = [",", ".", ":", ";", "?", "!", "'", "\"", "(", ")", "`", "-", "_"],
            cnPuncations = ["，", "。", "：", "；", "？", "！", "’", "”", "（", "）", "·", "—", "——"];

        for (var i = 0; i < enPuncations.length; i++) {
            if (str == enPuncations[i]) {
                return cnPuncations[i];
            }
        }
    }
};
module.exports = utils;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Created by Administrator on 2016/10/31.
 */
var utils = __webpack_require__(0);
var view,model,viewManager,render,rate,disableDrag;
var FULL_WIDTH = 1920;

function setAnswer(element,ch){
    $(element).removeClass("empty_text");
    $(element).html("<a>"+ch+"</a>");
}
function setEmpty(element){
    $(element).html('&emsp;');
}
function isEmpty(element){
    return $(element).html() == "&emsp;" || $(element).html() == " "||$(element).hasClass('empty_text')
}

function toChinesePunctuation(str) {
    var enPuncations = [",", ".", ":", ";", "?", "!", "'", "\"", "(", ")", "`", "-", "_"],
        cnPuncations = ["，", "。", "：", "；", "？", "！", "’", "”", "（", "）", "·", "—", "——"];

    for (var i = 0; i < enPuncations.length; i++) {
        if (str == enPuncations[i]) {
            return cnPuncations[i];
        }
    }
}
function findCharCss(text) {
    text = toChinesePunctuation(text) || text;
    var maps = {
        "，": "pun_i_1",
        "。": "pun_i_2",
        "、": "pun_i_3",
        "？": "pun_i_4",
        "！": "pun_i_5",
        "：": "pun_i_6",
        "；": "pun_i_7",
        "…": "pun_i_8",
        "……": "pun_i_9",
        "·": "pun_i_10",
        "—": "pun_i_11",
        "——": "pun_i_12",
        "||": "pun_i_13",
        "|": "pun_i_14",
        "“": "pun_i_15",
        "”": "pun_i_16",
        "‘": "pun_i_17",
        "’": "pun_i_18",
        "《": "pun_i_19",
        "》": "pun_i_20",
        "<": "pun_i_21",
        ">": "pun_i_22",
        "（": "pun_i_23",
        "）": "pun_i_24",
        "【": "pun_i_25",
        "】": "pun_i_26",
        "[": "pun_i_27",
        "]": "pun_i_28",
    };
    return maps[text] || '';
}
var dragelement = null;
var dragAnswerElement = null;
function addDraggable(view, elements, isMove, dragData) {
    if (disableDrag) return;
    unbindDraggable(view, elements, isMove, dragData);
    var cursorAt = isMove ? { top: 50*rate, left: 40*rate } : { top: -5*rate, left: 15*rate };
    elements.draggable({
        cursor: "move",
        cursorAt: cursorAt,
        start: function (event) {
            if ($(this).hasClass("as_answer")) {
                if (isEmpty($(this))) {
                    console.log("drag start ", false);
                    return false;
                }
                $(this).addClass("empty_text");
                dragAnswerElement = $(this);
            }
            return true;
        },
        helper: function (event) {
            var css = $(this).find("a").attr("class");
            if (!css) {
                css = 'list_btn ' + findCharCss($(this).text());
            }
            var ele = $("<div class='drag-answer'><a class='" + css + "'>" + $(this).text() + "</a></div>");
            return ele;
        }
    });

}
function unbindDraggable(view, elements, isMove, dragData) {
    if (disableDrag) return;
    try { elements.draggable('destroy'); } catch (ex) { };
}
function addDroppable(view, elements, handler) {
    if(disableDrag) return;
    unbindDroppable(view, elements);
    elements.droppable({
        hoverClass: "drop-select",
        drop: function (event, ui) {
            var current = $(this);
            var text = ui.helper.text();
            if(dragAnswerElement){
                setEmpty(dragAnswerElement);
            }
            setAnswer(current,text);

            if(handler){
                handler(event,ui);
            }
            if (current.hasClass("on")) {
                render.moveSelectAnswerToNext(view);
            }
        }
    });/*
     elements.on("dragend",function(event){
     event.preventDefault();
     }).on("drop",function(event){
     $(this).removeClass("drag-enter");
     var current = $(this);
     var dataTransfer = event.originalEvent.dataTransfer;
     var text = dataTransfer.getData("text/plain");
     current.html("<a>"+text+"</a>");
     if(current.hasClass("select")){
     moveToNext(view);
     }
     event.preventDefault();
     event.stopPropagation();
     }).on("dragenter",function(){
     $(this).addClass("drag-enter");
     }).on("dragleave",function(){
     $(this).removeClass("drag-enter");
     }).on("dragover",function(event){
     event.preventDefault();
     });*/
}
function unbindDroppable(view, elements) {
    if(disableDrag) return;
    elements.unbind("dragend").unbind("drop").unbind("dragenter").unbind("dragleave").unbind("dragover");
}

var handler = {
    init:function(_view,_model,_viewManager,_render,_disableDrag,cansubmitCallback){
        view = _view;
        model = _model;
        viewManager = _viewManager;
        render = _render;
        var width = $(document).width();
        rate = width/FULL_WIDTH;
        disableDrag = _disableDrag;
        this.cansubmitCallback = cansubmitCallback;
    },
    bind:function(){
        var self = this;
        var answers =viewManager.answers();
        //答案框点击事件
        answers.off("click").click(function () {
            var ele = $(this);
            $(view).find(".as_answer.on").removeClass("on");
            ele.addClass("on");
            if (!isEmpty(ele)) {
                setEmpty(ele);
            }
        });
        //选项点击事件
        var choiceItems = viewManager.answer_items();
        choiceItems.off("click").click(function () {
            var answer = $(this).text();
            var selectAnswer = $(view).find(".as_answer.on");
            if (selectAnswer.length > 0) {
                selectAnswer.each(function () {
                    setAnswer($(this),answer);
                    self.cansubmitCallback();
                    render.moveSelectAnswerToNext(view);
                });
            }
        });

        addDraggable(view, choiceItems, false, function (element) {
            return element.html();
        });
        addDraggable(view, answers, true, function (element) {
            return isEmpty(element) ? '' : element.html();
        });
        addDroppable(view, answers, function (event, element) {
            self.cansubmitCallback();
        });
        $(view).off("dragend").on("dragend", function (event) {
            event.preventDefault();
        }).off("drop").on("drop", function (event) {
            event.preventDefault();
            event.stopPropagation();
        });
    },
    unbind:function(){
        var answers =viewManager.answers();
        answers.off("click");
        var choiceItems = viewManager.answer_items();
        choiceItems.off("click");
        unbindDraggable(view,answers);
        unbindDraggable(view,choiceItems);
        unbindDroppable(view,answers);
        $(view).off("dragend").off("drop");
    }

}
module.exports = handler;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Created by Administrator on 2016/10/31.
 */
var utils = __webpack_require__(0);
var  view,model,viewManager;
var currentindex =0;
var max_count;
//获得当前选中答案的序号
var getSelectedAnswerSequence = function(){
    var selectedIndex = 0;
    viewManager.answers().each(function (index) {
        if($(this).hasClass("on")){
            selectedIndex = index;
        }
    });
    return selectedIndex;
}
//设置当前序号的答案为选中状态
var setAnswerSelect = function(_index){
    viewManager.answers().each(function (index) {
        if (index == _index) {
            $(this).addClass("on");
        }
        else {
            $(this).removeClass("on");
        }
    });
};
//绘制一个标点符号选项
var renderAnswerLine =  function renderAnswerLine(text, parent, licss) {
    licss = licss || 'answer_item';
    var css = utils.findCharCss(text);
    return $("<li class='" + licss + "'></li>").html("<a class='list_btn " + css + " '>" + text + "</a>").appendTo(parent);
}
/*
 * 计算最大允许显示的标点数
 */
var calculateMaxCount = function () {
    var choice = viewManager.answer_list().find(".answer_item:first");
    var li =choice.outerWidth(true)+2;
    var all = viewManager.answer_list().width();
    return Math.floor(all / li);
}
//设置符号栏目左右导航，配置文件设置最多的符号数
var showCorrectAnswerLimitLength = function (root) {
    var answerParent = viewManager.foot_content();
    var itemCount = viewManager.answer_items().length;

    //取消绑定事件
    viewManager.answer_prev().unbind("click");
    viewManager.answer_next().unbind("click");
    //maxcount： 允许显示的最大符号数
    if (itemCount > max_count) {
        //currentindex 是最左边符号的下标
        if (currentindex > itemCount - max_count) {
            currentindex = itemCount - max_count;
        }
        viewManager.answer_items().each(function (idx) {
            //显示的符号的坐标:[currentindex,currentindex+max_count)
            if (idx < currentindex || currentindex + max_count <= idx) {
                $(this).hide();
            }
            else {
                $(this).css("display", "inline-block");
            }
        });
        //向左导航
        if (currentindex > 0) {
            viewManager.answer_prev().removeClass("disabled");
            viewManager.answer_prev().click(function () {
                console.log("prev view manager")
                currentindex = currentindex - 1;
                showCorrectAnswerLimitLength(root);
            });
        }
        else {
            viewManager.answer_prev().addClass("disabled");
        }
        //向右导航
        if (currentindex < itemCount - max_count) {
            viewManager.answer_next().removeClass("disabled");
            viewManager.answer_next().click(function () {
                currentindex = currentindex + 1;
                showCorrectAnswerLimitLength(root);
            });
        }
        else {
            viewManager.answer_next().addClass("disabled");
        }
    }
    else {
        viewManager.answer_next().addClass("disabled");
        viewManager.answer_prev().addClass("disabled");
    }
}
//显示选项
var showAnswers = function(answers){
    var parentDiv = $(view).find(".punctuation_list");
    parentDiv.html("");
    for (var i = 0; i < answers.length; i++) {
        renderAnswerLine(answers[i],parentDiv);
    }
    //12、最多显示x个标点选项，剩余的标点选项通过点击导航栏： <>进行导航。
    max_count = calculateMaxCount();
    showCorrectAnswerLimitLength();
}
var render = {
    init: function(_view,_model,_viewManager){
        view = _view;
        model = _model;
        viewManager = _viewManager;
        currentindex =0;
    },
    renderTitle:function(){
        viewManager.title().html(model.title);
        if(model.title.length>40){
            viewManager.title().addClass("s_tit");
        }
    },
    renderContent:function(){
        //2、 显示题干，第一个答题框选中
        viewManager.content().html(model.content);
        viewManager.answers().addClass("symbol_list");
        setAnswerSelect(0);
        viewManager.answers().html("");
    },
    renderChoices:function(choices){
        showAnswers(choices);
    },
    renderStatic: function($i18n){
        viewManager.lang_support().each(function(){
            var $this = $(this);
            $this.html($i18n($this.attr('data-lang-key')));
        });
    },
    moveSelectAnswerToNext:function(){
        var index = getSelectedAnswerSequence()+1;
        if(index<viewManager.answers().length){
            setAnswerSelect(index);
        }
    },
    setAnswerSelect:function(index){
        setAnswerSelect(index);
    }
};
module.exports = render;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var utils = __webpack_require__(0);

function MarkpointService() {
    this.status = {};
    this.showResult = false;
}
var viewManager,
    presenter;
var showAnswer = function (answers) {
    viewManager.answers().each(function (index) {
        var answer = answers[index];
        $(this).removeClass("empty_text");
        var ch = answer || "&emsp;"
        $(this).html("<a>" + ch + "</a>");
    })
}
var RIGHT_CLASS = "answer_right";
var WRONG_CLASS = "error";
var showAnswerStatus = function (userAnswers, correctAnswers) {
    viewManager.answers().each(function (i) {
        if (userAnswers[i] == correctAnswers[i]) {
            $(this).removeClass(WRONG_CLASS).addClass(RIGHT_CLASS);
        } else {
            $(this).removeClass(RIGHT_CLASS).addClass(WRONG_CLASS);
        }
    });
}
var selectAnswer = function (index, cssClass) {
    viewManager.answers().each(function (i) {
        if (index == i) {
            $(this).addClass(cssClass);
        } else {
            $(this).removeClass(cssClass);
        }
    });
    presenter.$dispatchEvent("statistics_call", PresenterEventType.IC_PLAYER_EVENT, {
        service: "statistic",
        method: "clickItem",
        args: [index, "B"]
    });

}

MarkpointService.prototype = {
    init: function (model, _viewManager, eventHandler, render, _presenter) {
        this.model = model;
        viewManager = this.viewManager = _viewManager;
        this.corrects = utils.findAnswer(model.content);
        this.eventHandler = eventHandler;
        this.render = render;
        presenter = _presenter;
        this.parent = _presenter;
        if (this.i18nData) {
            presenter.$translator.setData(this.i18nData);
            delete this.i18nData;
        }
    },
    getQuestionInfo: function () {
        return {id: this.model.question_id, type_code: 'markpoint', type_name: '标点题', url: this.model.question_id, dispatchOnly: true}
    },
    setLocationProperties: function (data) {
        if (presenter && typeof presenter.$translator === 'function') {
            presenter.$translator.setData(this.i18nData);
        } else {
            this.i18nData = data;
        }
    },
    getResult: function () {
        var answerState = this.cancomit ? "COMPLETE" : "NO_ANSWER";
        var useranswers = [];
        this.viewManager.answers().each(function () {
            useranswers.push($(this).text() || " ");
            if (!$(this).text()) {
                //answerState = "NO_COMPLETE";
            }
        });
        if (useranswers.indexOf(" ") == -1) {
            //answerState="COMPLETE";
        }
        var allCorrect = true;
        for (var i = 0; i < this.corrects.length; i++) {
            if (useranswers[i] != this.corrects[i]) {
                allCorrect = false;
            }
        }
        var returnAnswer = {
            answer: {
                "answer_result": allCorrect,
                "correct_response": this.corrects,
                "user_response": useranswers
            },
            answerState: answerState,
            questionId: this.model.question_id
        };
        return returnAnswer;
    },
    getStatisticClass: function () {
        return "B";
    },
    convertDataForStatistics: function (oriData) {
        var i,
            j,
            k,
            m;
        var value = oriData.value;
        var onlineNum = 0;
        var correctAnswer,
            item_key = [],
            percent = [],
            stuAnswerStat = [];
        var convertedData = {};
        convertedData["allrightStu"] = [];

        var answer;
        //获取正确答案并设置编号
        if (!correctAnswer && value.correctAnswerTeacher && value.correctAnswerTeacher.correct_response) {
            correctAnswer = value.correctAnswerTeacher.correct_response;
            if (correctAnswer && $.isArray(correctAnswer)) {
                for (k = 0; k < correctAnswer.length; k++) {
                    item_key.push(k + 1);
                    stuAnswerStat.push({
                        "rightNum": 0,
                        "right_userIds": [],
                        "wrong_userIds": [],
                        "unfinished_userIds": value.unfinishedUserIds,
                        "ref_key": (k + 1)
                    });
                }
            }
        }

        if (value.answers) {
            for (i = 0; i < value.answers.length; i++) {
                if ($.isArray(value.answers[i])) {
                    for (j = 0; j < value.answers[i].length; j++) {
                        answer = value.answers[i][j].answer;
                        if (answer && (typeof answer) == "string") {
                            answer = JSON.parse(answer);

                            if (correctAnswer && answer.user_response) {
                                var judgeIsCorrect = true;
                                for (k = 0; k < correctAnswer.length; k++) {
                                    if (answer.user_response[k] && correctAnswer[k] == answer.user_response[k]) {
                                        // stuAnswerStat[k]["rightNum"] = ((typeof stuAnswerStat[k]["rightNum"]) == "number") ? (stuAnswerStat[k]["rightNum"] +
                                        // 1) : 1;
                                        for (m = 0; m < value.answers[i][j].userIds.length; m++) {
                                            stuAnswerStat[k]["rightNum"] = ((typeof stuAnswerStat[k]["rightNum"]) == "number") ? (stuAnswerStat[k]["rightNum"] + 1) : 1;
                                            stuAnswerStat[k]["right_userIds"].push(value.answers[i][j].userIds[m]);
                                        }
                                    } else {
                                        judgeIsCorrect = false;
                                        for (m = 0; m < value.answers[i][j].userIds.length; m++) {
                                            stuAnswerStat[k]["wrong_userIds"].push(value.answers[i][j].userIds[m]);
                                        }
                                    }
                                }
                                answer.isCorrect = judgeIsCorrect;
                                if (answer.isCorrect) {
                                    convertedData["allrightStu"] = convertedData["allrightStu"].concat(value.answers[i][j].userIds);
                                }
                            }
                        }
                    }
                }
            }
        }

        onlineNum = value.finishedNum + value.unfinishedNum;

        /**计算正确率**/
        for (i = 0; i < stuAnswerStat.length; i++) {
            percent[i] = (onlineNum > 0) ? (stuAnswerStat[i]["rightNum"] / onlineNum).toFixed(2) : 0;
        }

        convertedData["spend_time"] = value.elapsedTime ? value.elapsedTime : 0;
        convertedData["submit_count"] = onlineNum;
        convertedData["answers"] = value.answers;
        convertedData["item_key"] = item_key;
        convertedData["percent"] = percent;
        convertedData["unfinishedNum"] = value.unfinishedNum;
        convertedData["unfinishedUserIds"] = value.unfinishedUserIds;
        convertedData["stuAnswerStat"] = stuAnswerStat;
        value["convertedData"] = convertedData;
        return oriData;
    },
    /**
     * 显示答案
     * @param answer 需要显示的答案,如果对象为空则显示正确答案
     */
    showAnswer: function (showAnswerType, commitedAnswer) {
        //显示已提交的答案
        if (commitedAnswer) {
            answer = [];
            var committedAnswer = commitedAnswer.answer.user_response;
            if (committedAnswer) {
                showAnswer(committedAnswer);
            }
        } else {
            switch (showAnswerType) {
                case "correct":
                    showAnswer(this.corrects);
                    break;
                case "user":
                    break;
                default:
                    showAnswer(this.corrects);
                    viewManager.answers().each(function (index) {
                        $(this).removeClass("on");
                        $(this).on("click", function () {
                            selectAnswer(index, 'on');
                        });
                    });
                    viewManager.answers().removeClass("sequence_on");
                    selectAnswer(0, 'on');
            }
        }
        if (commitedAnswer && commitedAnswer.answer.user_response) {
            showAnswerStatus(commitedAnswer.answer.user_response, this.corrects);
            this.showResult = true;
            //通知状态变化
            this.parent.$dispatchEvent($PresenterEvent['InteractionStateRecoverFilter'].PRESENTER_STATE_CHANGE, PresenterEventType.IC_PLAYER_EVENT);
        }

    },
    showResultHint: function (option) {
        var result = this.getResult();
        var tip;

        if (result.answer.answer_result) {
            // tip = '太棒啦，您答对了！';
            tip = presenter.$translate('notice_tip_correct');
        } else {
            // tip = '很遗憾，回答错误！';
            tip = presenter.$translate('notice_tip_wrong');
        }
        if (!result.answer.answer_result) {
            presenter.$dispatchEvent($PresenterEvent['ObjectiveInteractionLayout'].NOTICE_TIP, PresenterEventType.IC_PLAYER_EVENT, {
                value: {
                    type: 'show',
                    text: tip,
                    autoDismiss: true
                }
            });
        }
        showAnswerStatus(result.answer.user_response, this.corrects);

    },
    //将题目重置为未作答状态
    resetQuestion: function () {
        this.viewManager.answers().html("&emsp;").removeClass(RIGHT_CLASS).removeClass(WRONG_CLASS);
        this.render.setAnswerSelect(0);
        this.showResult = false;
        //通知状态变化
        this.parent.$dispatchEvent($PresenterEvent['InteractionStateRecoverFilter'].PRESENTER_STATE_CHANGE, PresenterEventType.IC_PLAYER_EVENT);
    },
    _getState: function () {
        //未初始化，无需保存状态
        if (!this.viewManager) {
            return {};
        }
        return {result: this.getResult(), showResult: this.showResult};
    },
    getState: function () {
        this.parent.playerController.startFlow('css_classroom_status_changed', {presenterCode: this.parent.metaInfo.name});
        return this._getState();
    },
    setState: function (state) {
        answerState = state.result.answerState;
        showAnswer(state.result.answer.user_response);
        state.showResult && showAnswerStatus(state.result.answer.user_response, state.result.answer.correct_response);
    },
    getClassroomStatus: function () {
        return this._getState();
    },
    setClassroomStatus: function (status) {
        this.status = status;
        !!this.status && this.setState(status);
        this.parent.$dispatchEvent('css_recover_complete', PresenterEventType.IC_PLAYER_EVENT, {presenterCode: this.parent.metaInfo.name});
    },
    clearClassroomStatus: function () {
        this.setClassroomStatus(null);
    },
    startStatistics: function () {
        this.eventHandler.unbind();
        viewManager.answers().each(function (index) {
            $(this).removeClass("on").html("<span class='sequence'>(" + (index + 1) + ")</span>");
            $(this).on("click", function () {
                selectAnswer(index, 'sequence_on');
            });
        });
        viewManager.answers().removeClass("on");
        selectAnswer(0, 'sequence_on');
    },
    //将题目设置为不可作答状态
    lockQuestion: function () {
        this.eventHandler.unbind();
    },
    //将题目设置为可作答状态
    unlockQuestion: function () {
        this.eventHandler.bind();
    },
    //将题目设置为结束作答状态
    finishQuestion: function () {
        this.eventHandler.unbind();
    }
};
module.exports = MarkpointService;


/***/ }),
/* 4 */
/***/ (function(module, exports) {

var ViewManager = function(view){
    this.view = $(view);
}
ViewManager.prototype.timer = function () {
    return this.view.find(".com_u_timebox");
}
ViewManager.prototype.title = function () {
    return this.view.find(".title");
}
ViewManager.prototype.container = function () {
    return this.view.find(".punctuation_container");
}
ViewManager.prototype.content = function () {
    return this.view.find(".punctuation_text_main .mk_content");
}
ViewManager.prototype.answers = function () {
    return this.view.find(".punctuation_text_main .mark_punctuation.as_answer");
}
ViewManager.prototype.answer_items = function () {
    return this.view.find(".answer_item");
}
ViewManager.prototype.answer_prev = function () {
    return this.view.find(".icon_turn.prev");
}
ViewManager.prototype.answer_next = function () {
    return this.view.find(".icon_turn.next");
}
ViewManager.prototype.answer_list = function () {
    return this.view.find(".punctuation_list");
}
ViewManager.prototype.foot_content = function () {
    return this.view.find(".mark_point_footer .foot_content");
}
ViewManager.prototype.lang_support = function(){
    return this.view.find('.js_lang_support');
}

var creator = function(view){
    return new ViewManager(view);
}

module.exports = creator;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

(function() {
    /**
     * 定义：
     *   1 标题
     *   2 内容
     *   3 标点输入框（可拖动，可接受拖动）
     *   4 标点备选项（可拖动）
     *
     */
    var utils = __webpack_require__(0);
    var viewManagerCreator = __webpack_require__(4);
    var renderHandler = __webpack_require__(2);
    var eventHandler = __webpack_require__(1);
    var MarkpointService = __webpack_require__(3);
    var view,model,viewManager;
    var result = {};

    var renderPunctuationBottom = function(){
        //5、 解析混淆项，……符号要特殊处理
        var confuse_answer = utils.parseAnswer(model.confuse_answer);
        //4、 正确答案从题干项中提取，以数组方式存放到presenter内result对象中。
        var answer = utils.findAnswer(model.content);
        //3、 显示标点选项栏目，正确答案和混淆项乱序显示
        var answer_choices = utils.mix(answer, confuse_answer);
        renderHandler.renderChoices(answer_choices);

    }
    var render = function(){
        renderHandler.renderTitle();
        renderHandler.renderContent();
        renderPunctuationBottom();
    }
    var bindEvent = function(){
        eventHandler.bind();
    }
    var unbindEvent = function(){
        eventHandler.unbind();
    }
    var Presenter = BasicPresenter.extend({
        metaInfo: {
            name: 'MarkPointRemake',
            type: PresenterType.PRESENTER_COMPONENT
        },
        /**
         * Presenter的初始化方法
         * @private
         */
        $init: function() {
            this._super();
            this.service = new MarkpointService();
        },
        /**
         * Presenter对外暴露对象
         */
        getService: function() {
            return this.service;
        },
        /****以下开始为icPlayer的生命周期方法*****/
        run: function(_view, _model) {
            var self = this;
            var isStudent =  player.getPlayerServices().getRuntime()== icCreatePlayer.RUNTIME.STUDENT_MOBILE;
            view = _view;
            model = _model;
            viewManager = viewManagerCreator(view);
            renderHandler.init(view,model,viewManager);
            eventHandler.init(view,model,viewManager,renderHandler,isStudent,function(){self.cansubmit();});
            this.service.init(model,viewManager,eventHandler,renderHandler,this);
            this.$translatorDeferred.then(function(){
                renderHandler.renderStatic(self.$translate.bind(self));
            });
        },
        pageShow: function() {
            render();
            this._bindEvent();
        },
        pageLeave: function() {
            this._unbindEvent();
        },
        destroy: function() {
        },
        /****以下开始为Presenter的私有方法*****/
        _bindEvent: function() {
            bindEvent();
        },
        _unbindEvent: function() {
            unbindEvent();
        },
        cansubmit: function (){
            this.$dispatchEvent($PresenterEvent['AnswerFlowController'].QUESTION_STATE_CHANGE,PresenterEventType.IC_PLAYER_EVENT, {canSubmit: true});
            this.service.cancomit = true;
        }
    }, 'MarkPointRemake');

    window['AddonMarkPointRemake_create'] = function() {
        return new Presenter();
    }




})();

/***/ })
/******/ ]);]]>

</presenter>


<resources>

<file src='./resources/demopic/pointsort1.png' />
<file src='./resources/index_board.html' />
<file src='./resources/index_pad.html' />
<file src='./resources/wood/images/btn_b_normal.png' />
<file src='./resources/wood/images/btn_b_press.png' />
<file src='./resources/wood/images/icon_g_l.png' />
<file src='./resources/wood/images/icon_g_r.png' />
<file src='./resources/wood/images/icon_pun1.png' />
<file src='./resources/wood/images/icon_pun10.png' />
<file src='./resources/wood/images/icon_pun11.png' />
<file src='./resources/wood/images/icon_pun12.png' />
<file src='./resources/wood/images/icon_pun13.png' />
<file src='./resources/wood/images/icon_pun14.png' />
<file src='./resources/wood/images/icon_pun15.png' />
<file src='./resources/wood/images/icon_pun16.png' />
<file src='./resources/wood/images/icon_pun17.png' />
<file src='./resources/wood/images/icon_pun18.png' />
<file src='./resources/wood/images/icon_pun19.png' />
<file src='./resources/wood/images/icon_pun2.png' />
<file src='./resources/wood/images/icon_pun20.png' />
<file src='./resources/wood/images/icon_pun21.png' />
<file src='./resources/wood/images/icon_pun22.png' />
<file src='./resources/wood/images/icon_pun23.png' />
<file src='./resources/wood/images/icon_pun24.png' />
<file src='./resources/wood/images/icon_pun25.png' />
<file src='./resources/wood/images/icon_pun26.png' />
<file src='./resources/wood/images/icon_pun27.png' />
<file src='./resources/wood/images/icon_pun28.png' />
<file src='./resources/wood/images/icon_pun3.png' />
<file src='./resources/wood/images/icon_pun4.png' />
<file src='./resources/wood/images/icon_pun5.png' />
<file src='./resources/wood/images/icon_pun6.png' />
<file src='./resources/wood/images/icon_pun7.png' />
<file src='./resources/wood/images/icon_pun8.png' />
<file src='./resources/wood/images/icon_pun9.png' />
<file src='./resources/wood/images/iocn_pun_bg.png' />


</resources>

</addon>