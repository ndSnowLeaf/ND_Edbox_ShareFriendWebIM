<?xml version='1.0' encoding='UTF-8'?>
<addon id="templateid"><properties/><dependencies><jsDependency><javaScript name="AlamedaRequire" version="0.3.2"/></jsDependency></dependencies><css><![CDATA[.exam_skin_wood .pointcircle .potcle_lw_d .text,.exam_skin_wood .pointcircle .potcle_lw_o .text,.exam_skin_wood .pointcircle .potcle_lw_p .text,.exam_skin_wood .pointcircle .potcle_lw_r .text,.exam_skin_wood .pointcircle .potmsg_gx .text_o,.exam_skin_wood .pointcircle .potmsg_gx .text_p{font-style:italic;font-family:Bell MT,"Times New Roman",serif}.exam_skin_wood .pointcircle{position:relative;width:100%;height:100%;background:#bfd3e2;color:#333;text-align:center;overflow:hidden}.exam_skin_wood .pointcircle .potcle_main{position:absolute;left:50%;top:50%;width:72.08333em;height:40.83333em;margin-left:-36.04167em;margin-top:-19.08333em;padding-left:.83333em;text-align:center}.exam_skin_wood .pointcircle .potcle_stage{float:left;position:relative;width:49.16667em;height:100%;background:#b0c9dc}.exam_skin_wood .pointcircle .potcle_stage:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .pointcircle .potmsg_result{float:left;position:relative;width:21.91667em;height:100%}.exam_skin_wood .pointcircle .potmsg_result:after{content:"";display:inline-block;width:0;height:100%;vertical-align:middle}.exam_skin_wood .pointcircle .potcle_circle{z-index:1;position:absolute;display:inline-block;left:50%;top:50%;width:26.20833em;height:26.20833em;margin-left:-13.10417em;margin-top:-13.10417em;border:.33333em solid #4a4e51;border-radius:50%}.exam_skin_wood .pointcircle .potcle_circenter{z-index:10;position:absolute;display:inline-block;width:.875em;height:.875em;left:50%;top:50%;margin-left:-.4375em;margin-top:-.4375em;background:#2986cc;border-radius:50%}.exam_skin_wood .pointcircle .potcle_line_d,.exam_skin_wood .pointcircle .potcle_line_r{width:12.91667em;left:50%;top:50%;margin-left:0;position:absolute;text-align:center;display:inline-block}.exam_skin_wood .pointcircle .potcle_line_r{height:.5em;margin-top:-.25em;background:#2986cc;-webkit-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.exam_skin_wood .pointcircle .potcle_line_d{z-index:9;height:.33333em;margin-top:-.16667em;background:url(resources/wood/images/dashed_gray.png) left center repeat-x;background-size:auto 100%;-webkit-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center;-webkit-transform:rotate(38deg);-ms-transform:rotate(38deg);transform:rotate(38deg)}.exam_skin_wood .pointcircle .potcle_line_d.oncircle{background:url(resources/wood/images/dashed_red.png) left center repeat-x;background-size:auto 100%}.exam_skin_wood .pointcircle .potcle_point_p{z-index:11;position:absolute;display:inline-block;width:1.5em;height:1.5em;left:38em;top:32em;margin-left:-.75em;margin-top:-.75em;background:#fff;border:.20833em solid #2986cc;border-radius:50%;text-align:center}.exam_skin_wood .pointcircle .potcle_point_p.ui_btn_active,.exam_skin_wood .pointcircle .potcle_point_p:active{border-color:#eb6100}.exam_skin_wood .pointcircle .potcle_point_p:before{content:"";position:absolute;top:-2em;right:-2em;bottom:-2em;left:-2em;cursor:pointer}.exam_skin_wood .pointcircle .potcle_point_p.oncircle{background:#e60012;border-color:#e60012}.exam_skin_wood .pointcircle .potcle_point_p.oncircle .potcle_lw_p{color:#e60012}.exam_skin_wood .pointcircle .potcle_lw_r{position:relative;display:inline-block;top:-5.5em;color:#2986cc;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.exam_skin_wood .pointcircle .potcle_lw_r .text{font-size:6.04167em}.exam_skin_wood .pointcircle .potcle_lw_o{position:absolute;left:-1.83333em;top:.8em;color:#4a4e51}.exam_skin_wood .pointcircle .potcle_lw_o .text{padding-right:.20833em;font-size:3.95833em}.exam_skin_wood .pointcircle .potcle_lw_d{position:relative;display:inline-block;top:.5em;color:#4a4e51;-webkit-transform:rotate(-38deg);-ms-transform:rotate(-38deg);transform:rotate(-38deg)}.exam_skin_wood .pointcircle .potcle_lw_d .text{font-size:6.04167em}.exam_skin_wood .pointcircle .potcle_lw_p{position:absolute;display:inline-block;top:.58333em;left:1.375em;pointer-events:none;color:#333}.exam_skin_wood .pointcircle .potcle_lw_p .text{padding-right:.20833em;font-size:3.95833em}.exam_skin_wood .pointcircle .potmsg_body{position:relative;display:inline-block;width:98%;vertical-align:middle;padding-bottom:4.16667em}.exam_skin_wood .pointcircle .potmsg_cpare{visibility:hidden;height:6.66667em;line-height:6.66667em;color:#333;text-align:center}.exam_skin_wood .pointcircle .potmsg_cpare .text_d,.exam_skin_wood .pointcircle .potmsg_cpare .text_r{font-size:6.25em;font-style:italic;font-family:Bell MT,"Times New Roman",serif}.exam_skin_wood .pointcircle .potmsg_cpare .text_cpare{font-size:6.25em;padding:0 .125em;color:#e60012}.exam_skin_wood .pointcircle .potmsg_gx{visibility:hidden;min-height:11em;max-height:14.29167em;margin-top:2.91667em;margin-bottom:1.5em;line-height:4.16667em;overflow:hidden;color:#333;text-align:center}.exam_skin_wood .pointcircle .potmsg_gx .point_p_in,.exam_skin_wood .pointcircle .potmsg_gx .point_p_on,.exam_skin_wood .pointcircle .potmsg_gx .point_p_out{font-size:3em}.exam_skin_wood .pointcircle .potmsg_gx .text_o,.exam_skin_wood .pointcircle .potmsg_gx .text_p{font-size:1.6em}.exam_skin_wood .pointcircle .potmsg_gx .icon_yuan{position:relative;display:inline-block;width:.66667em;height:.66667em;border:.05833em solid #333;border-radius:50%;margin:0 .05em}.exam_skin_wood .pointcircle .potmsg_gx .icon_yuan:before{content:"";position:absolute;left:50%;top:50%;margin-left:-.03333em;margin-top:-.03333em;display:inline-block;width:.06667em;height:.06667em;background:#333;border-radius:50%}.exam_skin_wood .pointcircle .iu_text_show{visibility:visible}.exam_skin_wood .pointcircle .potmsg_bm{position:relative;width:100%;height:3.125em;text-align:center}.exam_skin_wood .pointcircle .potmsg_btn{position:relative;display:inline-block;max-width:20em;padding:.5em .91667em .5em 3em;border:1px solid #397274;color:#384650;background:-webkit-linear-gradient(top,#fff 0,#e9e9e9 100%);background:linear-gradient(to bottom,#fff 0,#e9e9e9 100%);border-radius:.41667em;overflow:hidden}.exam_skin_wood .pointcircle .potmsg_btn .text_show{display:none}.exam_skin_wood .pointcircle .potmsg_btn .text_hide,.exam_skin_wood .pointcircle .potmsg_btn.btn_show .text_show{display:inline-block}.exam_skin_wood .pointcircle .potmsg_btn:before{content:"";display:inline-block;position:absolute;left:.625em;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0);width:1.75em;height:1.29167em;background:url(resources/wood/images/icon_hide_nor.png) center center no-repeat;background-size:100% auto}.notice_tip_box:after,.prom_confirm_box:after{width:0;height:100%;content:""}.exam_skin_wood .pointcircle .potmsg_btn.ui_btn_active,.exam_skin_wood .pointcircle .potmsg_btn:active{background:-webkit-linear-gradient(top,#89c4c7 0,#77b8ba 100%);background:linear-gradient(to bottom,#89c4c7 0,#77b8ba 100%);color:#fff}.exam_skin_wood .pointcircle .potmsg_btn.ui_btn_active:before,.exam_skin_wood .pointcircle .potmsg_btn:active:before{background:url(resources/wood/images/icon_hide_act.png) center center no-repeat;background-size:100% auto}.exam_skin_wood .pointcircle .potmsg_btn .text{text-align:left;font-size:1.5em;line-height:1.4}.notice_tip_box,.prom_confirm_box{z-index:500;position:fixed;left:0;right:0;top:0;bottom:0;text-align:center}.exam_skin_wood .pointcircle .potmsg_btn.btn_show .text_hide{display:none}.exam_skin_wood .pointcircle .potmsg_btn.btn_show:before{background:url(resources/wood/images/icon_show_nor.png) center center no-repeat;background-size:100% auto}.exam_skin_wood .pointcircle .potmsg_btn.btn_show:active:before{background:url(resources/wood/images/icon_show_act.png) center center no-repeat;background-size:100% auto}.hide_dom{display:none!important}.notice_tip_box .notice_tip_con,.notice_tip_box:after,.prom_confirm_box .confirm_text .text,.prom_confirm_box .confirm_text:after,.prom_confirm_box .prom_confirm_con,.prom_confirm_box:after{display:inline-block;vertical-align:middle}.notice_tip_box .notice_tip_con{padding:1em 4.16667em;line-height:2.08333em;background:rgba(47,47,47,.81);border-radius:.16667em;color:#fff}.notice_tip_box .notice_tip_con .text{font-size:1.41667em}.notice_tip_box.hide_mask{pointer-events:none}.notice_tip_box.hide_mask .notice_tip_con{pointer-events:auto}.prom_confirm_box .prom_confirm_con{width:33.54167em;height:20.125em;padding:1.08333em 2.08333em 0;line-height:2.08333em;background:rgba(47,47,47,.81);border-radius:.41667em}.prom_confirm_box .confirm_text{position:relative;height:12.91667em;color:#fff;text-align:left}.prom_confirm_box .confirm_text:after{content:"";width:0;height:100%}.prom_confirm_box .confirm_text .text{font-size:2em;line-height:2}.prom_confirm_box .btn_group{text-align:center}.prom_confirm_box .btn_group .cancel,.prom_confirm_box .btn_group .confirm{display:inline-block;vertical-align:middle;padding:0 1em;min-width:8.125em;height:3.08333em;line-height:3em;color:#384650;text-align:center;background:-webkit-linear-gradient(top,#fff 0,#e9e9e9 100%);background:linear-gradient(to bottom,#fff 0,#e9e9e9 100%);border:1px solid #397274;border-radius:.41667em;margin:0 1.33333em;cursor:pointer}.prom_confirm_box .btn_group .cancel .btn_text,.prom_confirm_box .btn_group .confirm .btn_text{font-size:1.5em}.prom_confirm_box .btn_group .cancel.click_disabled,.prom_confirm_box .btn_group .confirm.click_disabled{background:#a9b6bf;border:0}.prom_confirm_box .btn_group .cancel:active,.prom_confirm_box .btn_group .confirm:active{background:#87c3c5}.prom_confirm_box.hide_mask{pointer-events:none}.prom_confirm_box.hide_mask .prom_confirm_con{pointer-events:auto}.typefaces_ru_RU .exam_skin_wood .pointcircle .potmsg_btn{padding:.5em .41667em .5em 3em}.typefaces_ru_RU .exam_skin_wood .pointcircle .potmsg_btn span{font-size:1.25em}.typefaces_ru_RU .exam_skin_wood .pointcircle .potmsg_gx{margin-bottom:3.5em}]]></css><view><![CDATA[<div class="exam_skin_wood" style="" id="layout"><div class="pointcircle"><div class="potcle_main"><div class="potcle_stage _js_potcle_stage"><span class="potcle_circle _js_potcle_circle"></span> <span class="potcle_circenter _js_potcle_circenter"><span class="potcle_lw_o" style=""><span class="text">O</span></span> </span><span class="potcle_line_r _js_potcle_line_r"><span class="potcle_lw_r _js_potcle_lw_r" style=""><span class="text">r</span></span> </span><span class="potcle_line_d hide_dom _js_potcle_line_d" style="width: 16.91667em;transform: rotate(41deg)"><span class="potcle_lw_d" style="transform: rotate(-41deg)"><span class="text">d</span></span> </span><span class="potcle_point_p _js_potcle_point_p" style="left: 38em;top:32em"><span class="potcle_lw_p _js_potcle_lw_p" style="left: -2.2em;top: 0.58333em"><span class="text">P</span></span></span></div><div class="potmsg_result _js_potmsg_result"><div class="potmsg_body"><div class="potmsg_cpare _js_potmsg_cpare"><span class="text_d">d</span> <span class="text_cpare _js_text_cpare">></span> <span class="text_r">r</span></div><div class="potmsg_gx _js_potmsg_cpare"><div class="point_p_out"><span class="text_p">P</span>点在<span class="icon_yuan"></span><span class="text_o">O</span>外</div><div class="point_p_on hide_dom"><span class="text_p">P</span>点在<span class="icon_yuan"></span><span class="text_o">O</span>上</div><div class="point_p_in hide_dom"><span class="text_p">P</span>点在<span class="icon_yuan"></span><span class="text_o">O</span>内</div></div><div class="potmsg_bm _js_potmsg_bm"><a href="#" class="potmsg_btn _js_potmsg_btn"><span class="text text_show">隐藏点与圆的位置关系</span> <span class="text text_hide">显示点与圆的位置关系</span></a></div></div></div></div></div></div>]]></view><presenter><![CDATA[/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	__webpack_require__(6);
	__webpack_require__(2);
	__webpack_require__(3);
	__webpack_require__(5);
	__webpack_require__(7);
	module.exports = __webpack_require__(4);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _entry = __webpack_require__(2);

	var _entry2 = _interopRequireDefault(_entry);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	(function () {
	  var Presenter = BasicPresenter.extend({
	    metaInfo: {
	      name: 'PointAndCircle',
	      type: '',
	      subtype: ''
	    },
	    /**
	     * Presenter的初始化方法
	     * @private
	     */
	    $init: function $init() {
	      this._super();

	      this.$view = null;
	      this.model = null;
	    },
	    /**
	     * Presenter对外暴露的方法
	     */
	    _service_: {
	      constructor: function constructor(parent) {
	        this.parent = parent;
	      },
	      getExtendData: function getExtendData() {
	        var options = {};

	        return options;
	      },
	      setLocationProperties: function setLocationProperties(properties) {
	        // this.i18n = properties;
	        this.parent.$translator.setData(properties);
	      },
	      getQuestionInfo: function getQuestionInfo() {
	        return {
	          id: this.parent.model.question_id || '',
	          type_code: 'PointAndCircle',
	          type_name: '点与圆的位置关系',
	          url: '',
	          noExistStatistics: true,
	          noNeedQuizProgress: true
	        };
	      }

	    },
	    getService: function getService() {
	      var self = this;
	      self._service_.constructor(self);

	      return self._service_;
	    },
	    /** **以下开始为icPlayer的生命周期方法*****/
	    run: function run(view, model) {
	      var self = this;

	      self.$view = $(view);
	      self.model = model;
	      Object.assign(self.model, {
	        translator: self.$translator
	      });
	      _entry2.default.init(self.$view, self.model);
	      self.__interface = {
	        resizeScreen: function resizeScreen(data) {
	          _entry2.default.handleResizeScreen(eval(data.ratio));
	        }
	      };
	    },
	    pageShow: function pageShow() {},
	    pageLeave: function pageLeave() {},
	    destroy: function destroy() {
	      _entry2.default.destroy();
	    },
	    /** 如果不需要处理icplayer的状态恢复事件, 请将以下两个方法删除掉**/
	    getState: function getState() {},
	    setState: function setState(state, options) {}
	  });

	  window.AddonPointAndCircle_create = function () {
	    return new Presenter();
	  };
	})();

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _leftDrag = __webpack_require__(3);

	var _leftDrag2 = _interopRequireDefault(_leftDrag);

	var _rightBox = __webpack_require__(7);

	var _rightBox2 = _interopRequireDefault(_rightBox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  init: function init(_$view, _model) {
	    _leftDrag2.default.init(_$view, _model);
	    _rightBox2.default.init(_$view, _model);
	  },
	  destroy: function destroy() {
	    _leftDrag2.default.destroy();
	    _rightBox2.default.destroy();
	  },
	  handleResizeScreen: function handleResizeScreen(ratio) {
	    _leftDrag2.default.handleResizeScreen(ratio);
	  }
	};

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _utils = __webpack_require__(4);

	var _mouseSpeed = __webpack_require__(5);

	var _derectionDetect = __webpack_require__(6);

	var $view = null;
	var $pacMain = null;
	var $moveCircle = null;
	var $moveCircleP = null;
	var $moveLine = null;
	var $moveLineD = null;
	var $followLine = null;
	var $followLineR = null;
	var $mainCircle = null;
	var $centerCircle = null;
	var $centerCircleO = null;
	var centerR = 0;
	var mainR = 0;
	var moveR = 0;

	var minX = void 0,
	    minY = void 0,
	    maxX = void 0,
	    maxY = void 0;
	// 鼠标的最大移动范围

	var moveMinX = void 0,
	    moveMaxX = void 0,
	    moveMinY = void 0,
	    moveMaxY = void 0;
	var dis = void 0,
	    deg = void 0,
	    centerPos = void 0,
	    isCenterAdsorbed = void 0;
	var isOutSide = true;
	var isInside = false;
	var isMoving = false;
	var isShow = false;
	var isResizeSreen = false;
	var preMovPos = {
	  x: 0,
	  y: 0
	};
	var compareSymbol = void 0;

	function init(_$view, _model) {
	  $view = _$view;
	  $pacMain = _$view.find('._js_potcle_stage');
	  $moveCircle = _$view.find('._js_potcle_point_p');
	  $moveCircleP = _$view.find('._js_potcle_lw_p');
	  $moveLine = _$view.find('._js_potcle_line_d');
	  $moveLineD = $moveLine.find('.potcle_lw_d');
	  $followLine = _$view.find('._js_potcle_line_r');
	  $followLineR = $followLine.find('._js_potcle_lw_r');
	  $mainCircle = _$view.find('._js_potcle_circle');
	  $centerCircle = _$view.find('._js_potcle_circenter');
	  $centerCircleO = $centerCircle.find('.potcle_lw_o');
	  centerR = $centerCircle.outerWidth() / 2;
	  mainR = $mainCircle.outerWidth() / 2;
	  moveR = $moveCircle.outerWidth() / 2;
	  bindEvent();
	}
	function bindEvent() {
	  $(document).on('touchend mouseup', function (event) {
	    $moveCircle.removeClass('ui_btn_active');
	  });
	  $view.on('mousedown mousemove mouseup touchstart touchmove touchend', function (event) {
	    handler(event);
	  });
	  $view.on('POINTANDCIRCLE_ISSHOW', function (type, value) {
	    isShow = value;
	    (0, _utils.setDisplay)($moveLine, value);
	    // updateLine()
	  });
	}
	function unbindEvent() {
	  $view.off('mousedown mousemove mouseup touchstart touchmove touchend');
	  $view.off('POINTANDCIRCLE_ISSHOW');
	  centerR = 0;
	  mainR = 0;
	  moveR = 0;
	  minX = undefined;
	  minY = undefined;
	  maxX = undefined;
	  maxY = undefined;
	  moveMinX = undefined;
	  moveMaxX = undefined;
	  moveMinY = undefined;
	  moveMaxY = undefined;
	  dis = undefined;
	  deg = undefined;
	  centerPos = undefined;
	  isOutSide = true;
	  isInside = false;
	  isMoving = false;
	  isShow = false;
	  preMovPos.x = 0;
	  preMovPos.y = 0;
	}
	function handler(event) {
	  var eventType = (0, _utils.eventMapping)(event);
	  var pos = (0, _utils.getPagePos)(event);
	  var $target = $(event.target);
	  switch (eventType) {
	    case 'start':
	      if ($target.hasClass('_js_potcle_point_p')) {
	        $target.addClass('ui_btn_active');
	        isMoving = true;
	        isResizeSreen = false;
	        startHandler();
	      }
	      break;
	    case 'move':
	      if (isMoving) {
	        moveHandler(event, pos);
	      }
	      break;
	    case 'end':
	      isMoving = false;
	      $target.removeClass('ui_btn_active');
	      if ($target.hasClass('_js_potcle_point_p') && !isResizeSreen) {
	        isResizeSreen = false;
	        upHandler(event, pos);
	      }
	      break;
	  }
	}
	function startHandler() {
	  var mainOffset = $pacMain.offset();
	  var mainParOffset = $pacMain.parent().offset();
	  var mainCircleOffset = $mainCircle.offset();
	  minX = mainOffset.left + moveR;
	  minY = mainOffset.top + moveR;
	  maxX = mainOffset.left + $pacMain.innerWidth() - moveR;
	  maxY = mainOffset.top + $pacMain.innerHeight() - moveR;
	  // 鼠标的最大移动范围
	  moveMinX = mainParOffset.left + moveR / 2;
	  moveMaxX = mainParOffset.left + $pacMain.parent().innerWidth() - moveR;
	  moveMinY = mainParOffset.top - moveR / 4;
	  moveMaxY = mainParOffset.top + $pacMain.parent().innerHeight() + moveR / 2;
	  centerPos = {
	    x: mainR + mainCircleOffset.left,
	    y: mainR + mainCircleOffset.top
	  };
	}
	function moveHandler(event, pos) {
	  if (pos.x < moveMinX || pos.x > moveMaxX || pos.y < moveMinY || pos.y > moveMaxY) {
	    isMoving = false;
	    return;
	  }
	  // 限制点P的坐标
	  var leftX = pos.x < minX ? minX : pos.x > maxX ? maxX : pos.x;
	  var topY = pos.y < minY ? minY : pos.y > maxY ? maxY : pos.y;
	  dis = (0, _utils.getDis)({
	    x: leftX,
	    y: topY
	  }, centerPos);
	  deg = (0, _utils.calculateDeg)({
	    x: leftX,
	    y: topY
	  }, centerPos);
	  // 先判断点是否在圆上
	  if (!isOutSide && !isInside && dis < mainR + 2 * moveR && dis > mainR - 2 * moveR) {
	    adsorbed();
	    updateLine(pos);
	  } else {
	    (0, _utils.setPosition)($moveCircle, leftX - minX + moveR, topY - minY + moveR, 'px').removeClass('oncircle');
	    $moveLine.removeClass('oncircle');
	    updateLine(pos);
	  }
	  // 吸附
	  (0, _mouseSpeed.updateSpeed)(event, pos);
	  if ((0, _mouseSpeed.getSpeed)() < 80) {
	    var derection = (0, _derectionDetect.getDerection)(dis);
	    if (dis > mainR + moveR - 5 && dis < mainR + moveR + 2 && derection || dis < mainR - (moveR - 5) && dis > mainR - (moveR + 4) && !derection) {
	      $view.trigger('POINTANDCIRCLE_TIPS_CHANGE', '=');
	      adsorbed();
	      (0, _derectionDetect.resetDisArray)();
	      updateLine(pos);
	      return;
	    }
	    // 圆心吸附
	    if (dis < moveR + centerR + 5 && derection) {
	      isCenterAdsorbed = true;
	      isMoving = false;
	      (0, _derectionDetect.resetDisArray)();
	      $moveCircle.removeClass('ui_btn_active');
	      updateLine(pos);
	    } else {
	      isCenterAdsorbed = false;
	    }
	  }
	  updateDetai();
	}
	function upHandler(e, pos) {
	  if (dis < mainR + moveR + 3 && dis > mainR - (moveR + 5)) {
	    adsorbed();
	    updateLine(pos);
	    updateDetai();
	  }
	  if (pos.x < moveMinX || pos.x > moveMaxX || pos.y < moveMinY || pos.y > moveMaxY) {
	    isMoving = false;
	    $moveCircle.removeClass('ui_btn_active');
	    return;
	  }
	}
	function handleResizeScreen(ratio) {
	  isResizeSreen = true;
	  centerR = $centerCircle.outerWidth() / 2;
	  mainR = $mainCircle.outerWidth() / 2;
	  moveR = $moveCircle.outerWidth() / 2;
	  var left = parseFloat($moveCircle.css('left')) * ratio;
	  var top = parseFloat($moveCircle.css('top')) * ratio;
	  if ($moveCircle[0].style.left.indexOf('em') === -1) {
	    (0, _utils.setPosition)($moveCircle, left, top, 'px');
	  }
	  var width = parseFloat($moveLine.width()) * ratio;
	  if ($moveLine[0].style.width.indexOf('em') === -1) {
	    $moveLine.css('width', width);
	  }
	}
	/* 吸附 */
	function adsorbed() {
	  var newX = centerPos.x + mainR * Math.cos(deg / 360 * 2 * Math.PI);
	  var newY = centerPos.y + mainR * Math.sin(deg / 360 * 2 * Math.PI);
	  (0, _utils.setPosition)($moveCircle, newX - (minX - moveR), newY - (minY - moveR), 'px').addClass('oncircle');
	  dis = mainR;
	  $moveLine.css('width', dis + 'px').addClass('oncircle');
	  isOutSide = false;
	  isInside = false;
	}
	function updateDetai() {
	  if (dis > mainR + moveR - 5) {
	    if (compareSymbol === '>') {
	      return;
	    }
	    compareSymbol = '>';
	    $view.trigger('POINTANDCIRCLE_TIPS_CHANGE', compareSymbol);
	    isOutSide = true;
	    isInside = false;
	  } else if (dis < mainR - (moveR - 5)) {
	    if (compareSymbol === '<') {
	      return;
	    }
	    compareSymbol = '<';
	    $view.trigger('POINTANDCIRCLE_TIPS_CHANGE', compareSymbol);
	    isOutSide = false;
	    isInside = true;
	  } else {
	    compareSymbol = '=';
	    $view.trigger('POINTANDCIRCLE_TIPS_CHANGE', compareSymbol);
	  }
	}
	/* 更新线条角度和长度及字母的角度位置*/
	function updateLine(pos) {
	  preMovPos.x = pos && pos.x || preMovPos.x;
	  preMovPos.y = pos && pos.y || preMovPos.y;
	  // 改变字母O的坐标
	  if (isShow && deg) {
	    if (deg < 20 || deg > 190) {
	      (0, _utils.setPosition)($centerCircleO, -1.83333, 0.8);
	    } else {
	      (0, _utils.setPosition)($centerCircleO, 0.5, -3.2);
	    }
	  }
	  if (dis > moveR + centerR && dis < moveR + centerR + 10) {
	    (0, _utils.setPosition)($moveLineD, 0.5, 0);
	  }
	  (0, _utils.setRotateLen)($moveLine, deg, dis);
	  (0, _utils.setRotateLen)($moveLineD, -deg);
	  // 半径及字母r旋转的角度
	  if (isShow) {
	    (0, _utils.setRotateLen)($followLine, deg - 15);
	    (0, _utils.setRotateLen)($followLineR, -(deg - 15));
	  }
	  // 字母P位置
	  var p = {
	    left: Math.cos(deg / 360 * 2 * Math.PI) * 2,
	    top: Math.sin(deg / 360 * 2 * Math.PI) * 2
	  };
	  if (isInside) {
	    switch (true) {
	      case deg < -48:
	        p.left = p.left + 0.75;
	        break;
	      case deg < -38:
	        p.left = p.left - 0.75;
	        break;
	      case deg < -22:
	        p.left = p.left - 0.5;
	        p.top = p.top - 0.5;
	        break;
	      case deg < 10:
	        if (dis < moveR + centerR * 6) {
	          p.left = p.left + 2;
	        }
	        p.top = p.top - 1;
	        break;
	      case deg < 40:
	        break;
	      case deg < 60:
	        p.left = p.left - 1;
	        break;
	      case deg < 80:
	        p.left = p.left - 1.5;

	        break;
	      case deg < 120:
	        p.left = p.left - 1.5;
	        break;
	      case deg < 150:
	        p.left = p.left - 2;
	        break;
	      case deg < 180:
	        p.left = p.left - 2;
	        p.top = p.top - 1.5;
	        break;
	      case deg < 210:
	        p.left = p.left - 1.5;
	        p.top = p.top - 2.5;
	        break;
	      case deg < 240:
	        p.top = p.top - 2.5;
	        break;
	      default:
	        p.top = p.top - 2.5;
	        p.left = p.left + 0.5;
	    }
	  } else {
	    if (deg > 40 && deg < 220) {
	      p.top = 2;
	      p.left = -2;
	    } else {
	      p.top = -3;
	      p.left = 2;
	    }
	  }
	  // 边缘字母P的位置 top,left
	  if (preMovPos.x < minX + moveR * 2 || preMovPos.y < minY + moveR * 3) {
	    p.top = 2;
	    p.left = 0;
	  }
	  // right
	  if (preMovPos.x > maxX - moveR * 4) {
	    p.top = 2;
	    p.left = -1.5;
	  }
	  // bottom
	  if (preMovPos.y > maxY - moveR * 5) {
	    p.top = -3.8;
	    p.left = 0;
	  }
	  if (preMovPos.x > maxX - moveR * 4 && preMovPos.y > maxY - moveR * 5) {
	    p.left = -1.5;
	  }
	  (0, _utils.setPosition)($moveCircleP, p.left, p.top);
	  // 圆心吸附及一些字母位置改变
	  if (isCenterAdsorbed) {
	    (0, _utils.setPosition)($moveCircle, centerPos.x - (minX - moveR), centerPos.y - (minY - moveR), 'px');
	    (0, _utils.setPosition)($moveCircleP, -1.5, 0.8);
	    (0, _utils.setRotateLen)($moveLine, 0, 0);
	    (0, _utils.setRotateLen)($moveLineD, 0);
	    if (deg > 40 && deg < 200) {
	      $moveCircleP.css('top', '-2.5em');
	      (0, _utils.setPosition)($moveLineD, 2, -3);
	    } else {
	      (0, _utils.setPosition)($moveCircleP, -3.5, 0);
	      (0, _utils.setPosition)($moveLineD, -1, 1);
	    }
	    dis = 0;
	  }
	}

	exports.default = {
	  init: init,
	  destroy: unbindEvent,
	  handleResizeScreen: handleResizeScreen
	};

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function getPagePos(e, scale) {
	  var ev = e.originalEvent ? e.originalEvent : e;
	  var point = {};
	  scale = scale || 1;
	  switch (ev.type) {
	    case 'touchstart':
	    case 'touchmove':
	    case 'touchend':
	    case 'touchcancel':
	      point.x = ev.changedTouches[0].pageX / scale;
	      point.y = ev.changedTouches[0].pageY / scale;
	      return point;
	    default:
	      point.x = ev.pageX / scale;
	      point.y = ev.pageY / scale;
	      return point;
	  }
	}

	function eventMapping(e) {
	  var eventType = e.type;
	  var type = void 0;
	  switch (eventType) {
	    case 'touchstart':
	      // 阻止默认事件，不发射mouseEvent
	      e.preventDefault();
	      type = 'start';
	      break;
	    case 'mousedown':
	      type = 'start';
	      break;
	    case 'mousemove':
	    case 'touchmove':
	      type = 'move';
	      break;
	    case 'mouseup':
	    case 'touchend':
	      type = 'end';
	      break;
	  }
	  return type;
	}

	function calculateDeg(pos, centerPos) {
	  var moveRotate = 0;
	  var PI = Math.PI;
	  if (pos.x === centerPos.x) {
	    if (pos.y < centerPos.y) {
	      moveRotate = 2 * PI * 0.75;
	    } else {
	      moveRotate = 2 * PI * 0.25;
	    }
	  }

	  if (pos.x - centerPos.x < 0) {
	    moveRotate = Math.atan((pos.y - centerPos.y) / (pos.x - centerPos.x)) + PI;
	  } else {
	    moveRotate = Math.atan((pos.y - centerPos.y) / (pos.x - centerPos.x));
	  }
	  if (pos.y === centerPos.y) {
	    if (pos.x > centerPos.x) {
	      moveRotate = 2 * PI;
	    } else {
	      moveRotate = 2 * PI * 0.5;
	    }
	  }
	  return moveRotate / (2 * PI) * 360;
	}

	function getDis(pos1, pos2) {
	  return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2));
	}

	function setPosition($ele, x, y) {
	  var px = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'em';

	  $ele.css({
	    'top': y + px,
	    'left': x + px
	  });
	  return $ele;
	}
	function setRotateLen($ele, rad, len) {
	  $ele.css({
	    '-webkit-transform': 'rotate(' + rad + 'deg) translateZ(0)',
	    'transform': 'rotate(' + rad + 'deg) translateZ(0)'
	  });
	  if (len || len === 0) {
	    $ele.css({
	      'width': len + 'px'
	    });
	  }
	  return $ele;
	}

	function setDisplay($ele, value) {
	  value ? $ele.removeClass('hide_dom') : $ele.addClass('hide_dom');
	}

	exports.getPagePos = getPagePos;
	exports.eventMapping = eventMapping;
	exports.calculateDeg = calculateDeg;
	exports.getDis = getDis;
	exports.setPosition = setPosition;
	exports.setRotateLen = setRotateLen;
	exports.setDisplay = setDisplay;

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 *create by gps on 2017/3/30
	 */

	var speed = null;
	var preStatus = {
	  x: 0,
	  y: 0,
	  t: 0
	};

	function updateSpeed(event, pos) {
	  var deltaX = void 0;
	  var deltaY = void 0;
	  var deltaD = void 0;
	  var deltaT = void 0;
	  if (!(preStatus.x === undefined || preStatus.y === undefined || preStatus.t === undefined)) {
	    deltaX = pos.x - preStatus.x;
	    deltaY = pos.y - preStatus.y;
	    deltaD = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
	    deltaT = event.timeStamp - preStatus.t;
	    speed = deltaD / deltaT * 1000;
	  }

	  preStatus.x = pos.x;
	  preStatus.y = pos.y;
	  preStatus.t = event.timeStamp;
	}

	function getSpeed() {
	  return speed;
	}

	exports.updateSpeed = updateSpeed;
	exports.getSpeed = getSpeed;

/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var a = [];

	function getDerection(dis) {
	  var len = a.length;
	  if (len < 12) {
	    a.push(dis);
	  } else {
	    a.shift();
	    a.push(dis);
	  }

	  if (a[0] > a[3] && a[4] > a[7] && a[8] > a[11]) {
	    return true;
	  } else {
	    return false;
	  }
	};
	function resetDisArray() {
	  a = [];
	}
	exports.getDerection = getDerection;
	exports.resetDisArray = resetDisArray;

/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var $view = void 0;
	var $detailContainer = void 0;
	var $point_p_out = void 0;
	var $point_p_in = void 0;
	var $point_p_on = void 0;
	var $compareSymbol = void 0;

	var isShow = false;
	var translator = null;

	function init(_$view, _model) {
	  $view = _$view;
	  $detailContainer = _$view.find('._js_potmsg_result');
	  $compareSymbol = _$view.find('._js_text_cpare');
	  $point_p_out = _$view.find('.point_p_out');
	  $point_p_in = _$view.find('.point_p_in');
	  $point_p_on = _$view.find('.point_p_on');
	  translator = _model.translator;
	  bindEvent();
	  i18nRender();
	}
	function bindEvent() {
	  $view.on('mousedown touchstart', '._js_potmsg_bm', function (e) {
	    e.preventDefault();
	    $(e.currentTarget).find('._js_potmsg_btn').addClass('ui_btn_active btn_show');
	  }).on('mouseup touchend', '._js_potmsg_bm', function (e) {
	    e.preventDefault();
	    if (!isShow) {
	      $(e.currentTarget).find('._js_potmsg_btn').addClass('btn_show').removeClass('ui_btn_active');
	      $detailContainer.find('._js_potmsg_cpare').addClass('iu_text_show');
	      isShow = true;
	      $view.trigger('POINTANDCIRCLE_ISSHOW', true);
	    } else {
	      $(e.currentTarget).find('._js_potmsg_btn').removeClass('btn_show').removeClass('ui_btn_active');
	      $detailContainer.find('._js_potmsg_cpare').removeClass('iu_text_show');
	      isShow = false;
	      $view.trigger('POINTANDCIRCLE_ISSHOW', false);
	    }
	  });

	  $view.on('POINTANDCIRCLE_TIPS_CHANGE', function (type, value) {
	    if (value === '>') {
	      $point_p_out.removeClass('hide_dom').siblings('div').addClass('hide_dom');
	    } else if (value === '<') {
	      $point_p_in.removeClass('hide_dom').siblings('div').addClass('hide_dom');
	    } else {
	      $point_p_on.removeClass('hide_dom').siblings('div').addClass('hide_dom');
	    }
	    $compareSymbol.text(value);
	  });
	}
	function unbindEvent() {
	  $view.off('mousedown touchstart mouseup touchend');
	  $view.off('POINTANDCIRCLE_TIPS_CHANGE');
	}
	function i18nRender() {
	  var params = ['<span class="text_p">P</span>', '<span class="icon_yuan"></span><span class="text_o">O</span>'];
	  var btn_show = translator.translate('potmsg_btn_show');
	  var btn_hide = translator.translate('potmsg_btn_hide');
	  var point_p_out = translator.translate('point_p_out', params);
	  var point_p_in = translator.translate('point_p_in', params);
	  var point_p_on = translator.translate('point_p_on', params);
	  if (btn_show && btn_show !== 'ERROR') {
	    $view.find('.potmsg_bm .text_show').text(btn_hide);
	  }
	  if (btn_hide && btn_hide !== 'ERROR') {
	    $view.find('.potmsg_bm .text_hide').text(btn_show);
	  }
	  if (point_p_out && point_p_out !== 'ERROR') {
	    $view.find('.point_p_out').html(point_p_out);
	  }
	  if (point_p_on && point_p_on !== 'ERROR') {
	    $view.find('.point_p_on').html(point_p_on);
	  }
	  if (point_p_in && point_p_in !== 'ERROR') {
	    $view.find('.point_p_in').html(point_p_in);
	  }
	}

	exports.default = {
	  init: init,
	  destroy: unbindEvent
	};

/***/ }
/******/ ]);]]></presenter><resources><file src="./resources/wood/images/dashed_gray.png"/><file src="./resources/wood/images/dashed_red.png"/><file src="./resources/wood/images/icon_hide_act.png"/><file src="./resources/wood/images/icon_hide_nor.png"/><file src="./resources/wood/images/icon_show_act.png"/><file src="./resources/wood/images/icon_show_nor.png"/></resources></addon>