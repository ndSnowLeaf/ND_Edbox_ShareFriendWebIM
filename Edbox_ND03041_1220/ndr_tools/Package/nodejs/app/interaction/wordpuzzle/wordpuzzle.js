define("wordpuzzle/directive/wordpuzzle.directive",["components/site-directive/assets-select/assets-select","components/site-directive/error-tip/error-tip","components/site-directive/edit-box/new-edit-box","components/site-directive/foot-tool/time-box/new-time-box","components/site-directive/foot-tool/foot-tool","components/site-directive/contenteditable/contenteditable","components/site-services/charset.service"],function(){}),define(["app","wordpuzzle/directive/wordpuzzle.directive"],function(app){"use strict";app.controller("wordpuzzle_ctrl",["$scope","skin_service","$stateParams","CustomEditorService","CharsetService","$rootScope","$filter","$timeout",function($scope,skin_service,$stateParams,CustomEditorService,CharsetService,$rootScope,$filter,$timeout){function removeUnusedBoxes(currentCounter,activedBox){if(!(currentCounter!=removeUnusedBoxesCounter||$scope.rows.length<=MIN_HEIGHT&&$scope.rows[0].length<=MIN_WIDTH)){var rowIndex=MIN_HEIGHT,colIndex=MIN_WIDTH;activedBox&&(rowIndex=Math.max(activedBox.x,rowIndex),colIndex=Math.max(activedBox.y,colIndex));for(var i=$scope.rows.length-1;i>=rowIndex;i--){for(var isEmptyRow=!0,j=0;j<$scope.rows[0].length;j++)if($scope.rows[i][j].char){isEmptyRow=!1;break}if(!isEmptyRow)break;$scope.rows.splice(i,1)}for(var j=$scope.rows[0].length-1;j>=colIndex;j--){for(var isEmptyCol=!0,i=0;i<$scope.rows.length;i++)if($scope.rows[i][j].char){isEmptyCol=!1;break}if(!isEmptyCol)break;for(var i=0;i<$scope.rows.length;i++)$scope.rows[i].splice(j,1)}$scope.rows.length>=7||$scope.rows[0].length>=7?$scope.opts.wordboardClass=DIRECTION.NORMALBOX:$scope.opts.wordboardClass=DIRECTION.LARGEBOX}}function checkUnifiedwords(){var charBuffer="";angular.forEach($scope.rows,function(row){angular.forEach(row,function(col){col.char&&col.char.length>0&&(charBuffer+=col.char)})});var chineseChars=CharsetService.getChineses(charBuffer),isUnifiedwords=0===chineseChars.length||chineseChars.length===charBuffer.length;return isUnifiedwords||($scope.errorModel.errorText=$filter("translate")("wordpuzzle.not_unified_tip")),isUnifiedwords}function focusElement(element,immediate){immediate?element.focus():$timeout(function(){element.focus()},100)}function getBoxCoordinate(target){var $box;return $box="DIV"==angular.uppercase(target.tagName)?$(target):$(target).parents("div:first"),$box.hasClass("wordBox")?{x:$box.attr("boxX"),y:$box.attr("boxY")}:null}function onRightDirection(direction,boxSrc,boxDest){return isHorizontal(direction)?boxSrc.x==boxDest.x:boxSrc.y==boxDest.y}function selectBox(box){if($.inArray(box,boxesSelected)<=-1)if(null!=slidingDirection)if(isHorizontal(slidingDirection)){var startY=boxesSelected[boxesSelected.length-1].y;if(isReversed)for(var i=startY;i>box.y;i--){var boxTemp=$scope.rows[box.x-1][i-2];boxTemp.forNewtip=!0,boxesSelected.push(boxTemp)}else for(var i=startY;i<box.y;i++){var boxTemp=$scope.rows[box.x-1][i];boxTemp.forNewtip=!0,boxesSelected.push(boxTemp)}}else{var startX=boxesSelected[boxesSelected.length-1].x;if(isReversed)for(var i=startX;i>box.x;i--){var boxTemp=$scope.rows[i-2][box.y-1];boxTemp.forNewtip=!0,boxesSelected.push(boxTemp)}else for(var i=startX;i<box.x;i++){var boxTemp=$scope.rows[i][box.y-1];boxTemp.forNewtip=!0,boxesSelected.push(boxTemp)}}else box.forNewtip=!0,boxesSelected.push(box)}function stopSliding(cancel){if(isMouseDown=!1,cancel)angular.forEach(boxesSelected,function(box){box.forNewtip=!1});else if(boxesSelected.length<2)startBox.forNewtip=!1;else{var startBoxTemp,endBox,isValid=!0;isReversed?(endBox=startBox,startBoxTemp=boxesSelected[boxesSelected.length-1]):(startBoxTemp=startBox,endBox=boxesSelected[boxesSelected.length-1]),isHorizontal(slidingDirection)?endBox.y<$scope.rows[0].length&&$scope.rows[endBox.x-1][endBox.y].char?isValid=!1:startBoxTemp.y>1&&$scope.rows[startBoxTemp.x-1][startBoxTemp.y-2].char&&(isValid=!1):endBox.x<$scope.rows.length&&$scope.rows[endBox.x][endBox.y-1].char?isValid=!1:startBoxTemp.x>1&&$scope.rows[startBoxTemp.x-2][startBoxTemp.y-1].char&&(isValid=!1),isValid?(endBox=boxesSelected[boxesSelected.length-1],addTip(startBox.x==endBox.x?DIRECTION.HORIZONTAL:DIRECTION.VERTICAL,boxesSelected)):(angular.forEach(boxesSelected,function(box){box.forNewtip=!1}),$scope.errorModel.errorText=$filter("translate")("wordpuzzle.invalid_tip_onbox"))}}function getBeginBox(direction,boxesSelected){var boxFirst=boxesSelected[0],boxLast=boxesSelected[boxesSelected.length-1];return isHorizontal(direction)?boxLast.y>boxFirst.y?boxFirst:boxLast:boxLast.x>boxFirst.x?boxFirst:boxLast}function checkDuplicateTips(direction,boxesSelected){var isExistedTip=!1;return isHorizontal(direction)?angular.forEach(boxesSelected,function(box){isNotEmptyArray(box.tipsLinked)&&angular.forEach(box.tipsLinked,function(tip){if(isHorizontal(tip.direction))return isExistedTip=!0,!1})}):angular.forEach(boxesSelected,function(box){isNotEmptyArray(box.tipsLinked)&&angular.forEach(box.tipsLinked,function(tip){if(!isHorizontal(tip.direction))return isExistedTip=!0,!1})}),!isExistedTip||(angular.forEach(boxesSelected,function(box){box.forNewtip=!1}),$scope.errorModel.errorText=$filter("translate")("wordpuzzle.duplicate_tips_onbox"),!1)}function addTip(direction,boxesSelected){if(!checkDuplicateTips(direction,boxesSelected))return!1;var beginBox=getBeginBox(direction,boxesSelected),newTip={actived:!0,x:beginBox.x,y:beginBox.y,word:"",direction:direction,boxesLinked:boxesSelected};angular.forEach(boxesSelected,function(box){box.tipsLinked.push(newTip),newTip.word+=box.char}),isHorizontal(direction)?($scope.horizontalTips.push(newTip),beginBox.horizontalIndex=$scope.horizontalTips.length,$timeout(function(){focusElement($(".horizontalTip li:last-child input"),!0)},100)):($scope.verticalTips.push(newTip),beginBox.verticalIndex=$scope.verticalTips.length,$timeout(function(){focusElement($(".verticalTip li:last-child input"),!0)},100))}function focusWordBox(wordBox){null!=currentWordBox&&(currentWordBox.actived=!1),wordBox.actived=!0,currentWordBox=wordBox,focusElement($($(".wordboard li")[wordBox.x-1]).find("input")[wordBox.y-1])}function extendsWordBox(direction,fromBox,boxNum,chars){if(isHorizontal(direction)){for(var i=1;i<=boxNum;i++)angular.forEach($scope.rows,function(row,index){row.push({x:index+1,y:fromBox.y+i,tipsLinked:[]})}),chars&&chars.length>=i&&($scope.rows[fromBox.x-1][fromBox.y+i-1].char=chars.charAt(i-1));$scope.rows[0].length>7&&($scope.opts.wordboardClass=DIRECTION.NORMALBOX),$timeout(function(){focusWordBox($scope.rows[fromBox.x-1][fromBox.y+boxNum-1])},100)}else{for(var newRow,cols=$scope.rows[0].length,i=1;i<=boxNum;i++){newRow=[];for(var j=0;j<cols;j++)newRow.push({x:fromBox.x+i,y:j+1,tipsLinked:[]});$scope.rows.push(newRow),chars&&chars.length>=i&&($scope.rows[fromBox.x+i-1][fromBox.y-1].char=chars.charAt(i-1))}$scope.rows.length>7&&($scope.opts.wordboardClass=DIRECTION.NORMALBOX),$timeout(function(){focusWordBox($scope.rows[fromBox.x+boxNum-1][fromBox.y-1])},100)}}function deleteTip(tip,$index){isHorizontal(tip.direction)?$scope.horizontalTips.splice($index,1)[0]:$scope.verticalTips.splice($index,1)[0];var matchIndex;angular.forEach($scope.rows,function(row){angular.forEach(row,function(col){matchIndex=$.inArray(tip,col.tipsLinked),matchIndex>-1&&col.tipsLinked.splice(matchIndex,1),col.selected=col.forNewtip=!1})}),isHorizontal(tip.direction)?($scope.rows[tip.x-1][tip.y-1].horizontalIndex=null,$scope.horizontalTips.length>$index&&angular.forEach($scope.horizontalTips,function(item,index){$scope.rows[item.x-1][item.y-1].horizontalIndex&&($scope.rows[item.x-1][item.y-1].horizontalIndex=index+1)})):($scope.rows[tip.x-1][tip.y-1].verticalIndex=null,$scope.verticalTips.length>$index&&angular.forEach($scope.verticalTips,function(item,index){$scope.rows[item.x-1][item.y-1].verticalIndex&&($scope.rows[item.x-1][item.y-1].verticalIndex=index+1)}))}var DIRECTION={HORIZONTAL:"horizontal",VERTICAL:"vertical",LARGEBOX:"largeBox",NORMALBOX:"normalBox",SMALLBOX:"smallBox"},MAX_WIDTH=10,MAX_HEIGHT=10,MIN_WIDTH=5,MIN_HEIGHT=5;$scope.opts={wordboardClass:DIRECTION.LARGEBOX},$scope.errorModel={},$scope.model={title:"",skin:{code:"wood",css_url:"${ref-path}/edu/esp/preparecustomeditor/wordpuzzle/wood/css/wood.css",name:$filter("translate")("wordpuzzle.muwen"),package_url:"${ref-path}/edu/esp/preparecustomeditor/wordpuzzle/wood"},timer:{timer_type:"sequence",time_minute:"0",time_second:"0"},border:{width:MIN_WIDTH,height:MIN_HEIGHT},words:[],chars:[]},$rootScope.moduleScope=$scope,$scope.defaultTitleSetting={isCleared:!1,title:$filter("translate")("wordpuzzle.default.title")},$scope.model.title=$scope.defaultTitleSetting.title;var loadingData=function(id){$scope.isloadingData=!0,CustomEditorService.getQuestionInfoById(id).then(function(rtnData){rtnData?(""!=rtnData.skin.code?($scope.model=$scope.decodeData(rtnData),skin_service.set_skin_by_code($scope.model.skin.code,"v1")):($scope.showGuide=!0,$scope.model.id=rtnData.id,skin_service.set_skin_by_code($scope.model.skin.code,"v1")),$scope.errorModel.errorText="",$scope.isloadingData=!1,setValues()):$scope.errorModel.errorText=$filter("translate")("wordpuzzle.unvalidno")},function(error){$scope.errorModel.errorText=$filter("translate")("wordpuzzle.get_title_error")})};$scope.horizontalTips=[],$scope.verticalTips=[],$scope.rows=[];var isHorizontal=function(direction){return direction==DIRECTION.HORIZONTAL},isNotEmptyArray=function(array){return $.isArray(array)&&array.length>0},mapKey=function(x,y){return x+"&"+y},setValues=function(){var wordCoordinateMap=[];angular.forEach($scope.model.words,function(item){var charIndex=0;if(isHorizontal(item.direction))for(var x=item.start_axis.x,startIndex=item.start_axis.y,endIndex=item.end_axis.y,y=startIndex;y<=endIndex;y++)wordCoordinateMap[mapKey(x,y)]=item.word.charAt(charIndex++);else for(var y=item.start_axis.y,startIndex=item.start_axis.x,endIndex=item.end_axis.x,x=startIndex;x<=endIndex;x++)wordCoordinateMap[mapKey(x,y)]=item.word.charAt(charIndex++)});var coordinateTipsMap=[],tipCoordinateMap=[],tipCoordinate=null,horizontalIndex=0,verticalIndex=0;angular.forEach($scope.model.chars,function(item){if(angular.isObject(item.hints)){if(tipCoordinate={},""!=item.hints.horizontal){tipCoordinate.horizontalIndex=++horizontalIndex;var tip={chars:item.hints.horizontal,x:item.x,y:item.y,word:item.word.horizontal,direction:DIRECTION.HORIZONTAL};$scope.horizontalTips.push(tip);for(var endIndex=item.y+item.word.horizontal.length,y=item.y;y<endIndex;y++){var coordinateTips=coordinateTipsMap[mapKey(item.x,y)];coordinateTips||(coordinateTips=[],coordinateTipsMap[mapKey(item.x,y)]=coordinateTips),coordinateTips.push(tip)}}if(""!=item.hints.vertical){tipCoordinate.verticalIndex=++verticalIndex;var tip={chars:item.hints.vertical,x:item.x,y:item.y,word:item.word.vertical,direction:DIRECTION.VERTICAL};$scope.verticalTips.push(tip);for(var endIndex=item.x+item.word.vertical.length,x=item.x;x<endIndex;x++){var coordinateTips=coordinateTipsMap[mapKey(x,item.y)];coordinateTips||(coordinateTips=[],coordinateTipsMap[mapKey(x,item.y)]=coordinateTips),coordinateTips.push(tip)}}tipCoordinate.char=item.char,tipCoordinateMap[mapKey(item.x,item.y)]=tipCoordinate}});for(var cols,tipCoordinate,word,wordBox,rowNum=Math.min($scope.model.border.height,MAX_HEIGHT),colNum=Math.min($scope.model.border.width,MAX_WIDTH),i=1;i<=rowNum;i++){cols=[];for(var j=1;j<=colNum;j++)tipCoordinate=tipCoordinateMap[mapKey(i,j)],word=wordCoordinateMap[mapKey(i,j)],wordBox=tipCoordinate?{x:i,y:j,char:word?word:"",horizontalIndex:tipCoordinate.horizontalIndex,verticalIndex:tipCoordinate.verticalIndex,tipsLinked:coordinateTipsMap[mapKey(i,j)]?coordinateTipsMap[mapKey(i,j)]:[]}:{x:i,y:j,char:word?word:"",tipsLinked:coordinateTipsMap[mapKey(i,j)]?coordinateTipsMap[mapKey(i,j)]:[]},cols.push(wordBox);$scope.rows.push(cols)}(colNum>7||rowNum>7)&&($scope.opts.wordboardClass=DIRECTION.NORMALBOX),angular.forEach($scope.horizontalTips,function(tip){tip.boxesLinked=[];for(var i=0;i<tip.word.length;i++)tip.boxesLinked.push($scope.rows[tip.x-1][tip.y-1+i])}),angular.forEach($scope.verticalTips,function(tip){tip.boxesLinked=[];for(var i=0;i<tip.word.length;i++)tip.boxesLinked.push($scope.rows[tip.x-1+i][tip.y-1])})};$stateParams.id?loadingData($stateParams.id):(skin_service.set_skin_by_code($scope.model.skin.code,"v1"),setValues()),$scope.$on("changgedSkin",function(){$rootScope.scaleHtml()}),$scope.validPostData=function(){var modelData=$scope.model;if(""!=$.trim(modelData.title)){if(!isNotEmptyArray($scope.horizontalTips))return $scope.errorModel.errorText=$filter("translate")("wordpuzzle.no_horizontal_tip"),!1;if(!isNotEmptyArray($scope.verticalTips))return $scope.errorModel.errorText=$filter("translate")("wordpuzzle.no_vertical_tip"),!1;var isOk=!0;if(angular.forEach($scope.horizontalTips,function(tip){if(!tip.chars||0==tip.chars.length)return $scope.tipOnOver(tip),$scope.errorModel.errorText=$filter("translate")("wordpuzzle.empty_tip"),isOk=!1,!1}),angular.forEach($scope.verticalTips,function(tip){if(!tip.chars||0==tip.chars.length)return $scope.tipOnOver(tip),$scope.errorModel.errorText=$filter("translate")("wordpuzzle.empty_tip"),isOk=!1,!1}),isOk){var isUnifiedWord=checkUnifiedwords();if(!isUnifiedWord)return!1;var hasWords=!1;angular.forEach($scope.rows,function(row){isOk&&angular.forEach(row,function(col){isOk&&col.char&&col.char.length>0&&(hasWords=!0,isNotEmptyArray(col.tipsLinked)||($scope.errorModel.errorText=$filter("translate")("wordpuzzle.tip_word_notmatch"),isOk=!1))})}),hasWords||($scope.errorModel.errorText=$filter("translate")("wordpuzzle.no_words"),isOk=!1)}return isOk&&removeUnusedBoxes(++removeUnusedBoxesCounter),isOk}$scope.errorModel.errorText=$filter("translate")("wordpuzzle.no_title")},$scope.encodeData=function(model){var newModel=angular.copy(model);newModel.title=window.customHtmlEncode(newModel.title),newModel.border.width=$scope.rows[0].length,newModel.border.height=$scope.rows.length,newModel.words=[],newModel.chars=[];var coordinateTipsMap=[];return angular.forEach($scope.horizontalTips,function(tip){tip.word="",angular.forEach(tip.boxesLinked,function(box){tip.word+=box.char});var char={x:tip.x,y:tip.y,hints:{horizontal:window.customHtmlEncode(tip.chars)},word:{horizontal:tip.word}};coordinateTipsMap[mapKey(tip.x,tip.y)]=char,newModel.chars.push(char),newModel.words.push({word:tip.word,direction:DIRECTION.HORIZONTAL,start_axis:{x:tip.x,y:tip.y},end_axis:{x:tip.x,y:tip.y+tip.word.length-1}})}),angular.forEach($scope.verticalTips,function(tip){tip.word="",angular.forEach(tip.boxesLinked,function(box){tip.word+=box.char});var char=coordinateTipsMap[mapKey(tip.x,tip.y)];if(char)char.hints.vertical=tip.chars,char.word.vertical=tip.word;else{var char={x:tip.x,y:tip.y,hints:{vertical:window.customHtmlEncode(tip.chars)},word:{vertical:tip.word}};newModel.chars.push(char)}newModel.words.push({word:tip.word,direction:DIRECTION.VERTICAL,start_axis:{x:tip.x,y:tip.y},end_axis:{x:tip.x+tip.word.length-1,y:tip.y}})}),newModel},$scope.decodeData=function(model){var newModel=angular.copy(model);return newModel.title=window.customHtmlDecode(newModel.title),angular.forEach(newModel.chars,function(item){angular.isObject(item.hints)&&(item.hints.horizontal=window.customHtmlDecode(item.hints.horizontal),item.hints.vertical=window.customHtmlDecode(item.hints.vertical))}),newModel};var slidingDirection,isReversed,startBox,boxesSelected,removeUnusedBoxesCounter=0,isMouseDown=!1;$scope.mousedown=function($event){var coordinate=getBoxCoordinate($event.target);coordinate&&(startBox=$scope.rows[coordinate.x-1][coordinate.y-1],startBox.char&&(isMouseDown=!0,boxesSelected=[],slidingDirection=null,startBox.forNewtip=!0,$.inArray(startBox,boxesSelected)<=-1&&boxesSelected.push(startBox)))},$scope.mouseover=function($event){var coordinate=getBoxCoordinate($event.target);if(isMouseDown){if(null==slidingDirection&&boxesSelected.length>1)if(boxesSelected[0].x==boxesSelected[1].x)slidingDirection=DIRECTION.HORIZONTAL,isReversed=boxesSelected[0].y>boxesSelected[1].y;else{if(boxesSelected[0].y!=boxesSelected[1].y)return stopSliding(!0),!1;slidingDirection=DIRECTION.VERTICAL,isReversed=boxesSelected[0].x>boxesSelected[1].x}if(coordinate){var box=$scope.rows[coordinate.x-1][coordinate.y-1];!box.char||null!=slidingDirection&&!onRightDirection(slidingDirection,boxesSelected[boxesSelected.length-1],box)?stopSliding():selectBox(box)}else stopSliding(),angular.forEach(boxesSelected,function(box){box.forNewtip=!1})}if(!isMouseDown&&coordinate){var box=$scope.rows[coordinate.x-1][coordinate.y-1];isNotEmptyArray(box.tipsLinked)&&angular.forEach(box.tipsLinked,function(tip){tip.selected=!0,angular.forEach(tip.boxesLinked,function(box){box.selected=!0})})}},$scope.mouseup=function($event){if(isMouseDown){var coordinate=getBoxCoordinate($event.target);selectBox($scope.rows[coordinate.x-1][coordinate.y-1]),stopSliding()}},$scope.mouseleave=function($event,item){isNotEmptyArray(item.tipsLinked)&&angular.forEach(item.tipsLinked,function(tip){tip.selected=!1,tip.chars&&(tip.actived=!1),angular.forEach(tip.boxesLinked,function(box){box.selected=!1,isMouseDown||(box.forNewtip=!1)})})};var currentWordBox=null;$scope.activeWordBox=function(item,$event){++removeUnusedBoxesCounter,item.actived||(null!=currentWordBox&&(currentWordBox.actived=!1),item.actived=!0,currentWordBox=item,$scope.textDirection=DIRECTION.HORIZONTAL,focusElement("DIV"==angular.uppercase($event.target.tagName)?$($event.target).find("input"):$($event.target).parents("div:first").find("input")))},$scope.keydownOnBoard=function($event){if(229==$event.keyCode||197==$event.keyCode)isChineseInput=!0;else if(isChineseInput=!1,currentWordBox)switch($event.keyCode){case 8:!currentWordBox.char&&currentWordBox.y>1&&focusWordBox($scope.rows[currentWordBox.x-1][currentWordBox.y-2]);break;case 13:$scope.textDirection=DIRECTION.VERTICAL;break;case 37:currentWordBox.y>1&&focusWordBox($scope.rows[currentWordBox.x-1][currentWordBox.y-2]);break;case 38:currentWordBox.x>1&&focusWordBox($scope.rows[currentWordBox.x-2][currentWordBox.y-1]);break;case 39:currentWordBox.y<$scope.rows[0].length?focusWordBox($scope.rows[currentWordBox.x-1][currentWordBox.y]):currentWordBox.y<MAX_WIDTH&&extendsWordBox(DIRECTION.HORIZONTAL,currentWordBox,1);break;case 40:currentWordBox.x<$scope.rows.length?focusWordBox($scope.rows[currentWordBox.x][currentWordBox.y-1]):currentWordBox.x<MAX_HEIGHT&&extendsWordBox(DIRECTION.VERTICAL,currentWordBox,1)}};var isChineseInput=!1;$scope.changeOnBox=function($event,item){if(item.char){if(item.char=CharsetService.getChineseAlpha(item.char),item.char||($scope.errorModel.errorText=$filter("translate")("wordpuzzle.char_wrong_tip")),item.char.length>1){var chars=item.char;if(isChineseInput&&(chars=CharsetService.getChineses(item.char)),isHorizontal($scope.textDirection)){var colNum=$scope.rows[0].length,fromBox=item;if(chars.length>0)if(currentWordBox.y==MAX_WIDTH)item.char=chars.charAt(1);else{item.char=chars.charAt(0);for(var i=0;i<chars.length-1;i++)item.y+i<colNum&&(fromBox=$scope.rows[item.x-1][item.y+i],fromBox.char=chars.charAt(i+1));if(item.y+chars.length>colNum&&colNum<MAX_WIDTH){var extendNum=Math.min(MAX_WIDTH-colNum,item.y+chars.length-colNum-1);extendsWordBox($scope.textDirection,fromBox,extendNum,chars.substring(fromBox.y-item.y+1))}else fromBox!=item&&focusWordBox(fromBox)}else item.char=""}else{var rowNum=$scope.rows.length,fromBox=item;if(chars.length>0)if(currentWordBox.x==MAX_HEIGHT)item.char=chars.charAt(1);else{item.char=chars.charAt(0);for(var i=0;i<chars.length-1;i++)item.x+i<rowNum&&(fromBox=$scope.rows[item.x+i][item.y-1],fromBox.char=chars.charAt(i+1));if(item.x+chars.length>rowNum&&rowNum<MAX_HEIGHT){var extendNum=Math.min(MAX_HEIGHT-rowNum,item.x+chars.length-rowNum-1);extendsWordBox($scope.textDirection,fromBox,extendNum,chars.substring(fromBox.x-item.x+1))}else fromBox!=item&&focusWordBox(fromBox)}else item.char=""}}item.char.length>0&&(isChineseInput?$timeout(function(){checkUnifiedwords()},100):checkUnifiedwords())}},$scope.blurOnBox=function($event,item){if(item.actived=!1,!item.char||0==item.char.length){item.horizontalIndex=null,item.verticalIndex=null;for(var length=item.tipsLinked.length,i=0;i<length;i++){var tip=item.tipsLinked[0],$index=-1;$index=isHorizontal(tip.direction)?$.inArray(tip,$scope.horizontalTips):$.inArray(tip,$scope.verticalTips),deleteTip(tip,$index)}}$timeout(function(counter){return function(){removeUnusedBoxes(counter)}}(++removeUnusedBoxesCounter),100)},$scope.focusOnBox=function(item){removeUnusedBoxes(++removeUnusedBoxesCounter,item)};var currentTipBox;$scope.activeTipBox=function(item,$event){currentTipBox&&(currentTipBox.actived=!1),item.actived=!0,currentTipBox=item,focusElement("LI"==angular.uppercase($event.target.tagName)?$($event.target).find("input"):$($event.target).parents("li:first").find("input"))},$scope.tipOnBlur=function(item){item.actived=!1,item.text_s=CharsetService.getTextBytes(item.chars)>51},$scope.tipOnOver=function(item){item.selected=!0,angular.forEach(item.boxesLinked,function(box){box.selected=!0})},$scope.tipOnOut=function(item){item.selected=!1,angular.forEach(item.boxesLinked,function(box){box.selected=box.forNewtip=!1})},$scope.saveTip=function($event,item){13==$event.keyCode&&(item.actived=!1)},$scope.removeTip=function($event,tip,$index){deleteTip(tip,$index),$event.stopPropagation&&$event.stopPropagation(),$event.preventDefault&&$event.preventDefault(),$event.cancelBubble=!0,$event.returnValue=!1},$scope.returnStyle=function(box){if(!isMouseDown&&coordinate){var box=$scope.rows[coordinate.x-1][coordinate.y-1];isNotEmptyArray(box.tipsLinked)&&angular.forEach(box.tipsLinked,function(tip){tip.selected=!0,angular.forEach(tip.boxesLinked,function(box){box.selected=!0,isHorizontal(tip.direction)?box.hasHorizontal=!0:box.hasVertical=!0})})}return!0}}])});